<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[个人博客]]></title>
  <link href="http://danielxu.github.com/atom.xml" rel="self"/>
  <link href="http://danielxu.github.com/"/>
  <updated>2013-11-30T17:54:20+08:00</updated>
  <id>http://danielxu.github.com/</id>
  <author>
    <name><![CDATA[徐大雨]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[查看Xocde编译优化后的图片(PNG)]]></title>
    <link href="http://danielxu.github.com/blog/2013/05/02/ios-optimizations-image/"/>
    <updated>2013-05-02T14:00:00+08:00</updated>
    <id>http://danielxu.github.com/blog/2013/05/02/ios-optimizations-image</id>
    <content type="html"><![CDATA[<p>Xcode开发工具，在编译APP的时候，会把APP内配图（PNG）进行优化。优化的动作是由pngcrush工具完成的，而优化后的图片文件是不能直接查看。</p>

<p>那么如果想查看这样优化过后的图片，就需要使用pngcrush撤销这些图片的优化。下面是命令：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>xudayu@DayuXu:Test.app/<span class="nv">$ </span><span class="k">for </span>file in <span class="sb">`</span>ls | grep png<span class="sb">`</span>; <span class="k">do</span> /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/pngcrush -revert-iphone-optimizations -q <span class="nv">$file</span> ~/Desktop/img/<span class="nv">$file</span>;<span class="k">done</span>;
</span></code></pre></td></tr></table></div></figure>




<!--more-->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS界面设计切图小结]]></title>
    <link href="http://danielxu.github.com/blog/2013/04/12/ios-ui-design/"/>
    <updated>2013-04-12T11:24:00+08:00</updated>
    <id>http://danielxu.github.com/blog/2013/04/12/ios-ui-design</id>
    <content type="html"><![CDATA[<h2>1.基本尺寸</h2>

<h3>（1）界面</h3>

<p><img src="http://danielxu.github.com/images/uidesign/iOS_ui_design_1.png"></p>

<p>实际设计时按：</p>

<ul>
<li>iPhone4、4s：640px*960px</li>
<li>iPhone5:  640px*1136px</li>
<li>iPad：1536px*2048px</li>
</ul>


<h3>(2) 图标：</h3>

<ul>
<li>1024px*1024px  圆角180px</li>
<li>提交1024px*1024px 方角 png格式图片</li>
</ul>


<!--more-->


<h2>2.图形部件及字体</h2>

<h3>（1） 为显示清晰</h3>

<ul>
<li>所有图形部件尺寸必须为偶数</li>
<li>样式中阴影、发光、描边的数值也必须为偶数</li>
</ul>


<h3>（2） 为方便用户点击</h3>

<ul>
<li>所有可点击的部件需大于88px*88px</li>
<li>若图片本身不够，可在切图时补足空白像素
例如：<img src="http://danielxu.github.com/images/uidesign/iOS_ui_design_2.png"></li>
</ul>


<h3>（3）为减小程序体积</h3>

<p>建议尽量使用可平铺图案设计界面</p>

<h3>（4）苹果默认字体</h3>

<p>在pc上没有完全一样的字体，Hiragino Sans GB苹果丽黑最相近
一般做效果图时，用Hiragino Sans GB（包括中英文）代替即可，也可以用方正黑体代替</p>

<ul>
<li>所有字体使用偶数字号进行设计</li>
<li>苹果丽黑有W3、W6两种粗细的字体</li>
</ul>


<p><img src="http://danielxu.github.com/images/uidesign/iOS_ui_design_3.png"></p>

<p>附下载地址：<a href="http://www.iplaysoft.com/hiragino-sans.html">苹果丽黑</a></p>

<h3>（5）系统可以做到如下字体效果</h3>

<p><img src="http://danielxu.github.com/images/uidesign/iOS_ui_design_4.png"></p>

<p>即，向特定方向1px（做效果图时做2px的效果）投影，需给出字体颜色、阴影颜色。
一般不建议按钮上的文字做特殊效果。如果必要， 需将字体和按钮一起切图。</p>

<h3>（6）导航栏中的文字一般为40点W6</h3>

<p><img src="http://danielxu.github.com/images/uidesign/iOS_ui_design_5.png"></p>

<h2>3.切图提示</h2>

<h3>(1）所有切图必须为偶数</h3>

<p>先根据Retina屏幕切图（即640<em>960/640</em>1136/1536*2048），后将切图缩为普通屏幕尺寸。
（有特殊图片需要单独制作）</p>

<h3>（2）可平铺部件切图时可如下图：</h3>

<p><img src="http://danielxu.github.com/images/uidesign/iOS_ui_design_6.png"></p>

<p>带圆角按钮切图时可如下图</p>

<p><img src="http://danielxu.github.com/images/uidesign/iOS_ui_design_7.png"></p>

<p>同理</p>

<p><img src="http://danielxu.github.com/images/uidesign/iOS_ui_design_8.png"></p>

<p>并在效果图中标出具体大小</p>

<p>标注软件推荐：<a href="http://www.appinn.com/dorado/">dorado</a></p>

<h3>（3）导航栏和标签栏下的阴影程序可以自动生成，可不切，如图：</h3>

<p><img src="http://danielxu.github.com/images/uidesign/iOS_ui_design_9.png"></p>

<p><img src="http://danielxu.github.com/images/uidesign/iOS_ui_design_10.png"></p>

<p>若不满意默认阴影效果，可以单独切2px宽的阴影，如图：</p>

<p><img src="http://danielxu.github.com/images/uidesign/iOS_ui_design_11.png"></p>

<p>如有异形阴影如：</p>

<p><img src="http://danielxu.github.com/images/uidesign/iOS_ui_design_12.png"></p>

<p>需切整条阴影，并与攻城师说明。</p>

<h3>（4）所有按钮需有两种状态——正常状态和按下状态</h3>

<h3>（6）一般情况下切图格式为png24</h3>

<ul>
<li>若个别图片jpg比png小很多，可用jpg</li>
<li>但欢迎页、icon必须为png，在不影响显示效果的前提下，可以考虑用png8</li>
</ul>


<h2>4.命名</h2>

<h3>（1）图片命名后缀</h3>

<ul>
<li><p>根据Retina屏幕的切图文件名后加@2x，普通屏幕尺寸不用加。</p></li>
<li><p>欢迎页、背景等需要对iPhone5另外切图的文件名后加-568h@2x</p></li>
</ul>


<h3>（2）命名建议</h3>

<p>建议采用如下方法命名，如：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>切图性质_功能相关描述_图片描述（可无）_状态说明（可无）@2x.png</span></code></pre></td></tr></table></div></figure>


<p>用例:</p>

<ul>
<li>Retina屏幕切图</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bg_booksnum_pressed@2x.png
</span><span class='line'>ico_arrow_blue@2x.png
</span><span class='line'>btn_blue_pressed@2x.png
</span><span class='line'>pic_books_blue@2x.png
</span><span class='line'>bg_main-568h@2x.png</span></code></pre></td></tr></table></div></figure>


<ul>
<li>普通屏幕切图</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>​bg_booksnum_pressed.png 
</span><span class='line'>ico_arrow_blue.png
</span><span class='line'>btn_blue_pressed.png
</span><span class='line'>pic_books_blue.png
</span><span class='line'>按下状态切图命名后加_pressed</span></code></pre></td></tr></table></div></figure>


<ul>
<li>另外贴个建议命名备忘</li>
</ul>


<p><img src="http://danielxu.github.com/images/uidesign/iOS_ui_design_13.png"></p>

<h2>参考</h2>

<ul>
<li><a href="http://danielxu.github.com/files/uidesign/iOS_UI_design_1.pdf">iOS交互设计指南翻译</a></li>
<li><a href="http://developer.apple.com/library/ios/#documentation/userexperience/conceptual/mobilehig/IconsImages/IconsImages.html">iOS设计指南·官方</a></li>
<li><a href="http://iconhandbook.co.uk/reference/chart/">iconhandbook</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[开发工具错误及解决汇总]]></title>
    <link href="http://danielxu.github.com/blog/2013/04/10/tools-error-handling/"/>
    <updated>2013-04-10T09:52:00+08:00</updated>
    <id>http://danielxu.github.com/blog/2013/04/10/tools-error-handling</id>
    <content type="html"><![CDATA[<h2>升级到Xcode 4.6.1 添加设备和刷新Provisioning Profiles崩溃</h2>

<p>在Xocde从低版本一直升级到最新的4.6.1后，在使用 Use for Development、“Add Device to Provisioning Portal”和刷新Provisioning Profiles的时候，会出现崩溃的现象，基本上是100%重现，下面就是解决办法（如果你是新安装的Xcode4.6.1应该是不会出现这个问题的）：</p>

<p>参考：http://stackoverflow.com/questions/15659315/xcode-4-6-1-crashes-whenever-i-try-to-add-my-device-to-the-provisioning-portal</p>

<p>其实，主要是删掉 “~/Library/Developer/Xcode/”目录下的connect1.apple.com*的db文件</p>

<!--more-->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GoAgentX 智能代理]]></title>
    <link href="http://danielxu.github.com/blog/2013/02/18/goagentx-privoxy/"/>
    <updated>2013-02-18T12:29:00+08:00</updated>
    <id>http://danielxu.github.com/blog/2013/02/18/goagentx-privoxy</id>
    <content type="html"><![CDATA[<h2>GoAgent &amp; GoAgentX</h2>

<p><a href="https://code.google.com/p/goagent/">GoAgent</a>是一个基于Google App Engine的翻墙工具。</p>

<p><a href="https://github.com/liuyix/GoAgentX">GoAgentX</a> 是一个在 Mac OS X 下使用代理服务的图形界面控制软件，方便一般用户在 Mac OS X 上配置和使用 goagent、west-chamber-season-3、SSH 以及 stunnel。</p>

<p>安装教程可自行Google搜索。</p>

<!--more-->


<h2>步骤1：申请创建一个Application</h2>

<h3>1、申请Google App Engine账号</h3>

<p>登录http://appengine.google.com，如果你已经拥有一个Gmail账户，直接输入账号密码就可以登录；如果没有则需要新申请一个Gmail账户。</p>

<h3>2、创建Application</h3>

<p><img src="http://danielxu.github.com/images/goagnet/1.jpg"></p>

<h3>3、通过短信验证你的账户</h3>

<p>需要短信验证才可以进行下一步操作，Country and Carrier（国家和运营商）处选择Other，Mobile Number（手机号码）处填写你的个人手机号码号码，格式为+8613912345678</p>

<p><img src="http://danielxu.github.com/images/goagnet/2.jpg"></p>

<h3>4、将手机收到的验证码输入并Send</h3>

<p>你将会收到谷歌发给你的短信，短信内容大致为：Google App Engine：******（六位数字）。</p>

<p><img src="http://danielxu.github.com/images/goagnet/3.jpg"></p>

<h3>5、创建一个属于你的Application</h3>

<ul>
<li>1）输入一个Application ID，允许使用英文字母和短横杆；</li>
<li>2）点击Check Available，检查一下是否可用；</li>
<li>3）输入Application名称，这里可以随便填；</li>
<li>4）勾选I accept these terms，即接受协议；</li>
<li>5）最后Creat Application</li>
</ul>


<p><img src="http://danielxu.github.com/images/goagnet/4.jpg"></p>

<p>Final -当你看到以下画面，说明你已经成功创建一个 Application</p>

<p><img src="http://danielxu.github.com/images/goagnet/5.jpg"></p>

<p>注：每个Gmail账户最多只能够创建10个Google App Engine应用，每个应用每天有1GB免费流量。如果你经常下载或者观看视频，建议多创建几个Google App Engine应用。</p>

<h2>步骤2：修改谷歌账号两步验证</h2>

<h3>1、进入设置</h3>

<p>进入谷歌账户设置页面https://www.google.com/settings，在&#8221;安全性&#8221;-&#8220;两步认证&#8221;处开始进行设置</p>

<p><img src="http://danielxu.github.com/images/goagnet/6.jpg"></p>

<h3>2、手机设置</h3>

<p>此处你需要点击发送验证码，获取验证码后提交确认进入下一步</p>

<p><img src="http://danielxu.github.com/images/goagnet/8.jpg"></p>

<h3>3、验证计算机</h3>

<p>如果当前计算机不是你个人的计算机，不要勾选信任此计算机；</p>

<p><img src="http://danielxu.github.com/images/goagnet/9.jpg"></p>

<h3>4、最后</h3>

<p>激活</p>

<p><img src="http://danielxu.github.com/images/goagnet/10.jpg"></p>

<p>开始为你的Application创建密码</p>

<p><img src="http://danielxu.github.com/images/goagnet/11.jpg"></p>

<p>生成密码</p>

<p><img src="http://danielxu.github.com/images/goagnet/12.jpg"></p>

<p>记下这里生成的密码</p>

<p><img src="http://danielxu.github.com/images/goagnet/13.jpg"></p>

<p>以上步骤有可能有些地方会稍微不同，不过总体来说就是这样，应该大家照着图来做都可以做到这步</p>

<h2>步骤3：GoAgentX</h2>

<p>把下载好的GoAgentX安装上，打开。</p>

<h3>设置AppEngine信息</h3>

<p><img src="http://danielxu.github.com/images/goagnet/14.png"></p>

<ul>
<li>App ID是你刚才申请的那个</li>
<li>用户名是你gmail邮箱</li>
<li>密码这里要注意了，这个不是gmail邮箱的密码，是上面第4步最后一个操作生成的密码。</li>
<li>服务密码可设置也可不设置</li>
</ul>


<h3>部署goagent服务端</h3>

<p><img src="http://danielxu.github.com/images/goagnet/16.png"></p>

<p>点击启动，进行服务端部署，部署好后在服务端配置中添入App Engine App ID</p>

<p><img src="http://danielxu.github.com/images/goagnet/17.png"></p>

<p>最后在此界面选择goagent，启动</p>

<p><img src="http://danielxu.github.com/images/goagnet/18.png"></p>

<p>其他方面的配置，可Google搜索。</p>

<h2>步骤4：浏览器配置</h2>

<p><a href="https://chrome.google.com/webstore/detail/proxy-switchysharp/dpplabbmogkhghncfbfdeeokoefdjegm">SwitchySharp插件</a>，SwitchySharp插件加上自动更新的“墙”List（地址见下图），我们就可以在浏览器中享受无墙的世界了。</p>

<p><img src="http://danielxu.github.com/images/goagnet/switch-sharp.png"></p>

<h2>Privoxy（与GoAgent配合）</h2>

<p>使用GoAgentX的话一般不需要配置这个</p>

<p>Privoxy是一个智能代理切换软件，它的使用必须基于GoAgent或其它已部署好的代理服务。下面介绍如何安装和配置privoxy。</p>

<h3>安装</h3>

<p>使用brew就可以一键安装：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew install privoxy
</span></code></pre></td></tr></table></div></figure>


<h3>自动启动</h3>

<p>设置好自动启动后，我们就不用管它了。方法如下：</p>

<p>切换到/Library/LaunchAgents目录，用sudo vim新建一个名为local.privoxy.plist的文件，文件内容如下所示：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="cp">&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;</span>
</span><span class='line'><span class="nt">&lt;plist</span> <span class="na">version=</span><span class="s">&quot;1.0&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;dict&gt;</span>
</span><span class='line'>    <span class="nt">&lt;key&gt;</span>Label<span class="nt">&lt;/key&gt;</span>
</span><span class='line'>    <span class="nt">&lt;string&gt;</span>local.arcueid.privoxy<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>    <span class="nt">&lt;key&gt;</span>ProgramArguments<span class="nt">&lt;/key&gt;</span>
</span><span class='line'>    <span class="nt">&lt;array&gt;</span>
</span><span class='line'>        <span class="nt">&lt;string&gt;</span>/usr/local/sbin/privoxy<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>        <span class="nt">&lt;string&gt;</span>--no-daemon<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>        <span class="nt">&lt;string&gt;</span>/usr/local/etc/privoxy/config<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/array&gt;</span>
</span><span class='line'>    <span class="nt">&lt;key&gt;</span>RunAtLoad<span class="nt">&lt;/key&gt;</span>
</span><span class='line'>    <span class="nt">&lt;true/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;key&gt;</span>KeepAlive<span class="nt">&lt;/key&gt;</span>
</span><span class='line'>    <span class="nt">&lt;true/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;key&gt;</span>StandardErrorPath<span class="nt">&lt;/key&gt;</span>
</span><span class='line'>    <span class="nt">&lt;string&gt;</span>/usr/local/Cellar/privoxy/3.0.19/sbin/privoxy.log<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>    <span class="nt">&lt;key&gt;</span>StandardOutPath<span class="nt">&lt;/key&gt;</span>
</span><span class='line'>    <span class="nt">&lt;string&gt;</span>/usr/local/Cellar/privoxy/3.0.19/sbin/privoxy.log<span class="nt">&lt;/string&gt;</span>
</span><span class='line'><span class="nt">&lt;/dict&gt;</span>
</span><span class='line'><span class="nt">&lt;/plist&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>编辑完成后，执行如下命令，就可以把privoxy设置成开机自动启动了：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo launchctl load /Library/LaunchAgents/local.privoxy.plist
</span></code></pre></td></tr></table></div></figure>


<p>可以用如下2条命令验证privoxy已经启动了。一是用ps查看是否有privoxy进程，二是查看privoxy默认监听的8118端口是否已经打开。如下所示：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>tangqiao LaunchAgents<span class="o">]</span><span class="nv">$ps</span> aux  | grep privoxy
</span><span class='line'>tangqiao       25641   0.3  0.0  2436516    492 s001  U+    5:31下午   0:00.00 grep --color<span class="o">=</span>auto privoxy
</span><span class='line'>root           17984   0.0  0.2  2477764  17452   ??  Ss   10:13上午   0:50.28 /usr/local/Cellar/privoxy/3.0.19/sbin/privoxy --no-daemon /usr/local/etc/privoxy/config
</span><span class='line'><span class="o">[</span>tangqiao LaunchAgents<span class="o">]</span><span class="nv">$netstat</span> -an | grep 8118
</span><span class='line'>tcp4       0      0  127.0.0.1.8118         *.*                    LISTEN
</span></code></pre></td></tr></table></div></figure>


<h3>配置</h3>

<p>我们需要配置Provixy才能使用它。配置步骤如下：</p>

<p>一. 用vim打开privoxy的配置文件：vim /usr/local/etc/privoxy/config
在最后增加如下内容：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>actionsfile wall.action
</span></code></pre></td></tr></table></div></figure>


<p>二. 在/usr/local/etc/privoxy/目录下新建一个名为 wall.action的文件，然后在上面添加如下内容：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">{</span>+forward-override<span class="o">{</span>forward 0.0.0.0:8087<span class="o">}}</span>
</span><span class='line'>.google.com.hk
</span><span class='line'>.facebook.com
</span><span class='line'>.google.com
</span><span class='line'>.fbcdn.net
</span><span class='line'>.gstatic.com
</span><span class='line'>.gmail.com
</span><span class='line'>.twitter.com
</span><span class='line'>.youtube.com
</span></code></pre></td></tr></table></div></figure>


<p>该内容第一行表示接下来的内容会智能走端口为8087的代理，后面每行一个地址。你可以随时将你想增加的内容添加进去。该配置文件的官方详细说明文档<a href="http://www.privoxy.org/3.0.19/user-manual/actions-file.html#ACTIONS-FILE">在这里</a>。</p>

<p>三. 打开mac的代理设置，将“Web代理”和&#8221;安全Web代理&#8221;都设置成127.0.0.1，端口为8118。如下图所示：</p>

<p>  <img src="http://danielxu.github.com/images/goagnet/mac-proxy.png"></p>

<h3>Tips</h3>

<ol>
<li><p>如果你的GoAgent监听在8087端口，而Privoxy监听在8118端口，那么到这一步，你就可以让你的所有应用正常翻墙了。
需要注意的是SwitchySharp默认会忽略系统代理直接连接网络，你可能需要选择它的“使用系统代理设置”这一项，如下所示：</p>

<p>  <img src="http://danielxu.github.com/images/goagnet/switch-sharp-use-system-proxy.png"></p></li>
<li><p>用浏览器访问 config.privoxy.org，即可用Web界面管理自己的provixy配置文件。不过，事先需要在config文件中启用Web管理功能，方法是编辑/usr/local/etc/privoxy/config 文件，将enable-edit-actions的值设置为1即可。</p></li>
<li><p>访问 <a href="http://config.privoxy.org/show-url-info">http://config.privoxy.org/show-url-info</a> 可以查询某一个特定的URL是否会走代理服务。我们可以随时在这儿查询，结合上面的第2步，将一些URL Pattern加入到代理列表文件 wall.action 中, 我们就可以方便地管理Privoxy。</p></li>
<li><p>证书是个麻烦事儿，由于GoAgent的证书是自己生成的而不是权威机构颁发的，所以需要把GoAgent的证书加到钥匙串访问的可信证书里面，如下图所示。另外GoAgent的默认带的证书因为是公开的，所以有潜在被<a href="http://zh.wikipedia.org/zh-hk/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB">中间人攻击</a>的危险，所以更安全的做法是把默认的证书删掉再重启GoAgent，这样GoAgent就会重新另外生成一个证书了，再把这个新证书加到钥匙串访问中，会更安全一些。
<img src="http://danielxu.github.com/images/goagnet/goagent-cer.png"></p></li>
</ol>


<h3>参考</h3>

<ul>
<li>http://iaiai.iteye.com/blog/1608369</li>
<li>http://blog.devtang.com/blog/2012/12/08/use-privoxy/</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[项目中使用git管理源码简单流程]]></title>
    <link href="http://danielxu.github.com/blog/2013/02/18/git-simple-workflow/"/>
    <updated>2013-02-18T10:32:00+08:00</updated>
    <id>http://danielxu.github.com/blog/2013/02/18/git-simple-workflow</id>
    <content type="html"><![CDATA[<p>项目中使用git进行源代码管理的时候，正确的流程有利于问题的查找，代码分析。这里有一套简单的流程，应该普遍试用于大部分项目中的源代码管理。</p>

<h2>1、主分支Master</h2>

<p>首先，代码库应该有一个、且仅有一个主分支。所有提供给用户使用的正式版本，都在这个主分支上发布。</p>

<p>Git主分支的名字，默认叫做Master。它是自动建立的，版本库初始化以后，默认就是在主分支在进行开发。</p>

<!--more-->


<p>其中第一次提交代码的时候最好使用</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git push -u origin master
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://danielxu.github.com/images/gitworkflow/master.png"></p>

<h2>2、开发分支Develop</h2>

<p>上面的主分支只用来发布重大版本，日常开发应该在另一条分支上完成。我们把开发用的分支，叫做Develop。</p>

<p>这个分支可以用来生成代码的 nightly 版本。如果想正式对外发布，就在Master分支上，对Develop分支进行 merge 。</p>

<p>Git创建Develop分支的命令：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#创建工程分支</span>
</span><span class='line'>git checkout -b develop master
</span></code></pre></td></tr></table></div></figure>


<p>将Develop分支发布到Master分支的命令：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>     <span class="c">#切换到Master分支</span>
</span><span class='line'>　   git checkout master
</span><span class='line'>　   <span class="c">#对Develop分支进行合并</span>
</span><span class='line'>　   git merge --no-ff develop
</span></code></pre></td></tr></table></div></figure>


<p>这里稍微解释一下，上一条命令的&#8211;no-ff参数是什么意思。默认情况下，Git执行&#8221;快进式合并&#8221;（fast-farward merge），会直接将Master分支指向Develop分支。</p>

<p><img src="http://danielxu.github.com/images/gitworkflow/fast-farward_merge.png"></p>

<p>使用&#8211;no-ff参数后，会执行正常合并，在Master分支上生成一个新节点。为了保证版本演进的清晰，我们希望采用这种做法。</p>

<p><img src="http://danielxu.github.com/images/gitworkflow/no-ff_merge.png"></p>

<h2>3、临时性分支</h2>

<p>前面讲到版本库的两条主要分支：Master和Develop。前者用于正式发布，后者用于日常开发。其实，常设分支只需要这两条就够了，不需要其他了。
但是，除了常设分支以外，还有一些临时性分支，用于应对一些特定目的的版本开发。临时性分支主要有三种：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>* 功能（feature）分支
</span><span class='line'>* 预发布（release）分支
</span><span class='line'>* 修补bug（fixbug）分支
</span></code></pre></td></tr></table></div></figure>


<p>这三种分支都属于临时性需要，使用完以后，应该删除，使得代码库的常设分支始终只有Master和Develop。</p>

<h3>3.1、功能分支</h3>

<p>功能分支，它是为了开发某种特定功能，从Develop分支上面分出来的。开发完成后，要再并入Develop。功能分支的名字，可以采用feature-*的形式命名。</p>

<p><img src="http://danielxu.github.com/images/gitworkflow/feature-*.png"></p>

<p>创建一个功能分支：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git checkout -b feature-x develop
</span></code></pre></td></tr></table></div></figure>


<p>其中x表示功能名称，如：feature-login</p>

<p>开发完成后，将功能分支合并到develop分支：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git checkout develop
</span><span class='line'>git merge --no-ff feature-x
</span></code></pre></td></tr></table></div></figure>


<p>删除feature分支：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git branch -d feature-x
</span></code></pre></td></tr></table></div></figure>


<h3>3.2、预发布分支</h3>

<p>预发布分支，它是指发布正式版本之前（即合并到Master分支之前），我们可能需要有一个预发布的版本进行测试。</p>

<p>预发布分支是从Develop分支上面分出来的，预发布结束以后，必须合并进Develop和Master分支。它的命名，可以采用release-*的形式。</p>

<p>创建一个预发布分支：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git checkout -b release-1.2 develop
</span></code></pre></td></tr></table></div></figure>


<p>确认没有问题后，合并到master分支：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git checkout master
</span><span class='line'>git merge --no-ff release-1.2
</span><span class='line'>
</span><span class='line'><span class="c">#对合并生成的新节点，做一个标签</span>
</span><span class='line'>git tag -a 1.2
</span></code></pre></td></tr></table></div></figure>


<p>再合并到develop分支：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git checkout develop
</span><span class='line'>git merge --no-ff release-1.2
</span></code></pre></td></tr></table></div></figure>


<p>最后，删除预发布分支：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git branch -d release-1.2
</span></code></pre></td></tr></table></div></figure>


<h3>3.3、修补bug分支</h3>

<p>最后一种是修补bug分支。软件正式发布以后，难免会出现bug。这时就需要创建一个分支，进行bug修补。</p>

<p>修补bug分支是从Master分支上面分出来的。修补结束以后，再合并进Master和Develop分支。它的命名，可以采用fixbug-*的形式。</p>

<p><img src="http://danielxu.github.com/images/gitworkflow/fixbug-*.png"></p>

<p>创建一个修补bug分支：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git checkout -b fixbug-0.1 master
</span></code></pre></td></tr></table></div></figure>


<p>修补结束后，合并到master分支：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git checkout master
</span><span class='line'>git merge --no-ff fixbug-0.1
</span><span class='line'>git tag -a 0.1.1
</span></code></pre></td></tr></table></div></figure>


<p>再合并到develop分支：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git checkout develop
</span><span class='line'>git merge --no-ff fixbug-0.1
</span></code></pre></td></tr></table></div></figure>


<p>最后，删除&#8221;修补bug分支&#8221;：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git branch -d fixbug-0.1
</span></code></pre></td></tr></table></div></figure>


<h2>剩下的就是改合并的合并，改删除的删除。细心检查。</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AppStore启用“短”连接服务]]></title>
    <link href="http://danielxu.github.com/blog/2013/02/05/appstore-short-url/"/>
    <updated>2013-02-05T09:57:00+08:00</updated>
    <id>http://danielxu.github.com/blog/2013/02/05/appstore-short-url</id>
    <content type="html"><![CDATA[<p><strong><a href="https://developer.apple.com/library/ios/#qa/qa1633/_index.html">苹果官网开发者频道</a>,公布了最新启用的、更容易记忆的简短链接地址。为软件开发者们在宣传自己的产品是，使用更容易记忆的下载地址。</strong></p>

<!--more-->


<h2>规则如下：</h2>

<h3>开发商主页</h3>

<ul>
<li>iOS：http://appstore.com/&lt;公司名>，比如，http://appstore.com/沪江网</li>
<li>Mac：http://appstore.com/mac/&lt;公司名>，比如，http://appstore.com/mac/沪江网</li>
</ul>


<h3>应用下载地址</h3>

<ul>
<li>iOS：http://appstore.com/&lt;应用名>，比如，http://appstore.com/开心词场·超爽型背单词工具</li>
<li>Mac：http://appstore.com/mac/&lt;应用名>，比如，http://appstore.com/mac/Xcode</li>
</ul>


<h3>开发商旗下 App</h3>

<ul>
<li>iOS：http://appstore.com/&lt;公司名>/&lt;应用名>，比如，http://appstore.com/沪江网/沪江小D-多语种词典</li>
<li>Mac：http://appstore.com/mac/&lt;公司名>/&lt;应用名>，比如，http://appstore.com/mac/Apple/OSXMountainLion</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用CocoaPods来做iOS程序的包依赖管理]]></title>
    <link href="http://danielxu.github.com/blog/2013/01/17/use-cocoapods-manage-lib/"/>
    <updated>2013-01-17T17:50:00+08:00</updated>
    <id>http://danielxu.github.com/blog/2013/01/17/use-cocoapods-manage-lib</id>
    <content type="html"><![CDATA[<p>自己也在使用cocoaPods进行项目的第三方类库进行管理，不过总是懒得记录下来。在此引用：<a href="http://blog.devtang.com/blog/2012/12/02/use-cocoapod-to-manage-ios-lib-dependency/">唐巧：使用CocoaPods来做iOS程序的包依赖管理</a>做一下使用记录。</p>

<h2>CocoaPods简介</h2>

<p>CocoaPods是一个负责管理iOS项目中第三方开源代码的工具。<a href="http://cocoapods.org/">CocoaPods</a> <a href="https://github.com/CocoaPods/CocoaPods">项目的源码</a>在Github上管理。该项目开始于2011年8月12日，经过一年多的发展，现在已经超过1000次提交，并且持续保持活跃更新。开发iOS项目不可避免地要使用第三方开源库，CocoaPods的出现使得我们可以节省设置和更新第三方开源库的时间。</p>

<!-- more -->


<h2>CocoaPods的安装和使用介绍</h2>

<h3>安装</h3>

<p>安装方式异常简单, Mac下都自带ruby，使用ruby的gem命令即可下载安装：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gem install cocoapods
</span><span class='line'><span class="nv">$ </span>pod setup
</span></code></pre></td></tr></table></div></figure>


<h3>使用</h3>

<p>使用时需要新建一个名为Podfile的文件，以如下格式，将依赖的库名字依次列在文件中即可</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>platform :ios
</span><span class='line'>pod <span class="s1">&#39;JSONKit&#39;</span>,       <span class="s1">&#39;~&gt; 1.4&#39;</span>
</span><span class='line'>pod <span class="s1">&#39;Reachability&#39;</span>,  <span class="s1">&#39;~&gt; 3.0.0&#39;</span>
</span><span class='line'>pod <span class="s1">&#39;ASIHTTPRequest&#39;</span>
</span><span class='line'>pod <span class="s1">&#39;RegexKitLite&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后你将编辑好的Podfile文件放到你的项目根目录中，执行如下命令即可：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> <span class="s2">&quot;your project home&quot;</span>
</span><span class='line'>pod install
</span></code></pre></td></tr></table></div></figure>


<p>现在，你的所有第三方库都已经下载完成并且设置好了编译参数和依赖，你只需要记住如下2点即可：</p>

<ol>
<li>使用CocoaPods生成的 <em>.xcworkspace 文件来打开工程，而不是以前的 </em>.xcodeproj 文件。</li>
<li>每次更改了Podfile文件，你需要重新执行一次pod install命令。</li>
</ol>


<h3>查找第三方库</h3>

<p>你如果不知道cocoaPods管理的库中，是否有你想要的库，那么你可以通过pod search命令进行查找，以下是我用pod search json查找到的所有可用的库：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pod search json
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>-&gt; AnyJSON <span class="o">(</span>0.0.1<span class="o">)</span>
</span><span class='line'>   Encode / Decode JSON by any means possible.
</span><span class='line'>   - Homepage: https://github.com/mattt/AnyJSON
</span><span class='line'>   - Source:   https://github.com/mattt/AnyJSON.git
</span><span class='line'>   - Versions: 0.0.1 <span class="o">[</span>master repo<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>-&gt; JSONKit <span class="o">(</span>1.5pre<span class="o">)</span>
</span><span class='line'>   A Very High Performance Objective-C JSON Library.
</span><span class='line'>   - Homepage: https://github.com/johnezang/JSONKit
</span><span class='line'>   - Source:   git://github.com/johnezang/JSONKit.git
</span><span class='line'>   - Versions: 1.5pre, 1.4 <span class="o">[</span>master repo<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>-&gt; MTJSONDictionary <span class="o">(</span>0.0.4<span class="o">)</span>
</span><span class='line'>   An NSDictionary category <span class="k">for </span>when you<span class="err">&#39;</span>re working with it converting to/from JSON. DEPRECATED, use MTJSONUtils
</span><span class='line'>   instead.
</span><span class='line'>   - Homepage: https://github.com/mysterioustrousers/MTJSONDictionary.git
</span><span class='line'>   - Source:   https://github.com/mysterioustrousers/MTJSONDictionary.git
</span><span class='line'>   - Versions: 0.0.4, 0.0.3, 0.0.2 <span class="o">[</span>master repo<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>-&gt; MTJSONUtils <span class="o">(</span>0.1.0<span class="o">)</span>
</span><span class='line'>   An NSObject category <span class="k">for </span>working with JSON.
</span><span class='line'>   - Homepage: https://github.com/mysterioustrousers/MTJSONUtils.git
</span><span class='line'>   - Source:   https://github.com/mysterioustrousers/MTJSONUtils.git
</span><span class='line'>   - Versions: 0.1.0, 0.0.1 <span class="o">[</span>master repo<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>-&gt; SBJson <span class="o">(</span>3.1.1<span class="o">)</span>
</span><span class='line'>   This library implements strict JSON parsing and generation in Objective-C.
</span><span class='line'>   - Homepage: http://stig.github.com/json-framework/
</span><span class='line'>   - Source:   https://github.com/stig/json-framework.git
</span><span class='line'>   - Versions: 3.1.1, 3.1, 3.0.4, 2.2.3 <span class="o">[</span>master repo<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>-&gt; TouchJSON <span class="o">(</span>1.0<span class="o">)</span>
</span><span class='line'>   TouchJSON is an Objective-C based parser and generator <span class="k">for </span>JSON encoded data.
</span><span class='line'>   - Homepage: https://github.com/TouchCode/TouchJSON
</span><span class='line'>   - Source:   https://github.com/TouchCode/TouchJSON.git
</span><span class='line'>   - Versions: 1.0 <span class="o">[</span>master repo<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>生成第三方库的帮助文档</h3>

<p>如果你想让CococaPods帮你生成第三方库的帮助文档，并集成到XCode中，那么用brew安装appledoc即可：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew install appledoc
</span></code></pre></td></tr></table></div></figure>


<p>关于appledoc，我在今年初的另一篇博客<a href="http://blog.devtang.com/blog/2012/02/01/use-appledoc-to-generate-xcode-doc/">《使用Objective-C的文档生成工具:appledoc》</a>中有专门介绍。它最大的优点是可以将帮助文档集成到XCode中，这样你在敲代码的时候，按住opt键单击类名或方法名，就可以显示出相应的帮助文档。</p>

<h2>原理</h2>

<p>CocoaPods是将所有的依赖库都放到另一个名为Pods项目中，然后让主项目依赖Pods项目，这样，源码管理工作都从主项目移到了Pods项目中。发现的一些技术细节有：</p>

<ol>
<li>Pods项目最终会编译成一个名为libPods.a的文件，主项目只需要依赖这个.a文件即可。</li>
<li>对于资源文件，CocoaPods提供了一个名为Pods-resources.sh的bash脚本，该脚本在每次项目编译的时候都会执行，将第三方库的各种资源文件复制到目标目录中。</li>
<li>CocoaPods通过一个名为Pods.xcconfig的文件来在编译时设置所有的依赖和参数。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS应用内付费(IAP)开发步骤列表]]></title>
    <link href="http://danielxu.github.com/blog/2013/01/17/use-iap/"/>
    <updated>2013-01-17T17:45:00+08:00</updated>
    <id>http://danielxu.github.com/blog/2013/01/17/use-iap</id>
    <content type="html"><![CDATA[<p>由于项目可以需要用到内支付，在此引用<a href="http://blog.devtang.com/blog/2012/12/09/in-app-purchase-check-list/">唐巧：iOS应用内付费(IAP)开发步骤列表</a>，步骤清楚，以待备用。</p>

<hr />

<p>应用内付费（以下简称IAP, In app purchase）的开发工作。步骤繁多，在此把开发步骤列表整理如下。因为只是步骤列表，所以并不含详细的说明教程，需要看教程的新手，可以看我附在最后的一些参考链接。</p>

<!-- more -->


<h3>配置Developer.apple.com</h3>

<p>登录到<a href="https://developer.apple.com/">Developer.apple.com</a>，然后进行以下步骤：</p>

<ol>
<li>为应用建立建立一个不带通配符的App ID</li>
<li>用该App ID生成和安装相应的Provisioning Profile文件。</li>
</ol>


<h3>配置iTunes Connect</h3>

<p>登录到<a href="https://itunesconnect.apple.com/">iTunes Connet</a>，然后进行以下步骤：</p>

<ol>
<li>用该App ID创建一个新的应用。</li>
<li><p>在该应用中，创建应用内付费项目，选择付费类型，通常可选的是可重复消费(Consumable)的或是永久有效(Non-Consumable)的2种，然后设置好价格和Product ID以及购买介绍和截图即可，这里的Product ID是需要记住的，后面开发的时候需要。如下图所示：
<img src="http://danielxu.github.com/images/iap/iap-add-product-id.png"></p></li>
<li><p>添加一个用于在sandbox付费的测试用户，如下图所示。注意苹果对该测试用户的密码要求
和正式账号一样，必须是至少8位，并且同时包含数字和大小写字母：
<img src="http://danielxu.github.com/images/iap/iap-adduser-1.png">
<img src="http://danielxu.github.com/images/iap/iap-adduser-2.png"></p></li>
<li><p>填写相关的税务，银行，联系人信息。如下图所示：
<img src="http://danielxu.github.com/images/iap/iap-tax-info.png"></p></li>
</ol>


<h3>开发工作(ios端)</h3>

<p>1、 在工程中引入 storekit.framework 和 #import &lt;StoreKit/StoreKit.h></p>

<p>2、 获得所有的付费Product ID列表。这个可以用常量存储在本地，也可以由自己的服务器返回。</p>

<p>3、 制作一个界面，展示所有的应用内付费项目。这些应用内付费项目的价格和介绍信息可以是自己的服务器返回。但如果是不带服务器的单机游戏应用或工具类应用，则可以通过向App Store查询获得。我在测试时发现，向App Store查询速度非常慢，通常需要2-3秒钟，所以不建议这么做，最好还是搞个自己的服务器吧。</p>

<p>4、当用户点击了一个IAP项目，我们先查询用户是否允许应用内付费，如果不允许则不用进行以下步骤了。代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">if</span> <span class="p">([</span><span class="n">SKPaymentQueue</span> <span class="n">canMakePayments</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// 执行下面提到的第5步：</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="n">getProductInfo</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;失败，用户禁止应用内付费购买.&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>5、 我们先通过该IAP的ProductID向AppStore查询，获得SKPayment实例，然后通过SKPaymentQueue的 addPayment方法发起一个购买的操作。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// 下面的ProductId应该是事先在itunesConnect中添加好的，已存在的付费项目。否则查询会失败。</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">getProductInfo</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSSet</span> <span class="o">*</span> <span class="n">set</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSSet</span> <span class="nl">setWithArray:</span><span class="err">@</span><span class="p">[</span><span class="s">@&quot;ProductId&quot;</span><span class="p">]];</span>
</span><span class='line'>  <span class="n">SKProductsRequest</span> <span class="o">*</span> <span class="n">request</span> <span class="o">=</span> <span class="p">[[</span><span class="n">SKProductsRequest</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithProductIdentifiers:</span><span class="n">set</span><span class="p">];</span>
</span><span class='line'>  <span class="n">request</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'>  <span class="p">[</span><span class="n">request</span> <span class="n">start</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 以上查询的回调函数</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">productsRequest:</span><span class="p">(</span><span class="n">SKProductsRequest</span> <span class="o">*</span><span class="p">)</span><span class="nv">request</span> <span class="nf">didReceiveResponse:</span><span class="p">(</span><span class="n">SKProductsResponse</span> <span class="o">*</span><span class="p">)</span><span class="nv">response</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSArray</span> <span class="o">*</span><span class="n">myProduct</span> <span class="o">=</span> <span class="n">response</span><span class="p">.</span><span class="n">products</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">myProduct</span><span class="p">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;无法获取产品信息，购买失败。&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">SKPayment</span> <span class="o">*</span> <span class="n">payment</span> <span class="o">=</span> <span class="p">[</span><span class="n">SKPayment</span> <span class="nl">paymentWithProduct:</span><span class="n">myProduct</span><span class="p">[</span><span class="mi">0</span><span class="p">]];</span>
</span><span class='line'>    <span class="p">[[</span><span class="n">SKPaymentQueue</span> <span class="n">defaultQueue</span><span class="p">]</span> <span class="nl">addPayment:</span><span class="n">payment</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>6、 在viewDidLoad方法中，将购买页面设置成购买的Observer。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">// 监听购买结果</span>
</span><span class='line'>    <span class="p">[[</span><span class="n">SKPaymentQueue</span> <span class="n">defaultQueue</span><span class="p">]</span> <span class="nl">addTransactionObserver:</span><span class="n">self</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidUnload</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">super</span> <span class="n">viewDidUnload</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[[</span><span class="n">SKPaymentQueue</span> <span class="n">defaultQueue</span><span class="p">]</span> <span class="nl">removeTransactionObserver:</span><span class="n">self</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>7、 当用户购买的操作有结果时，就会触发下面的回调函数，相应进行处理即可。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">paymentQueue:</span><span class="p">(</span><span class="n">SKPaymentQueue</span> <span class="o">*</span><span class="p">)</span><span class="nv">queue</span> <span class="nf">updatedTransactions:</span><span class="p">(</span><span class="n">NSArray</span> <span class="o">*</span><span class="p">)</span><span class="nv">transactions</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="n">SKPaymentTransaction</span> <span class="o">*</span><span class="n">transaction</span> <span class="k">in</span> <span class="n">transactions</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="p">(</span><span class="n">transaction</span><span class="p">.</span><span class="n">transactionState</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">case</span> <span class="nl">SKPaymentTransactionStatePurchased:</span><span class="c1">//交易完成</span>
</span><span class='line'>                <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;transactionIdentifier = %@&quot;</span><span class="p">,</span> <span class="n">transaction</span><span class="p">.</span><span class="n">transactionIdentifier</span><span class="p">);</span>
</span><span class='line'>                <span class="p">[</span><span class="n">self</span> <span class="nl">completeTransaction:</span><span class="n">transaction</span><span class="p">];</span>
</span><span class='line'>                <span class="k">break</span><span class="p">;</span>
</span><span class='line'>            <span class="k">case</span> <span class="nl">SKPaymentTransactionStateFailed:</span><span class="c1">//交易失败</span>
</span><span class='line'>                <span class="p">[</span><span class="n">self</span> <span class="nl">failedTransaction:</span><span class="n">transaction</span><span class="p">];</span>
</span><span class='line'>                <span class="k">break</span><span class="p">;</span>
</span><span class='line'>            <span class="k">case</span> <span class="nl">SKPaymentTransactionStateRestored:</span><span class="c1">//已经购买过该商品</span>
</span><span class='line'>                <span class="p">[</span><span class="n">self</span> <span class="nl">restoreTransaction:</span><span class="n">transaction</span><span class="p">];</span>
</span><span class='line'>                <span class="k">break</span><span class="p">;</span>
</span><span class='line'>            <span class="k">case</span> <span class="nl">SKPaymentTransactionStatePurchasing:</span>      <span class="c1">//商品添加进列表</span>
</span><span class='line'>                <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;商品添加进列表&quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="k">break</span><span class="p">;</span>
</span><span class='line'>            <span class="k">default</span><span class="o">:</span>
</span><span class='line'>                <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">completeTransaction:</span><span class="p">(</span><span class="n">SKPaymentTransaction</span> <span class="o">*</span><span class="p">)</span><span class="nv">transaction</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Your application should implement these two methods.</span>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span> <span class="n">productIdentifier</span> <span class="o">=</span> <span class="n">transaction</span><span class="p">.</span><span class="n">payment</span><span class="p">.</span><span class="n">productIdentifier</span><span class="p">;</span>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span> <span class="n">receipt</span> <span class="o">=</span> <span class="p">[</span><span class="n">transaction</span><span class="p">.</span><span class="n">transactionReceipt</span> <span class="n">base64EncodedString</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">([</span><span class="n">productIdentifier</span> <span class="n">length</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// 向自己的服务器验证购买凭证</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Remove the transaction from the payment queue.</span>
</span><span class='line'>    <span class="p">[[</span><span class="n">SKPaymentQueue</span> <span class="n">defaultQueue</span><span class="p">]</span> <span class="nl">finishTransaction:</span> <span class="n">transaction</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">failedTransaction:</span><span class="p">(</span><span class="n">SKPaymentTransaction</span> <span class="o">*</span><span class="p">)</span><span class="nv">transaction</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">transaction</span><span class="p">.</span><span class="n">error</span><span class="p">.</span><span class="n">code</span> <span class="o">!=</span> <span class="n">SKErrorPaymentCancelled</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;购买失败&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;用户取消交易&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="p">[[</span><span class="n">SKPaymentQueue</span> <span class="n">defaultQueue</span><span class="p">]</span> <span class="nl">finishTransaction:</span> <span class="n">transaction</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">restoreTransaction:</span><span class="p">(</span><span class="n">SKPaymentTransaction</span> <span class="o">*</span><span class="p">)</span><span class="nv">transaction</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// 对于已购商品，处理恢复购买的逻辑</span>
</span><span class='line'>    <span class="p">[[</span><span class="n">SKPaymentQueue</span> <span class="n">defaultQueue</span><span class="p">]</span> <span class="nl">finishTransaction:</span> <span class="n">transaction</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>8、服务器验证凭证(Optional)。如果购买成功，我们需要将凭证发送到服务器上进行验证。考虑到网络异常情况，iOS端的发送凭证操作应该进行持久化，如果程序退出，崩溃或网络异常，可以恢复重试。</p>

<h3>开发工作(服务端)</h3>

<p>服务端的工作比较简单，分4步：</p>

<ol>
<li>接收ios端发过来的购买凭证。</li>
<li>判断凭证是否已经存在或验证过，然后存储该凭证。</li>
<li>将该凭证发送到苹果的服务器验证，并将验证结果返回给客户端。</li>
<li>如果需要，修改用户相应的会员权限。</li>
</ol>


<p>考虑到网络异常情况，服务器的验证应该是一个可恢复的队列，如果网络失败了，应该进行重试。</p>

<p>与苹果的验证接口文档在<a href="https://developer.apple.com/library/ios/#documentation/NetworkingInternet/Conceptual/StoreKitGuide/VerifyingStoreReceipts/VerifyingStoreReceipts.html#//apple_ref/doc/uid/TP40008267-CH104-SW3">这里</a>。简单来说就是将该购买凭证用Base64编码，然后POST给苹果的验证服务器，苹果将验证结果以JSON形式返回。</p>

<p>苹果AppStore线上的购买凭证验证地址是<a href="https://buy.itunes.apple.com/verifyReceipt">https://buy.itunes.apple.com/verifyReceipt</a> ，测试的验证地址是：<a href="https://sandbox.itunes.apple.com/verifyReceipt">https://sandbox.itunes.apple.com/verifyReceipt</a></p>

<h2>参考链接</h2>

<p>以下参考链接详细说明了完成应用内付费开发的步骤：</p>

<ol>
<li><a href="https://developer.apple.com/appstore/in-app-purchase/index.html">https://developer.apple.com/appstore/in-app-purchase/index.html</a></li>
<li><a href="http://www.himigame.com/iphone-cocos2d/550.html">http://www.himigame.com/iphone-cocos2d/550.html</a></li>
<li><a href="http://www.cocoachina.com/iphonedev/sdk/2011/1028/3435.html">http://www.cocoachina.com/iphonedev/sdk/2011/1028/3435.html</a></li>
<li><a href="http://www.cocoachina.com/newbie/basic/2012/0214/3976.html">http://www.cocoachina.com/newbie/basic/2012/0214/3976.html</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在iOS项目中使用ZXing]]></title>
    <link href="http://danielxu.github.com/blog/2013/01/17/use-zxing/"/>
    <updated>2013-01-17T17:40:00+08:00</updated>
    <id>http://danielxu.github.com/blog/2013/01/17/use-zxing</id>
    <content type="html"><![CDATA[<p>之前项目中使用过ZXing进行二维码识别，不过人比较懒。发现<a href="http://blog.devtang.com/blog/2012/12/23/use-zxing-library/">唐巧的博文：在iOS中使用ZXing库</a>,就引用过来，留着以后查询使用。</p>

<h2>前言</h2>

<p><a href="https://code.google.com/p/zxing/">ZXing</a>(<a href="https://github.com/zxing/zxing">Github镜像地址</a>)是一个开源的条码生成和扫描库（开源协议为<a href="http://www.apache.org/licenses/LICENSE-2.0">Apache2.0</a>)。它不但支持众多的条码格式，而且有各种语言的实现版本，它支持的语言包括：Java, C++, C#, Objective-C, ActionScript和Ruby。</p>

<!-- more -->


<h2>集成步骤</h2>

<p>首先去Google Code或Github将ZXing的代码下载下来，整个工程比较大，我们只需要其中涉及iOS的部分，所以最好做一些裁剪。简单来说，我们只需要保留cpp和iphone这2个文件夹，其余的全部删掉。如下图所示：</p>

<p><img src="http://danielxu.github.com/images/zxing/zxing-step-1.png"></p>

<p>接着我们继续裁剪，对于cpp这个目录，只保留cpp/core/src/zxing下面的内容，其余内容也可以删掉了。但是整个目录结构必须保持原样。裁剪完后，整个目录结构如下所示：</p>

<p><img src="http://danielxu.github.com/images/zxing/zxing-step-2.png"></p>

<p>接下来，我们把裁剪后的zxing目录整个移动到我们的iOS项目的目录下，并且把上图中可以看到的ZXingWidget.xcodeproj文件拖动到我们的iOS工程中。</p>

<p>下一步，我们需要设置ZXing项目和我们原本的iOS项目之间的依赖关系。在我们的iOS项目的设置中，点击build phases tab，然后增加 Target Dependencies 和 Link binary，并且增加这些framework依赖：</p>

<pre><code>a. AVFoundation
b. AudioToolbox
c. CoreVideo
d. CoreMedia
e. libiconv
f. AddressBook
g. AddressBookUI
</code></pre>

<p>完成之后如下图所示：</p>

<p><img src="http://danielxu.github.com/images/zxing/zxing-step-3.png"></p>

<p>最后一步，在设置中增加如下2个header search path:</p>

<ul>
<li>./zxing/iphone/ZXingWidget/Classes</li>
<li>./zxing/cpp/core/src</li>
</ul>


<p>需要注意的是，第一个path要设置成循环查找子目录，而第二个不循环查找，如下图所示：</p>

<p><img src="http://danielxu.github.com/images/zxing/zxing-step-4.png"></p>

<p>恭喜你，完成这步之后，你就已经完成ZXing库的集成了。下面谈谈如何使用ZXing库来做二维码识别。</p>

<h2>二维码识别</h2>

<p>ZXing的iOS版本提供2种方法来做二维码识别功能，第一种方法比较简单，第二种方法比较复杂。我在做Demo时使用了第一种方法，做真正项目开发的时候使用了第二种方法，所以都给大家介绍一下。</p>

<h3>使用方法一</h3>

<p>ZXing直接提供了一个扫描二维码的View Controller，即ZXingWidgetController。在需要使用的界面代码中，加入文件依赖：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;ZXingWidgetController.h&gt;</span>
</span><span class='line'><span class="cp">#import &lt;QRCodeReader.h&gt; </span>
</span></code></pre></td></tr></table></div></figure>


<p>
然后在需要扫描的时候，调用如下代码即可：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">scanPressed:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">ZXingWidgetController</span> <span class="o">*</span><span class="n">widController</span> <span class="o">=</span> <span class="p">[[</span><span class="n">ZXingWidgetController</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithDelegate:</span><span class="n">self</span> <span class="nl">showCancel:</span><span class="n">YES</span> <span class="nl">OneDMode:</span><span class="n">NO</span><span class="p">];</span>
</span><span class='line'>  <span class="n">NSMutableSet</span> <span class="o">*</span><span class="n">readers</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSMutableSet</span> <span class="n">alloc</span> <span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>  <span class="n">QRCodeReader</span><span class="o">*</span> <span class="n">qrcodeReader</span> <span class="o">=</span> <span class="p">[[</span><span class="n">QRCodeReader</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">readers</span> <span class="nl">addObject:</span><span class="n">qrcodeReader</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">qrcodeReader</span> <span class="n">release</span><span class="p">];</span>
</span><span class='line'>  <span class="n">widController</span><span class="p">.</span><span class="n">readers</span> <span class="o">=</span> <span class="n">readers</span><span class="p">;</span>
</span><span class='line'>  <span class="p">[</span><span class="n">readers</span> <span class="n">release</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="nl">presentModalViewController:</span><span class="n">widController</span> <span class="nl">animated:</span><span class="n">YES</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">widController</span> <span class="n">release</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>在ZXing扫描有结果时，会调用如下回调函数：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@protocol</span> <span class="nc">ZXingDelegate</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">zxingController:</span><span class="p">(</span><span class="n">ZXingWidgetController</span><span class="o">*</span><span class="p">)</span><span class="nv">controller</span> <span class="nf">didScanResult:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">result</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">zxingControllerDidCancel:</span><span class="p">(</span><span class="n">ZXingWidgetController</span><span class="o">*</span><span class="p">)</span><span class="nv">controller</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>使用方法二</h3>

<p>方法二与方法一的区别就相当于AVFoundation和UIImagePickerController的区别一样。简单来说，就是使用方法二比方法一更加麻烦，但是获得的可定制性更高。</p>

<p>使用方法二时，你需要自己用AVFoundation获得Camera返回的实时图象，然后转成UIImage，最后传给ZXing的Decoder类完成二维码的识别。由于使用AVFoundation涉及的代码略多，我写的示意代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;Decoder.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;TwoDDecoderResult.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;QRCodeReader.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// setup QR reader</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">qrReader</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSMutableSet</span> <span class="n">alloc</span> <span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>  <span class="n">QRCodeReader</span><span class="o">*</span> <span class="n">qrcodeReader</span> <span class="o">=</span> <span class="p">[[</span><span class="n">QRCodeReader</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">qrReader</span> <span class="nl">addObject:</span><span class="n">qrcodeReader</span><span class="p">];</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">scanningQR</span> <span class="o">=</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">step</span> <span class="o">=</span> <span class="n">STEP_QR</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// AVFoundation的回调函数</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">captureOutput:</span><span class="p">(</span><span class="n">AVCaptureOutput</span> <span class="o">*</span><span class="p">)</span><span class="nv">captureOutput</span> <span class="nf">didOutputSampleBuffer:</span><span class="p">(</span><span class="n">CMSampleBufferRef</span><span class="p">)</span><span class="nv">sampleBuffer</span> <span class="nf">fromConnection:</span><span class="p">(</span><span class="n">AVCaptureConnection</span> <span class="o">*</span><span class="p">)</span><span class="nv">connection</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// 第一步，将sampleBuffer转成UIImage</span>
</span><span class='line'>  <span class="n">UIImage</span> <span class="o">*</span><span class="n">image</span><span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="nl">getCaptureImage:</span><span class="n">sampleBuffer</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">// 第二步，用Decoder识别图象</span>
</span><span class='line'>  <span class="n">Decoder</span> <span class="o">*</span><span class="n">d</span> <span class="o">=</span> <span class="p">[[</span><span class="n">Decoder</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>  <span class="n">d</span><span class="p">.</span><span class="n">readers</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">qrReader</span><span class="p">;</span>
</span><span class='line'>  <span class="n">d</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">scanningQR</span> <span class="o">=</span> <span class="p">[</span><span class="n">d</span> <span class="nl">decodeImage:</span><span class="n">image</span><span class="p">]</span> <span class="o">==</span> <span class="n">YES</span> <span class="o">?</span> <span class="n">NO</span> <span class="o">:</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>ZXing的Decoder类提供了以下回调函数获得识别结果：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@protocol</span> <span class="nc">DecoderDelegate</span><span class="o">&lt;</span><span class="n">NSObject</span><span class="o">&gt;</span>
</span><span class='line'><span class="k">@optional</span>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">decoder:</span><span class="p">(</span><span class="n">Decoder</span> <span class="o">*</span><span class="p">)</span><span class="n">decoder</span> <span class="nl">willDecodeImage:</span><span class="p">(</span><span class="n">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="n">image</span> <span class="nl">usingSubset:</span><span class="p">(</span><span class="n">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="n">subset</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">decoder:</span><span class="p">(</span><span class="n">Decoder</span> <span class="o">*</span><span class="p">)</span><span class="nv">decoder</span> <span class="nf">didDecodeImage:</span><span class="p">(</span><span class="n">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nv">image</span> <span class="nf">usingSubset:</span><span class="p">(</span><span class="n">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nv">subset</span> <span class="nf">withResult:</span><span class="p">(</span><span class="n">TwoDDecoderResult</span> <span class="o">*</span><span class="p">)</span><span class="nv">result</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;result = %@&quot;</span><span class="p">,</span> <span class="p">[</span><span class="n">result</span> <span class="n">text</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">decoder:</span><span class="p">(</span><span class="n">Decoder</span> <span class="o">*</span><span class="p">)</span><span class="nv">decoder</span> <span class="nf">failedToDecodeImage:</span><span class="p">(</span><span class="n">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nv">image</span> <span class="nf">usingSubset:</span><span class="p">(</span><span class="n">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nv">subset</span> <span class="nf">reason:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">reason</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">decoder:</span><span class="p">(</span><span class="n">Decoder</span> <span class="o">*</span><span class="p">)</span><span class="nv">decoder</span> <span class="nf">foundPossibleResultPoint:</span><span class="p">(</span><span class="n">CGPoint</span><span class="p">)</span><span class="nv">point</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Trouble Shoot &amp; Tips</h2>

<p>我在使用中遇到了一些问题，主要是编译的问题。</p>

<ol>
<li>一个是找不到 <iostream> 头文件。解决方法：把用到ZXing的源文件扩展名由.m改成.mm。</li>
<li>报错：Undefined symbols for architecture armv7s，<a href="http://stackoverflow.com/questions/12968369/undefined-symbols-for-architecture-armv7-when-using-zxing-library-in-xcode-4-5">解决方法</a>：把ZXingWidget的一个build target参数：&#8221;Build Active Architecture Only&#8221; 修改成 &#8220;NO&#8221;.</li>
<li>报错：No such file or directory，出现该错误可能是你的Header Search Path写错了，或者就是你的zxing库的目录结构不是我上面强调的，好好检查一下吧。</li>
<li>如果你需要生成二维码做测试，推荐一个不错的在线生成二维码的网站：<a href="http://cli.im/">http://cli.im/</a></li>
</ol>


<h2>ZXing和OpenCV的兼容问题</h2>

<p>ZXing 2.1 和OpenCV 2.4.3的iOS库有一些兼容问题，他们对C++标准库的版本和编译器版本都有一些需求，造成满足一方了，另一方就编译不通过了。Stackoverflow上有人终于找到了一个让它们和平共处的方法，但是只适用于iOS5.0以上版本。正好我们的App只支持iOS5.0+，所以就搞定了。所以如果你也正好遇到这个问题，可以参考<a href="http://stackoverflow.com/questions/13498581/opencv-zxing-incompatibility-on-ios">这个贴子</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在iOS和Mac上使用OpenCV]]></title>
    <link href="http://danielxu.github.com/blog/2013/01/17/use-opencv-in-ios-or-mac/"/>
    <updated>2013-01-17T17:18:00+08:00</updated>
    <id>http://danielxu.github.com/blog/2013/01/17/use-opencv-in-ios-or-mac</id>
    <content type="html"><![CDATA[<p>引用: <a href="http://blog.devtang.com/blog/2012/10/27/use-opencv-in-ios/">唐巧的blog：在MacOS和iOS系统中使用OpenCV</a></p>

<h2>MacOS系统中使用OpenCV</h2>

<h3>安装OpenCV</h3>

<p>相信大部分Mac用户都安装了brew或port，如果你没有装，那么首先安装一下brew吧。使用如下命令安装brew:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ruby -e <span class="s2">&quot;$(curl -fsSkL raw.github.com/mxcl/homebrew/go)&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>在安装好brew后，只需要一条命令就可以安装OpenCV了：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew install opencv
</span></code></pre></td></tr></table></div></figure>


<p>通常情况下这样做就应该会安装成功，但我在公司和家里面的电脑尝试的时候，brew都会报一些错误，我遇到的都是一些小问题，按照brew的提示信息，解决掉相应的问题即可。</p>

<p>安装成功后，你应该可以在“/usr/local/include&#8221;目录下找到名为opencv和opencv2的目录，这里面是OpenCV相关的头文件。你也可以在“/usr/local/lib&#8221;目录下找到许多以libopencv_开头的.dylib文件，这些是OpenCV的链接库文件。</p>

<!--more-->


<h3>在MacOS系统中使用OpenCV</h3>

<p>接着我们可以试着在Xcode工程中使用OpenCV。</p>

<p>新建一个Cocoa Application的工程。工程建好后，选中工程的Target，在Build Settings一样，找到“Header Search Paths&#8221;这一个选项，将它的值改为“/usr/local/include&#8221;。如下所示：</p>

<p><img src="http://danielxu.github.com/images/opencv/use-opencv-in-mac-1.png"></p>

<p>接着切换到Build Phases这个tab，在“Link Binary With Libraries&#8221;中，选项+号，然后将弹出的文件选择对话框目录切换到“/usr/local/lib&#8221;目录下，选择你需要使用的OpenCV链接库（通常情况下，你至少会需要core、highgui和imgproc库)，如下图所示：</p>

<p><img src="http://danielxu.github.com/images/opencv/use-opencv-in-mac-2.png"></p>

<p>这里有一个技巧，因为 /usr 目录在对话框中默认不是可见的，可以按快捷键 command + shift + G，在弹出的“前往文件夹&#8221;对话框中输入 /usr/local/lib ，即可跳转到目标文件夹。如下图所示：</p>

<p><img src="http://danielxu.github.com/images/opencv/use-opencv-in-mac-3.png"></p>

<p>下一步是我自己试出来的，你需要在Build Settings中，将“C++ Language Dialect”设置成C++11，将“C++ Standard Library”设置成libstdc++ ，如下图所示。个人感觉是由于XCode默认设置的GNU++11、libc++与OpenCV库有一些兼容性问题，我在更改该设置前老是出现编译错误。如果后续版本解决了这个问题，就不用进行这一步了。</p>

<p><img src="http://danielxu.github.com/images/opencv/use-opencv-in-mac-4.png"></p>

<p>把上面的设置都做好后，就可以在需要的使用OpenCV库的地方，加上opencv的头文件引用即可：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;opencv2/opencv.hpp&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意，如果你的源文件扩展名是.m的，你还需要改成.mm，这样编译器才知道你将会在该文件混合使用C++语言和Objective-C语言。</p>

<p>OpenCV处理图象需要的格式是cv::Mat类，而MacOS的图象格式默认是NSImage，所以你需要知道如何在cv::Mat与NSImage之前相互转换。如下是一个NSImage的Addition，你肯定会需要它的。该代码来自stackoverflow上的<a href="http://stackoverflow.com/questions/8563356/nsimage-to-cvmat-and-vice-versa">这个贴子</a>。</p>

<p>NSImage+OpenCV.h 文件：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  NSImage+OpenCV.h</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Created by TangQiao on 12-10-26.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#import &lt;Foundation/Foundation.h&gt;</span>
</span><span class='line'><span class="cp">#import &quot;opencv2/opencv.hpp&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">NSImage</span> <span class="nl">(OpenCV)</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span><span class="p">(</span><span class="n">NSImage</span><span class="o">*</span><span class="p">)</span><span class="nf">imageWithCVMat:</span><span class="p">(</span><span class="k">const</span> <span class="n">cv</span><span class="o">::</span><span class="n">Mat</span><span class="o">&amp;</span><span class="p">)</span><span class="nv">cvMat</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">initWithCVMat:</span><span class="p">(</span><span class="k">const</span> <span class="n">cv</span><span class="o">::</span><span class="n">Mat</span><span class="o">&amp;</span><span class="p">)</span><span class="nv">cvMat</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">readonly</span><span class="p">)</span> <span class="n">cv</span><span class="o">::</span><span class="n">Mat</span> <span class="n">CVMat</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">readonly</span><span class="p">)</span> <span class="n">cv</span><span class="o">::</span><span class="n">Mat</span> <span class="n">CVGrayscaleMat</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>NSImage+OpenCV.mm文件：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  NSImage+OpenCV.mm</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Created by TangQiao on 12-10-26.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#import &quot;NSImage+OpenCV.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">ProviderReleaseDataNOP</span><span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="n">info</span><span class="p">,</span> <span class="k">const</span> <span class="kt">void</span> <span class="o">*</span><span class="n">data</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">size</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">NSImage</span> <span class="nl">(OpenCV)</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="n">CGImageRef</span><span class="p">)</span><span class="nf">CGImage</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CGContextRef</span> <span class="n">bitmapCtx</span> <span class="o">=</span> <span class="n">CGBitmapContextCreate</span><span class="p">(</span><span class="nb">NULL</span><span class="cm">/*data - pass NULL to let CG allocate the memory*/</span><span class="p">,</span>
</span><span class='line'>                                                   <span class="p">[</span><span class="n">self</span> <span class="n">size</span><span class="p">].</span><span class="n">width</span><span class="p">,</span>
</span><span class='line'>                                                   <span class="p">[</span><span class="n">self</span> <span class="n">size</span><span class="p">].</span><span class="n">height</span><span class="p">,</span>
</span><span class='line'>                                                   <span class="mi">8</span> <span class="cm">/*bitsPerComponent*/</span><span class="p">,</span>
</span><span class='line'>                                                   <span class="mi">0</span> <span class="cm">/*bytesPerRow - CG will calculate it for you if it&#39;s allocating the data.  This might get padded out a bit for better alignment*/</span><span class="p">,</span>
</span><span class='line'>                                                   <span class="p">[[</span><span class="n">NSColorSpace</span> <span class="n">genericRGBColorSpace</span><span class="p">]</span> <span class="n">CGColorSpace</span><span class="p">],</span>
</span><span class='line'>                                                   <span class="n">kCGBitmapByteOrder32Host</span><span class="o">|</span><span class="n">kCGImageAlphaPremultipliedFirst</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">NSGraphicsContext</span> <span class="n">saveGraphicsState</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">NSGraphicsContext</span> <span class="nl">setCurrentContext:</span><span class="p">[</span><span class="n">NSGraphicsContext</span> <span class="nl">graphicsContextWithGraphicsPort:</span><span class="n">bitmapCtx</span> <span class="nl">flipped:</span><span class="n">NO</span><span class="p">]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="nl">drawInRect:</span><span class="n">NSMakeRect</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span> <span class="p">[</span><span class="n">self</span> <span class="n">size</span><span class="p">].</span><span class="n">width</span><span class="p">,</span> <span class="p">[</span><span class="n">self</span> <span class="n">size</span><span class="p">].</span><span class="n">height</span><span class="p">)</span> <span class="nl">fromRect:</span><span class="n">NSZeroRect</span> <span class="nl">operation:</span><span class="n">NSCompositeCopy</span> <span class="nl">fraction:</span><span class="mf">1.0</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">NSGraphicsContext</span> <span class="n">restoreGraphicsState</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGImageRef</span> <span class="n">cgImage</span> <span class="o">=</span> <span class="n">CGBitmapContextCreateImage</span><span class="p">(</span><span class="n">bitmapCtx</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CGContextRelease</span><span class="p">(</span><span class="n">bitmapCtx</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">cgImage</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="n">cv</span><span class="o">::</span><span class="n">Mat</span><span class="p">)</span><span class="nf">CVMat</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CGImageRef</span> <span class="n">imageRef</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="n">CGImage</span><span class="p">];</span>
</span><span class='line'>    <span class="n">CGColorSpaceRef</span> <span class="n">colorSpace</span> <span class="o">=</span> <span class="n">CGImageGetColorSpace</span><span class="p">(</span><span class="n">imageRef</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">cols</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">rows</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">;</span>
</span><span class='line'>    <span class="n">cv</span><span class="o">::</span><span class="n">Mat</span> <span class="n">cvMat</span><span class="p">(</span><span class="n">rows</span><span class="p">,</span> <span class="n">cols</span><span class="p">,</span> <span class="n">CV_8UC4</span><span class="p">);</span> <span class="c1">// 8 bits per component, 4 channels</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGContextRef</span> <span class="n">contextRef</span> <span class="o">=</span> <span class="n">CGBitmapContextCreate</span><span class="p">(</span><span class="n">cvMat</span><span class="p">.</span><span class="n">data</span><span class="p">,</span>                 <span class="c1">// Pointer to backing data</span>
</span><span class='line'>                                                    <span class="n">cols</span><span class="p">,</span>                      <span class="c1">// Width of bitmap</span>
</span><span class='line'>                                                    <span class="n">rows</span><span class="p">,</span>                     <span class="c1">// Height of bitmap</span>
</span><span class='line'>                                                    <span class="mi">8</span><span class="p">,</span>                          <span class="c1">// Bits per component</span>
</span><span class='line'>                                                    <span class="n">cvMat</span><span class="p">.</span><span class="n">step</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span>              <span class="c1">// Bytes per row</span>
</span><span class='line'>                                                    <span class="n">colorSpace</span><span class="p">,</span>                 <span class="c1">// Colorspace</span>
</span><span class='line'>                                                    <span class="n">kCGImageAlphaNoneSkipLast</span> <span class="o">|</span>
</span><span class='line'>                                                    <span class="n">kCGBitmapByteOrderDefault</span><span class="p">);</span> <span class="c1">// Bitmap info flags</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGContextDrawImage</span><span class="p">(</span><span class="n">contextRef</span><span class="p">,</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">cols</span><span class="p">,</span> <span class="n">rows</span><span class="p">),</span> <span class="n">imageRef</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CGContextRelease</span><span class="p">(</span><span class="n">contextRef</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CGImageRelease</span><span class="p">(</span><span class="n">imageRef</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">cvMat</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="n">cv</span><span class="o">::</span><span class="n">Mat</span><span class="p">)</span><span class="nf">CVGrayscaleMat</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CGImageRef</span> <span class="n">imageRef</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="n">CGImage</span><span class="p">];</span>
</span><span class='line'>    <span class="n">CGColorSpaceRef</span> <span class="n">colorSpace</span> <span class="o">=</span> <span class="n">CGColorSpaceCreateDeviceGray</span><span class="p">();</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">cols</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">rows</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">;</span>
</span><span class='line'>    <span class="n">cv</span><span class="o">::</span><span class="n">Mat</span> <span class="n">cvMat</span> <span class="o">=</span> <span class="n">cv</span><span class="o">::</span><span class="n">Mat</span><span class="p">(</span><span class="n">rows</span><span class="p">,</span> <span class="n">cols</span><span class="p">,</span> <span class="n">CV_8UC1</span><span class="p">);</span> <span class="c1">// 8 bits per component, 1 channel</span>
</span><span class='line'>    <span class="n">CGContextRef</span> <span class="n">contextRef</span> <span class="o">=</span> <span class="n">CGBitmapContextCreate</span><span class="p">(</span><span class="n">cvMat</span><span class="p">.</span><span class="n">data</span><span class="p">,</span>                 <span class="c1">// Pointer to backing data</span>
</span><span class='line'>                                                    <span class="n">cols</span><span class="p">,</span>                      <span class="c1">// Width of bitmap</span>
</span><span class='line'>                                                    <span class="n">rows</span><span class="p">,</span>                     <span class="c1">// Height of bitmap</span>
</span><span class='line'>                                                    <span class="mi">8</span><span class="p">,</span>                          <span class="c1">// Bits per component</span>
</span><span class='line'>                                                    <span class="n">cvMat</span><span class="p">.</span><span class="n">step</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span>              <span class="c1">// Bytes per row</span>
</span><span class='line'>                                                    <span class="n">colorSpace</span><span class="p">,</span>                 <span class="c1">// Colorspace</span>
</span><span class='line'>                                                    <span class="n">kCGImageAlphaNone</span> <span class="o">|</span>
</span><span class='line'>                                                    <span class="n">kCGBitmapByteOrderDefault</span><span class="p">);</span> <span class="c1">// Bitmap info flags</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGContextDrawImage</span><span class="p">(</span><span class="n">contextRef</span><span class="p">,</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">cols</span><span class="p">,</span> <span class="n">rows</span><span class="p">),</span> <span class="n">imageRef</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CGContextRelease</span><span class="p">(</span><span class="n">contextRef</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CGColorSpaceRelease</span><span class="p">(</span><span class="n">colorSpace</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CGImageRelease</span><span class="p">(</span><span class="n">imageRef</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">cvMat</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="n">NSImage</span> <span class="o">*</span><span class="p">)</span><span class="nf">imageWithCVMat:</span><span class="p">(</span><span class="k">const</span> <span class="n">cv</span><span class="o">::</span><span class="n">Mat</span><span class="o">&amp;</span><span class="p">)</span><span class="nv">cvMat</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">[[[</span><span class="n">NSImage</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithCVMat:</span><span class="n">cvMat</span><span class="p">]</span> <span class="n">autorelease</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">initWithCVMat:</span><span class="p">(</span><span class="k">const</span> <span class="n">cv</span><span class="o">::</span><span class="n">Mat</span><span class="o">&amp;</span><span class="p">)</span><span class="nv">cvMat</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">NSData</span> <span class="o">*</span><span class="n">data</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSData</span> <span class="nl">dataWithBytes:</span><span class="n">cvMat</span><span class="p">.</span><span class="n">data</span> <span class="nl">length:</span><span class="n">cvMat</span><span class="p">.</span><span class="n">elemSize</span><span class="p">()</span> <span class="o">*</span> <span class="n">cvMat</span><span class="p">.</span><span class="n">total</span><span class="p">()];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGColorSpaceRef</span> <span class="n">colorSpace</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">cvMat</span><span class="p">.</span><span class="n">elemSize</span><span class="p">()</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">colorSpace</span> <span class="o">=</span> <span class="n">CGColorSpaceCreateDeviceGray</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">colorSpace</span> <span class="o">=</span> <span class="n">CGColorSpaceCreateDeviceRGB</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGDataProviderRef</span> <span class="n">provider</span> <span class="o">=</span> <span class="n">CGDataProviderCreateWithCFData</span><span class="p">((</span><span class="n">CFDataRef</span><span class="p">)</span><span class="n">data</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGImageRef</span> <span class="n">imageRef</span> <span class="o">=</span> <span class="n">CGImageCreate</span><span class="p">(</span><span class="n">cvMat</span><span class="p">.</span><span class="n">cols</span><span class="p">,</span>                                     <span class="c1">// Width</span>
</span><span class='line'>                                        <span class="n">cvMat</span><span class="p">.</span><span class="n">rows</span><span class="p">,</span>                                     <span class="c1">// Height</span>
</span><span class='line'>                                        <span class="mi">8</span><span class="p">,</span>                                              <span class="c1">// Bits per component</span>
</span><span class='line'>                                        <span class="mi">8</span> <span class="o">*</span> <span class="n">cvMat</span><span class="p">.</span><span class="n">elemSize</span><span class="p">(),</span>                           <span class="c1">// Bits per pixel</span>
</span><span class='line'>                                        <span class="n">cvMat</span><span class="p">.</span><span class="n">step</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span>                                  <span class="c1">// Bytes per row</span>
</span><span class='line'>                                        <span class="n">colorSpace</span><span class="p">,</span>                                     <span class="c1">// Colorspace</span>
</span><span class='line'>                                        <span class="n">kCGImageAlphaNone</span> <span class="o">|</span> <span class="n">kCGBitmapByteOrderDefault</span><span class="p">,</span>  <span class="c1">// Bitmap info flags</span>
</span><span class='line'>                                        <span class="n">provider</span><span class="p">,</span>                                       <span class="c1">// CGDataProviderRef</span>
</span><span class='line'>                                        <span class="nb">NULL</span><span class="p">,</span>                                           <span class="c1">// Decode</span>
</span><span class='line'>                                        <span class="n">false</span><span class="p">,</span>                                          <span class="c1">// Should interpolate</span>
</span><span class='line'>                                        <span class="n">kCGRenderingIntentDefault</span><span class="p">);</span>                     <span class="c1">// Intent</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="n">NSBitmapImageRep</span> <span class="o">*</span><span class="n">bitmapRep</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSBitmapImageRep</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithCGImage:</span><span class="n">imageRef</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSImage</span> <span class="o">*</span><span class="n">image</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSImage</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">image</span> <span class="nl">addRepresentation:</span><span class="n">bitmapRep</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGImageRelease</span><span class="p">(</span><span class="n">imageRef</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CGDataProviderRelease</span><span class="p">(</span><span class="n">provider</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CGColorSpaceRelease</span><span class="p">(</span><span class="n">colorSpace</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">image</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>完成以上步骤后，恭喜你，你可以在源代码中自由地调用OpenCV的函数了。</p>

<h2>在iOS系统中使用OpenCV</h2>

<h4>下载或编译opencv2.framework</h4>

<p>接下来介绍如何在iOS程序中使用OpenCV。在iOS上使用最新的OpenCV库比较简单，进入<a href="http://opencv.org/">opencv的官网</a>，下载build好的名为opencv2.framework即可（<a href="http://sourceforge.net/projects/opencvlibrary/files/opencv-ios/2.4.3/opencv2.framework.zip/download?utm_expid=6384-3">下载地址</a>）。</p>

<p>如果你比较喜欢折腾，也可以自行下载opencv的源码，在本地编译opencv2.framework。<a href="http://docs.opencv.org/trunk/doc/tutorials/introduction/ios_install/ios_install.html#ios-installation">这里</a>有官方网站的教程，步骤非常简单，不过我照着它的教程尝试了一下失败了。感觉还是XCode编译器与OpenCV代码的兼容性问题，所以就没有继续研究了。</p>

<p>编译还需要安装 <a href="http://www.cmake.org/cmake/resources/software.html">CMark</a>,官方网站上有二进制的安装版本可以下载。也可以下载源码，进行自己编译。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>//http://www.cmake.org/files/v2.8/cmake-2.8.10.2.tar.gz
</span><span class='line'>tar -xzvf cmake-2.8.10.2.tar.gz
</span><span class='line'><span class="nb">cd </span>cmake-2.8.10.2
</span><span class='line'>make
</span><span class='line'>make install
</span></code></pre></td></tr></table></div></figure>


<h4>在iOS程序中使用OpenCV</h4>

<p>新建一个iOS工程，将opencv2.framework直接拖动到工程中。然后，你需要在Build Settings中，将“C++ Standard Library”设置成libstdc++。</p>

<p>如果编译报错:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">Undefined</span> <span class="n">symbols</span> <span class="k">for</span> <span class="n">architecture</span> <span class="nl">i386:</span>   <span class="s">&quot;std::__1::__vector_base_common&lt;true&gt;::__throw_length_error() const&quot;</span><span class="p">,</span> <span class="n">referenced</span> <span class="nl">from:</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以将下面2个类库引入到项目中：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">libc</span><span class="o">++</span><span class="p">.</span><span class="n">dylib</span>
</span><span class='line'><span class="n">libstdc</span><span class="o">++</span><span class="p">.</span><span class="n">dylib</span>
</span></code></pre></td></tr></table></div></figure>


<p>因为opencv中的MIN宏和UIKit的MIN宏有冲突。所以需要在.pch文件中，先定义opencv的头文件，否则会有编译错误。将工程的.pch文件内容修改成如下所示：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;Availability.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#ifdef __cplusplus</span>
</span><span class='line'>    <span class="err">#</span><span class="n">import</span> <span class="o">&lt;</span><span class="n">opencv2</span><span class="o">/</span><span class="n">opencv</span><span class="p">.</span><span class="n">hpp</span><span class="o">&gt;</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#ifdef __OBJC__</span>
</span><span class='line'>    <span class="err">#</span><span class="n">import</span> <span class="o">&lt;</span><span class="n">UIKit</span><span class="o">/</span><span class="n">UIKit</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="err">#</span><span class="n">import</span> <span class="o">&lt;</span><span class="n">Foundation</span><span class="o">/</span><span class="n">Foundation</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;</span>
</span><span class='line'><span class="cp">#endif</span>
</span></code></pre></td></tr></table></div></figure>


<p>把上面的设置都做好后，就可以在需要的使用OpenCV库的地方，加上opencv的头文件引用即可：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;opencv2/opencv.hpp&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>还是那句话，如果你的源文件扩展名是.m的，你还需要改成.mm，这样编译器才知道你将会在该文件中混合使用C++语言和Objective-C语言。</p>

<p>同样，iOS程序内部通常用UIImage表示图片，而OpenCV处理图象需要的格式是cv::Mat，你会需要下面这个Addition来在cv::Mat和UIImage格式之间相互转换。该代码来自<a href="https://github.com/aptogo/OpenCVForiPhone">aptogo的开源代码</a>，他的版权信息在源码头文件中。</p>

<p>UIImage+OpenCV.h 文件：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  UIImage+OpenCV.h</span>
</span><span class='line'><span class="c1">//  OpenCVClient</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Created by Robin Summerhill on 02/09/2011.</span>
</span><span class='line'><span class="c1">//  Copyright 2011 Aptogo Limited. All rights reserved.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Permission is given to use this source code file without charge in any</span>
</span><span class='line'><span class="c1">//  project, commercial or otherwise, entirely at your risk, with the condition</span>
</span><span class='line'><span class="c1">//  that any redistribution (in part or whole) of source code must retain</span>
</span><span class='line'><span class="c1">//  this copyright and permission notice. Attribution in compiled projects is</span>
</span><span class='line'><span class="c1">//  appreciated but not required.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">UIImage</span> <span class="nl">(UIImage_OpenCV)</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span><span class="p">(</span><span class="n">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nf">imageWithCVMat:</span><span class="p">(</span><span class="k">const</span> <span class="n">cv</span><span class="o">::</span><span class="n">Mat</span><span class="o">&amp;</span><span class="p">)</span><span class="nv">cvMat</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">initWithCVMat:</span><span class="p">(</span><span class="k">const</span> <span class="n">cv</span><span class="o">::</span><span class="n">Mat</span><span class="o">&amp;</span><span class="p">)</span><span class="nv">cvMat</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">readonly</span><span class="p">)</span> <span class="n">cv</span><span class="o">::</span><span class="n">Mat</span> <span class="n">CVMat</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">readonly</span><span class="p">)</span> <span class="n">cv</span><span class="o">::</span><span class="n">Mat</span> <span class="n">CVGrayscaleMat</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>UIImage+OpenCV.mm 文件：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  UIImage+OpenCV.mm</span>
</span><span class='line'><span class="c1">//  OpenCVClient</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Created by Robin Summerhill on 02/09/2011.</span>
</span><span class='line'><span class="c1">//  Copyright 2011 Aptogo Limited. All rights reserved.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Permission is given to use this source code file without charge in any</span>
</span><span class='line'><span class="c1">//  project, commercial or otherwise, entirely at your risk, with the condition</span>
</span><span class='line'><span class="c1">//  that any redistribution (in part or whole) of source code must retain</span>
</span><span class='line'><span class="c1">//  this copyright and permission notice. Attribution in compiled projects is</span>
</span><span class='line'><span class="c1">//  appreciated but not required.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#import &quot;UIImage+OpenCV.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">static</span> <span class="kt">void</span> <span class="nf">ProviderReleaseDataNOP</span><span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="n">info</span><span class="p">,</span> <span class="k">const</span> <span class="kt">void</span> <span class="o">*</span><span class="n">data</span><span class="p">,</span> <span class="n">size_t</span> <span class="n">size</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// Do not release memory</span>
</span><span class='line'>    <span class="k">return</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">UIImage</span> <span class="nl">(UIImage_OpenCV)</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="n">cv</span><span class="o">::</span><span class="n">Mat</span><span class="p">)</span><span class="nf">CVMat</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGColorSpaceRef</span> <span class="n">colorSpace</span> <span class="o">=</span> <span class="n">CGImageGetColorSpace</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">CGImage</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">cols</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">rows</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">cv</span><span class="o">::</span><span class="n">Mat</span> <span class="n">cvMat</span><span class="p">(</span><span class="n">rows</span><span class="p">,</span> <span class="n">cols</span><span class="p">,</span> <span class="n">CV_8UC4</span><span class="p">);</span> <span class="c1">// 8 bits per component, 4 channels</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGContextRef</span> <span class="n">contextRef</span> <span class="o">=</span> <span class="n">CGBitmapContextCreate</span><span class="p">(</span><span class="n">cvMat</span><span class="p">.</span><span class="n">data</span><span class="p">,</span>                 <span class="c1">// Pointer to backing data</span>
</span><span class='line'>                                                    <span class="n">cols</span><span class="p">,</span>                      <span class="c1">// Width of bitmap</span>
</span><span class='line'>                                                    <span class="n">rows</span><span class="p">,</span>                     <span class="c1">// Height of bitmap</span>
</span><span class='line'>                                                    <span class="mi">8</span><span class="p">,</span>                          <span class="c1">// Bits per component</span>
</span><span class='line'>                                                    <span class="n">cvMat</span><span class="p">.</span><span class="n">step</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span>              <span class="c1">// Bytes per row</span>
</span><span class='line'>                                                    <span class="n">colorSpace</span><span class="p">,</span>                 <span class="c1">// Colorspace</span>
</span><span class='line'>                                                    <span class="n">kCGImageAlphaNoneSkipLast</span> <span class="o">|</span>
</span><span class='line'>                                                    <span class="n">kCGBitmapByteOrderDefault</span><span class="p">);</span> <span class="c1">// Bitmap info flags</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGContextDrawImage</span><span class="p">(</span><span class="n">contextRef</span><span class="p">,</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">cols</span><span class="p">,</span> <span class="n">rows</span><span class="p">),</span> <span class="n">self</span><span class="p">.</span><span class="n">CGImage</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CGContextRelease</span><span class="p">(</span><span class="n">contextRef</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">cvMat</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="n">cv</span><span class="o">::</span><span class="n">Mat</span><span class="p">)</span><span class="nf">CVGrayscaleMat</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CGColorSpaceRef</span> <span class="n">colorSpace</span> <span class="o">=</span> <span class="n">CGColorSpaceCreateDeviceGray</span><span class="p">();</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">cols</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">rows</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">cv</span><span class="o">::</span><span class="n">Mat</span> <span class="n">cvMat</span> <span class="o">=</span> <span class="n">cv</span><span class="o">::</span><span class="n">Mat</span><span class="p">(</span><span class="n">rows</span><span class="p">,</span> <span class="n">cols</span><span class="p">,</span> <span class="n">CV_8UC1</span><span class="p">);</span> <span class="c1">// 8 bits per component, 1 channel</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGContextRef</span> <span class="n">contextRef</span> <span class="o">=</span> <span class="n">CGBitmapContextCreate</span><span class="p">(</span><span class="n">cvMat</span><span class="p">.</span><span class="n">data</span><span class="p">,</span>                 <span class="c1">// Pointer to backing data</span>
</span><span class='line'>                                                    <span class="n">cols</span><span class="p">,</span>                      <span class="c1">// Width of bitmap</span>
</span><span class='line'>                                                    <span class="n">rows</span><span class="p">,</span>                     <span class="c1">// Height of bitmap</span>
</span><span class='line'>                                                    <span class="mi">8</span><span class="p">,</span>                          <span class="c1">// Bits per component</span>
</span><span class='line'>                                                    <span class="n">cvMat</span><span class="p">.</span><span class="n">step</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span>              <span class="c1">// Bytes per row</span>
</span><span class='line'>                                                    <span class="n">colorSpace</span><span class="p">,</span>                 <span class="c1">// Colorspace</span>
</span><span class='line'>                                                    <span class="n">kCGImageAlphaNone</span> <span class="o">|</span>
</span><span class='line'>                                                    <span class="n">kCGBitmapByteOrderDefault</span><span class="p">);</span> <span class="c1">// Bitmap info flags</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGContextDrawImage</span><span class="p">(</span><span class="n">contextRef</span><span class="p">,</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">cols</span><span class="p">,</span> <span class="n">rows</span><span class="p">),</span> <span class="n">self</span><span class="p">.</span><span class="n">CGImage</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CGContextRelease</span><span class="p">(</span><span class="n">contextRef</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CGColorSpaceRelease</span><span class="p">(</span><span class="n">colorSpace</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">cvMat</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="n">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nf">imageWithCVMat:</span><span class="p">(</span><span class="k">const</span> <span class="n">cv</span><span class="o">::</span><span class="n">Mat</span><span class="o">&amp;</span><span class="p">)</span><span class="nv">cvMat</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">[[[</span><span class="n">UIImage</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithCVMat:</span><span class="n">cvMat</span><span class="p">]</span> <span class="n">autorelease</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">initWithCVMat:</span><span class="p">(</span><span class="k">const</span> <span class="n">cv</span><span class="o">::</span><span class="n">Mat</span><span class="o">&amp;</span><span class="p">)</span><span class="nv">cvMat</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">NSData</span> <span class="o">*</span><span class="n">data</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSData</span> <span class="nl">dataWithBytes:</span><span class="n">cvMat</span><span class="p">.</span><span class="n">data</span> <span class="nl">length:</span><span class="n">cvMat</span><span class="p">.</span><span class="n">elemSize</span><span class="p">()</span> <span class="o">*</span> <span class="n">cvMat</span><span class="p">.</span><span class="n">total</span><span class="p">()];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGColorSpaceRef</span> <span class="n">colorSpace</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">cvMat</span><span class="p">.</span><span class="n">elemSize</span><span class="p">()</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">colorSpace</span> <span class="o">=</span> <span class="n">CGColorSpaceCreateDeviceGray</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">colorSpace</span> <span class="o">=</span> <span class="n">CGColorSpaceCreateDeviceRGB</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGDataProviderRef</span> <span class="n">provider</span> <span class="o">=</span> <span class="n">CGDataProviderCreateWithCFData</span><span class="p">((</span><span class="n">CFDataRef</span><span class="p">)</span><span class="n">data</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGImageRef</span> <span class="n">imageRef</span> <span class="o">=</span> <span class="n">CGImageCreate</span><span class="p">(</span><span class="n">cvMat</span><span class="p">.</span><span class="n">cols</span><span class="p">,</span>                                     <span class="c1">// Width</span>
</span><span class='line'>                                        <span class="n">cvMat</span><span class="p">.</span><span class="n">rows</span><span class="p">,</span>                                     <span class="c1">// Height</span>
</span><span class='line'>                                        <span class="mi">8</span><span class="p">,</span>                                              <span class="c1">// Bits per component</span>
</span><span class='line'>                                        <span class="mi">8</span> <span class="o">*</span> <span class="n">cvMat</span><span class="p">.</span><span class="n">elemSize</span><span class="p">(),</span>                           <span class="c1">// Bits per pixel</span>
</span><span class='line'>                                        <span class="n">cvMat</span><span class="p">.</span><span class="n">step</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span>                                  <span class="c1">// Bytes per row</span>
</span><span class='line'>                                        <span class="n">colorSpace</span><span class="p">,</span>                                     <span class="c1">// Colorspace</span>
</span><span class='line'>                                        <span class="n">kCGImageAlphaNone</span> <span class="o">|</span> <span class="n">kCGBitmapByteOrderDefault</span><span class="p">,</span>  <span class="c1">// Bitmap info flags</span>
</span><span class='line'>                                        <span class="n">provider</span><span class="p">,</span>                                       <span class="c1">// CGDataProviderRef</span>
</span><span class='line'>                                        <span class="nb">NULL</span><span class="p">,</span>                                           <span class="c1">// Decode</span>
</span><span class='line'>                                        <span class="n">false</span><span class="p">,</span>                                          <span class="c1">// Should interpolate</span>
</span><span class='line'>                                        <span class="n">kCGRenderingIntentDefault</span><span class="p">);</span>                     <span class="c1">// Intent   </span>
</span><span class='line'>
</span><span class='line'>    <span class="n">self</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="nl">initWithCGImage:</span><span class="n">imageRef</span><span class="p">];</span>
</span><span class='line'>    <span class="n">CGImageRelease</span><span class="p">(</span><span class="n">imageRef</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CGDataProviderRelease</span><span class="p">(</span><span class="n">provider</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CGColorSpaceRelease</span><span class="p">(</span><span class="n">colorSpace</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS开发中常用的宏定义]]></title>
    <link href="http://danielxu.github.com/blog/2013/01/15/common-macro-definitions/"/>
    <updated>2013-01-15T14:09:00+08:00</updated>
    <id>http://danielxu.github.com/blog/2013/01/15/common-macro-definitions</id>
    <content type="html"><![CDATA[<h1>系统文件夹</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#define DocumentsDirectory [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory,NSUserDomainMask, YES) objectAtIndex:0]</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define LibraryDirectory [NSSearchPathForDirectoriesInDomains(NSLibraryDirectory,NSUserDomainMask, YES) objectAtIndex:0]</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define DocumentsSubDirectory(dir) [[NSSearchPathForDirectoriesInDomains(NSDocumentDirectory,NSUserDomainMask, YES) objectAtIndex:0] stringByAppendingPathComponent:dir]</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define LibrarySubDirectory(dir) [[NSSearchPathForDirectoriesInDomains(NSLibraryDirectory,NSUserDomainMask, YES) objectAtIndex:0] stringByAppendingPathComponent:dir]</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define CacheDirectory [NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES) objectAtIndex:0]</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define CacheSubDirectory(dir) [[NSSearchPathForDirectoriesInDomains(NSCachesDirectory,NSUserDomainMask, YES) objectAtIndex:0] stringByAppendingPathComponent:dir]</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define TempDirectory NSTemporaryDirectory()</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define TempSubDirectory(dir) [NSTemporaryDirectory() stringByAppendingPathComponent:dir]</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<h1>常用常量</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">//常用名称</span>
</span><span class='line'><span class="cp">#define IS_IPHONE ( [[[UIDevice currentDevice] model] isEqualToString:@&quot;iPhone&quot;] )</span>
</span><span class='line'><span class="cp">#define IS_IPOD   ( [[[UIDevice currentDevice ] model] isEqualToString:@&quot;iPod touch&quot;] )</span>
</span><span class='line'><span class="cp">#define IS_HEIGHT_GTE_568 [[UIScreen mainScreen ] bounds].size.height &gt;= 568.0f</span>
</span><span class='line'><span class="cp">#define IS_IPHONE_5 ( IS_IPHONE &amp;&amp; IS_HEIGHT_GTE_568 )</span>
</span><span class='line'><span class="cp">#define IS_IOS51 ([[[UIDevice currentDevice] systemVersion] floatValue] &gt;= 5.1f)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//屏幕固定高度</span>
</span><span class='line'><span class="cp">#define UI_NAVIGATION_BAR_HEIGHT        44</span>
</span><span class='line'><span class="cp">#define UI_TOOL_BAR_HEIGHT              44</span>
</span><span class='line'><span class="cp">#define UI_TAB_BAR_HEIGHT               49</span>
</span><span class='line'><span class="cp">#define UI_STATUS_BAR_HEIGHT            20</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define UI_SCREEN_WIDTH                 ([[UIScreen mainScreen] bounds].size.width)</span>
</span><span class='line'><span class="cp">#define UI_SCREEN_HEIGHT                ([[UIScreen mainScreen] bounds].size.height)</span>
</span></code></pre></td></tr></table></div></figure>


<h1>短格式变量</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// Shorthand for getting localized strings</span>
</span><span class='line'><span class="c1">//#define LocalStr(key) [[NSBundle mainBundle] NSLocalizedString(key, nil)]</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//UserDefaults</span>
</span><span class='line'><span class="cp">#define DEFAULTS(type, key) ([[NSUserDefaults standardUserDefaults] type##ForKey:key])</span>
</span><span class='line'><span class="cp">#define SET_DEFAULTS(Type, key, val) do {\</span>
</span><span class='line'><span class="cp">[[NSUserDefaults standardUserDefaults] set##Type:val forKey:key];\</span>
</span><span class='line'><span class="cp">[[NSUserDefaults standardUserDefaults] synchronize];\</span>
</span><span class='line'><span class="cp">} while (0)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//16进制颜色</span>
</span><span class='line'><span class="cp">#define UIColorFromHex(hexValue) [UIColor \</span>
</span><span class='line'><span class="cp">colorWithRed:((float)((hexValue &amp; 0xFF0000) &gt;&gt; 16))/255.0 \</span>
</span><span class='line'><span class="cp">green:((float)((hexValue &amp; 0xFF00) &gt;&gt; 8))/255.0 \</span>
</span><span class='line'><span class="cp">blue:((float)(hexValue &amp; 0xFF))/255.0 alpha:1.0]</span>
</span></code></pre></td></tr></table></div></figure>


<h1>JLog.h</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// JLog</span>
</span><span class='line'><span class="cp">#ifndef DEBUG</span>
</span><span class='line'><span class="cp">#define DEBUG 1</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#ifndef JLog</span>
</span><span class='line'><span class="cp">#define JLine(firstarg, ...) ([NSString stringWithFormat:@&quot;\t(%08x.%04d)%s %@&quot;,self,__LINE__,__FUNCTION__,[NSString stringWithFormat:firstarg, ##__VA_ARGS__ ]])</span>
</span><span class='line'><span class="cp">#define JLineC(firstarg, ...) ([NSString stringWithFormat:@&quot;\t(%08x.%04d) %s %s(): %@&quot;,NULL,__LINE__,__FILE__,__FUNCTION__,[NSString stringWithFormat:firstarg , ##__VA_ARGS__ ]])</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define JLog(firstarg, ...) NSLog(@&quot;%@&quot;,JLine(firstarg , ##__VA_ARGS__ ))</span>
</span><span class='line'><span class="cp">#define JLogC(firstarg, ...) NSLog(@&quot;%@&quot;,JLineC(firstarg , ##__VA_ARGS__ ))</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define DJLog if(DEBUG)JLog</span>
</span><span class='line'><span class="cp">#define DJLogC if(DEBUG)JLogC</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define D2JLog if(DEBUG&gt;1)JLog</span>
</span><span class='line'><span class="cp">#define D2JLogC if(DEBUG&gt;1)JLogC</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define D3JLog if(DEBUG&gt;2)JLog</span>
</span><span class='line'><span class="cp">#define D3JLogC if(DEBUG&gt;2)JLogC</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define DJLOG if(DEBUG)DJLog(@&quot;&quot;);</span>
</span><span class='line'><span class="cp">#define D2JLOG if(DEBUG&gt;1)DJLog(@&quot;&quot;);</span>
</span><span class='line'><span class="cp">#define D3JLOG if(DEBUG&gt;1)DJLog(@&quot;&quot;);</span>
</span><span class='line'><span class="cp">#endif</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS编译问题收集]]></title>
    <link href="http://danielxu.github.com/blog/2013/01/15/ios-error-collation/"/>
    <updated>2013-01-15T13:35:00+08:00</updated>
    <id>http://danielxu.github.com/blog/2013/01/15/ios-error-collation</id>
    <content type="html"><![CDATA[<p>收集一些iOS开发编译过程中遇到的问题</p>

<h1>clang: error: invalid deployment target for -stdlib=libc++ (requires iOS 5.0 or later)</h1>

<ul>
<li>在 xcode 4.5中 设置target为4.3时一般会出现，也有可能你修改为了5.0也还是存在</li>
<li><strong>解决办法：</strong>将target 中的CLANG_CXX_LIBRARY项设置为libstdc++</li>
</ul>


<h1>发生错误时，Debug定位到新的tab页</h1>

<p><img src="http://danielxu.github.com/images/ioserror/xocd_debug_tab.png" alt="Debug_tab" /></p>

<h1>捕捉调试时程序异常崩溃错误</h1>

<p>我们在做程序调试的时候，一般发成崩溃的问题时，xcode一般就把错误直接抛到main函数，这样不便于我们查找错误处。这时添加一个Breakpoint，进行错误扑捉，那么程序再发生异常崩溃时，多半就会定位到出错的地方。</p>

<p><img src="http://danielxu.github.com/images/ioserror/exception.png" alt="exception_breakpoint" /></p>

<!--more-->


<h1>existing ivar &#8216;delegate&#8217; for property &#8216;delegate&#8217; with unsafe_unretained attribute must be __unsafe_unretained</h1>

<p>解决办法：写成如下模样的代码，就可以解决这个错误。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">__unsafe_unretained</span> <span class="kt">id</span> <span class="o">&lt;</span><span class="n">xxxDelegate</span><span class="o">&gt;</span> <span class="n">delegate</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">@property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">assign</span><span class="p">)</span> <span class="kt">id</span> <span class="o">&lt;</span><span class="n">xxxDelegate</span><span class="o">&gt;</span> <span class="n">delegate</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[编译tesseract-ocr（For iOS引擎）]]></title>
    <link href="http://danielxu.github.com/blog/2013/01/14/how-to-compile-tesseract-ocr-source-code-for-ios/"/>
    <updated>2013-01-14T10:52:00+08:00</updated>
    <id>http://danielxu.github.com/blog/2013/01/14/how-to-compile-tesseract-ocr-source-code-for-ios</id>
    <content type="html"><![CDATA[<p>编译的过程中需要一些额外的组件，有可能MAC下没有，我的电脑上是下面的这些需要安装。如有不同，可自行查找错误信息，安装缺失的工具。</p>

<p>参考：<a href="http://tinsuke.wordpress.com/2011/11/01/how-to-compile-and-use-tesseract-3-01-on-ios-sdk-5/">http://tinsuke.wordpress.com/2011/11/01/how-to-compile-and-use-tesseract-3-01-on-ios-sdk-5/</a></p>

<h1>MAC下安装autoconf和automake</h1>

<ul>
<li>安装m4</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -O http://mirrors.kernel.org/gnu/m4/m4-1.4.16.tar.gz
</span><span class='line'>tar -xzvf m4-1.4.16.tar.gz
</span><span class='line'><span class="nb">cd </span>m4-1.4.16
</span><span class='line'>./configure --prefix<span class="o">=</span>/usr/local
</span><span class='line'>make
</span><span class='line'>sudo make install
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>安装autoconf</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -O http://mirrors.kernel.org/gnu/autoconf/autoconf-2.69.tar.gz
</span><span class='line'>tar -xzvf autoconf-2.69.tar.gz
</span><span class='line'><span class="nb">cd </span>autoconf-2.69
</span><span class='line'>./configure --prefix<span class="o">=</span>/usr/local
</span><span class='line'>make
</span><span class='line'>sudo make install
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>安装automake</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -O http://mirrors.kernel.org/gnu/automake/automake-1.13.tar.gz
</span><span class='line'>tar -xzvf automake-1.13.tar.gz
</span><span class='line'><span class="nb">cd </span>automake-1.13
</span><span class='line'>./configure --prefix<span class="o">=</span>/usr/local
</span><span class='line'>make
</span><span class='line'>sudo make install
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>安装libtool</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -O http://mirrors.kernel.org/gnu/libtool/libtool-2.4.tar.gz
</span><span class='line'>tar -xzvf libtool-2.4.tar.gz
</span><span class='line'><span class="nb">cd </span>libtool-2.4
</span><span class='line'>./configure --prefix<span class="o">=</span>/usr/local
</span><span class='line'>make
</span><span class='line'>sudo make install
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<h1>编译<a href="http://code.google.com/p/tesseract-ocr/">tesseract</a></h1>

<p>在本地新建一个文件夹，如：build_tesseract将下面2个主要组件下载解压到此文件夹下.命令如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir build_tesseract
</span><span class='line'><span class="nb">cd </span>build_tesseract
</span></code></pre></td></tr></table></div></figure>


<p>在此文件夹下进行下面的命令：</p>

<ul>
<li>tesseract-ocr-3.02</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -O http://tesseract-ocr.googlecode.com/files/tesseract-ocr-3.02.02.tar.gz
</span><span class='line'>tar -xzvf tesseract-ocr-3.02.02.tar.gz
</span><span class='line'>mv tesseract-ocr-3.02.02 tesseract-ocr-3.02
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>leptonica-1.69</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -O http://www.leptonica.com/source/leptonica-1.69.tar.gz
</span><span class='line'>tar -xzvf leptonica-1.69.tar.gz
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>创建编译脚本 build.sh</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'><span class="c"># build.sh</span>
</span><span class='line'>
</span><span class='line'><span class="nv">GLOBAL_OUTDIR</span><span class="o">=</span><span class="s2">&quot;`pwd`/dependencies&quot;</span>
</span><span class='line'><span class="nv">LOCAL_OUTDIR</span><span class="o">=</span><span class="s2">&quot;./outdir&quot;</span>
</span><span class='line'><span class="nv">LEPTON_LIB</span><span class="o">=</span><span class="s2">&quot;`pwd`/leptonica-1.69&quot;</span>
</span><span class='line'><span class="nv">TESSERACT_LIB</span><span class="o">=</span><span class="s2">&quot;`pwd`/tesseract-3.02&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">IOS_BASE_SDK</span><span class="o">=</span><span class="s2">&quot;6.0&quot;</span>
</span><span class='line'><span class="nv">IOS_DEPLOY_TGT</span><span class="o">=</span><span class="s2">&quot;4.3&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c">#设置参数</span>
</span><span class='line'>setenv_all<span class="o">()</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>        <span class="c"># Add internal libs</span>
</span><span class='line'>        <span class="nb">export </span><span class="nv">CFLAGS</span><span class="o">=</span><span class="s2">&quot;$CFLAGS -I$GLOBAL_OUTDIR/include -L$GLOBAL_OUTDIR/lib&quot;</span>
</span><span class='line'>
</span><span class='line'>        <span class="nb">export </span><span class="nv">CXX</span><span class="o">=</span><span class="s2">&quot;$DEVROOT/usr/bin/llvm-g++&quot;</span>
</span><span class='line'>        <span class="nb">export </span><span class="nv">CC</span><span class="o">=</span><span class="s2">&quot;$DEVROOT/usr/bin/llvm-gcc&quot;</span>
</span><span class='line'>
</span><span class='line'>        <span class="nb">export </span><span class="nv">LD</span><span class="o">=</span><span class="nv">$DEVROOT</span>/usr/bin/ld
</span><span class='line'>        <span class="nb">export </span><span class="nv">AR</span><span class="o">=</span><span class="nv">$DEVROOT</span>/usr/bin/ar
</span><span class='line'>        <span class="nb">export </span><span class="nv">AS</span><span class="o">=</span><span class="nv">$DEVROOT</span>/usr/bin/as
</span><span class='line'>        <span class="nb">export </span><span class="nv">NM</span><span class="o">=</span><span class="nv">$DEVROOT</span>/usr/bin/nm
</span><span class='line'>        <span class="nb">export </span><span class="nv">RANLIB</span><span class="o">=</span><span class="nv">$DEVROOT</span>/usr/bin/ranlib
</span><span class='line'>        <span class="nb">export </span><span class="nv">LDFLAGS</span><span class="o">=</span><span class="s2">&quot;-L$SDKROOT/usr/lib/&quot;</span>
</span><span class='line'>
</span><span class='line'>        <span class="nb">export </span><span class="nv">CPPFLAGS</span><span class="o">=</span><span class="nv">$CFLAGS</span>
</span><span class='line'>        <span class="nb">export </span><span class="nv">CXXFLAGS</span><span class="o">=</span><span class="nv">$CFLAGS</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c">#编译armv7</span>
</span><span class='line'>setenv_arm7<span class="o">()</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="nb">unset </span>DEVROOT SDKROOT CFLAGS CC LD CPP CXX AR AS NM CXXCPP RANLIB LDFLAGS CPPFLAGS CXXFLAGS
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="nb">export </span><span class="nv">DEVROOT</span><span class="o">=</span>/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer
</span><span class='line'>    <span class="nb">export </span><span class="nv">SDKROOT</span><span class="o">=</span><span class="nv">$DEVROOT</span>/SDKs/iPhoneOS<span class="nv">$IOS_BASE_SDK</span>.sdk
</span><span class='line'>
</span><span class='line'>    <span class="nb">export </span><span class="nv">CFLAGS</span><span class="o">=</span><span class="s2">&quot;-arch armv7 -pipe -no-cpp-precomp -isysroot $SDKROOT -miphoneos-version-min=$IOS_DEPLOY_TGT -I$SDKROOT/usr/include/&quot;</span>
</span><span class='line'>
</span><span class='line'>    setenv_all
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>setenv_arm7s<span class="o">()</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="nb">unset </span>DEVROOT SDKROOT CFLAGS CC LD CPP CXX AR AS NM CXXCPP RANLIB LDFLAGS CPPFLAGS CXXFLAGS
</span><span class='line'>
</span><span class='line'>    <span class="nb">export </span><span class="nv">DEVROOT</span><span class="o">=</span>/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer
</span><span class='line'>    <span class="nb">export </span><span class="nv">SDKROOT</span><span class="o">=</span><span class="nv">$DEVROOT</span>/SDKs/iPhoneOS<span class="nv">$IOS_BASE_SDK</span>.sdk
</span><span class='line'>
</span><span class='line'>    <span class="nb">export </span><span class="nv">CFLAGS</span><span class="o">=</span><span class="s2">&quot;-arch armv7s -pipe -no-cpp-precomp -isysroot $SDKROOT -miphoneos-version-min=$IOS_DEPLOY_TGT -I$SDKROOT/usr/include/&quot;</span>
</span><span class='line'>
</span><span class='line'>    setenv_all
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c">#编译i386</span>
</span><span class='line'>setenv_i386<span class="o">()</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="nb">unset </span>DEVROOT SDKROOT CFLAGS CC LD CPP CXX AR AS NM CXXCPP RANLIB LDFLAGS CPPFLAGS CXXFLAGS
</span><span class='line'>
</span><span class='line'>    <span class="nb">export </span><span class="nv">DEVROOT</span><span class="o">=</span>/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer
</span><span class='line'>    <span class="nb">export </span><span class="nv">SDKROOT</span><span class="o">=</span><span class="nv">$DEVROOT</span>/SDKs/iPhoneSimulator<span class="nv">$IOS_BASE_SDK</span>.sdk
</span><span class='line'>
</span><span class='line'>    <span class="nb">export </span><span class="nv">CFLAGS</span><span class="o">=</span><span class="s2">&quot;-arch i386 -pipe -no-cpp-precomp -isysroot $SDKROOT -miphoneos-version-min=$IOS_DEPLOY_TGT&quot;</span>
</span><span class='line'>
</span><span class='line'>    setenv_all
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c">#合并为一个库</span>
</span><span class='line'>create_outdir_lipo<span class="o">()</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="k">for </span>lib_i386 in <span class="sb">`</span>find <span class="nv">$LOCAL_OUTDIR</span>/i386 -name <span class="s2">&quot;lib*.a&quot;</span><span class="sb">`</span>; <span class="k">do</span>
</span><span class='line'><span class="k">        </span><span class="nv">lib_arm7</span><span class="o">=</span><span class="sb">`</span><span class="nb">echo</span> <span class="nv">$lib_i386</span> | sed <span class="s2">&quot;s/i386/arm7/g&quot;</span><span class="sb">`</span>
</span><span class='line'>        <span class="nv">lib_arm7s</span><span class="o">=</span><span class="sb">`</span><span class="nb">echo</span> <span class="nv">$lib_i386</span> | sed <span class="s2">&quot;s/i386/arm7s/g&quot;</span><span class="sb">`</span>
</span><span class='line'>        <span class="nv">lib</span><span class="o">=</span><span class="sb">`</span><span class="nb">echo</span> <span class="nv">$lib_i386</span> | sed <span class="s2">&quot;s/i386//g&quot;</span><span class="sb">`</span>
</span><span class='line'>        xcrun -sdk iphoneos lipo -arch armv7s <span class="nv">$lib_arm7s</span> -arch armv7 <span class="nv">$lib_arm7</span> -arch i386 <span class="nv">$lib_i386</span> -create -output <span class="nv">$lib</span>
</span><span class='line'>    <span class="k">done</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>merge_libfiles<span class="o">()</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="nv">DIR</span><span class="o">=</span><span class="nv">$1</span>
</span><span class='line'>    <span class="nv">LIBNAME</span><span class="o">=</span><span class="nv">$2</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">cd</span> <span class="nv">$DIR</span>
</span><span class='line'>    <span class="k">for </span>i in <span class="sb">`</span>find . -name <span class="s2">&quot;lib*.a&quot;</span><span class="sb">`</span>; <span class="k">do</span>
</span><span class='line'>        <span class="nv">$AR</span> -x <span class="nv">$i</span>
</span><span class='line'>    <span class="k">done</span>
</span><span class='line'>    <span class="nv">$AR</span> -r <span class="nv">$LIBNAME</span> *.o
</span><span class='line'>    rm -rf *.o __*
</span><span class='line'>    <span class="nb">cd</span> -
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c">#######################</span>
</span><span class='line'><span class="c"># LEPTONLIB</span>
</span><span class='line'><span class="c">#######################</span>
</span><span class='line'><span class="nb">cd</span> <span class="nv">$LEPTON_LIB</span>
</span><span class='line'>rm -rf <span class="nv">$LOCAL_OUTDIR</span>
</span><span class='line'>mkdir -p <span class="nv">$LOCAL_OUTDIR</span>/arm7 <span class="nv">$LOCAL_OUTDIR</span>/i386 <span class="nv">$LOCAL_OUTDIR</span>/arm7s
</span><span class='line'>
</span><span class='line'>make clean 2&gt; /dev/null
</span><span class='line'>make distclean 2&gt; /dev/null
</span><span class='line'>setenv_arm7
</span><span class='line'>./configure --host<span class="o">=</span>arm-apple-darwin7 --enable-shared<span class="o">=</span>no --disable-programs --without-zlib --without-libpng --without-jpeg --without-giflib --without-libtiff
</span><span class='line'>make -j12
</span><span class='line'>cp -rvf src/.libs/lib*.a <span class="nv">$LOCAL_OUTDIR</span>/arm7
</span><span class='line'>
</span><span class='line'>make clean 2&gt; /dev/null
</span><span class='line'>make distclean 2&gt; /dev/null
</span><span class='line'>setenv_arm7s
</span><span class='line'>./configure --host<span class="o">=</span>arm-apple-darwin7s --enable-shared<span class="o">=</span>no --disable-programs --without-zlib --without-libpng --without-jpeg --without-giflib --without-libtiff
</span><span class='line'>make -j12
</span><span class='line'>cp -rvf src/.libs/lib*.a <span class="nv">$LOCAL_OUTDIR</span>/arm7s
</span><span class='line'>
</span><span class='line'>make clean 2&gt; /dev/null
</span><span class='line'>make distclean 2&gt; /dev/null
</span><span class='line'>setenv_i386
</span><span class='line'>./configure --enable-shared<span class="o">=</span>no --disable-programs --without-zlib --without-libpng --without-jpeg --without-giflib --without-libtiff
</span><span class='line'>make -j12
</span><span class='line'>cp -rvf src/.libs/lib*.a <span class="nv">$LOCAL_OUTDIR</span>/i386
</span><span class='line'>
</span><span class='line'>create_outdir_lipo
</span><span class='line'>mkdir -p <span class="nv">$GLOBAL_OUTDIR</span>/include/leptonica <span class="o">&amp;&amp;</span> cp -rvf src/*.h <span class="nv">$GLOBAL_OUTDIR</span>/include/leptonica
</span><span class='line'>mkdir -p <span class="nv">$GLOBAL_OUTDIR</span>/lib <span class="o">&amp;&amp;</span> cp -rvf <span class="nv">$LOCAL_OUTDIR</span>/lib*.a <span class="nv">$GLOBAL_OUTDIR</span>/lib
</span><span class='line'><span class="nb">cd</span> ..
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c">#######################</span>
</span><span class='line'><span class="c"># TESSERACT-OCR (v3)</span>
</span><span class='line'><span class="c">#######################</span>
</span><span class='line'><span class="nb">cd</span> <span class="nv">$TESSERACT_LIB</span>
</span><span class='line'>rm -rf <span class="nv">$LOCAL_OUTDIR</span>
</span><span class='line'>mkdir -p <span class="nv">$LOCAL_OUTDIR</span>/arm7 <span class="nv">$LOCAL_OUTDIR</span>/i386 <span class="nv">$LOCAL_OUTDIR</span>/arm7s
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>make clean 2&gt; /dev/null
</span><span class='line'>make distclean 2&gt; /dev/null
</span><span class='line'>setenv_arm7
</span><span class='line'>bash autogen.sh
</span><span class='line'>./configure --host<span class="o">=</span>arm-apple-darwin7 --enable-shared<span class="o">=</span>no <span class="nv">LIBLEPT_HEADERSDIR</span><span class="o">=</span><span class="nv">$GLOBAL_OUTDIR</span>/include/
</span><span class='line'>make -j12
</span><span class='line'><span class="k">for </span>i in <span class="sb">`</span>find . -name <span class="s2">&quot;lib*.a&quot;</span> | grep -v arm<span class="sb">`</span>; <span class="k">do </span>cp -rvf <span class="nv">$i</span> <span class="nv">$LOCAL_OUTDIR</span>/arm7; <span class="k">done</span>
</span><span class='line'>merge_libfiles <span class="nv">$LOCAL_OUTDIR</span>/arm7 libtesseract_all.a
</span><span class='line'>
</span><span class='line'>make clean 2&gt; /dev/null
</span><span class='line'>make distclean 2&gt; /dev/null
</span><span class='line'>setenv_arm7s
</span><span class='line'>bash autogen.sh
</span><span class='line'>./configure --host<span class="o">=</span>arm-apple-darwin7s --enable-shared<span class="o">=</span>no <span class="nv">LIBLEPT_HEADERSDIR</span><span class="o">=</span><span class="nv">$GLOBAL_OUTDIR</span>/include/
</span><span class='line'>make -j12
</span><span class='line'><span class="k">for </span>i in <span class="sb">`</span>find . -name <span class="s2">&quot;lib*.a&quot;</span> | grep -v arm<span class="sb">`</span>; <span class="k">do </span>cp -rvf <span class="nv">$i</span> <span class="nv">$LOCAL_OUTDIR</span>/arm7s; <span class="k">done</span>
</span><span class='line'>merge_libfiles <span class="nv">$LOCAL_OUTDIR</span>/arm7s libtesseract_all.a
</span><span class='line'>
</span><span class='line'>make clean 2&gt; /dev/null
</span><span class='line'>make distclean 2&gt; /dev/null
</span><span class='line'>setenv_i386
</span><span class='line'>bash autogen.sh
</span><span class='line'>./configure --enable-shared<span class="o">=</span>no <span class="nv">LIBLEPT_HEADERSDIR</span><span class="o">=</span><span class="nv">$GLOBAL_OUTDIR</span>/include/
</span><span class='line'>make -j12
</span><span class='line'><span class="k">for </span>i in <span class="sb">`</span>find . -name <span class="s2">&quot;lib*.a&quot;</span> | grep -v arm<span class="sb">`</span>; <span class="k">do </span>cp -rvf <span class="nv">$i</span> <span class="nv">$LOCAL_OUTDIR</span>/i386; <span class="k">done</span>
</span><span class='line'>merge_libfiles <span class="nv">$LOCAL_OUTDIR</span>/i386 libtesseract_all.a
</span><span class='line'>
</span><span class='line'>create_outdir_lipo
</span><span class='line'>mkdir -p <span class="nv">$GLOBAL_OUTDIR</span>/include/tesseract
</span><span class='line'><span class="nv">tess_inc</span><span class="o">=(</span> api/apitypes.h api/baseapi.h ccstruct/publictypes.h ccutil/errcode.h
</span><span class='line'>           ccutil/genericvector.h ccutil/helpers.h ccutil/host.h ccutil/ndminx.h ccutil/ocrclass.h
</span><span class='line'>           ccutil/platform.h ccutil/tesscallback.h ccutil/unichar.h ccutil/unicharmap.h ccutil/unicharset.h
</span><span class='line'>           ccutil/strngs.h ccutil/memry.h ccmain/ltrresultiterator.h ccmain/pageiterator.h
</span><span class='line'>           ccmain/resultiterator.h ccmain/thresholder.h <span class="o">)</span>
</span><span class='line'><span class="k">for </span>i in <span class="s2">&quot;${tess_inc[@]}&quot;</span>; <span class="k">do</span>
</span><span class='line'><span class="k">   </span>cp -rvf <span class="nv">$i</span> <span class="nv">$GLOBAL_OUTDIR</span>/include/tesseract
</span><span class='line'><span class="k">done</span>
</span><span class='line'>mkdir -p <span class="nv">$GLOBAL_OUTDIR</span>/lib <span class="o">&amp;&amp;</span> cp -rvf <span class="nv">$LOCAL_OUTDIR</span>/lib*.a <span class="nv">$GLOBAL_OUTDIR</span>/lib
</span><span class='line'>make clean 2&gt; /dev/null
</span><span class='line'>make distclean 2&gt; /dev/null
</span><span class='line'>rm -rf <span class="nv">$LOCAL_OUTDIR</span>
</span><span class='line'><span class="nb">cd</span> ..
</span><span class='line'>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;Finished!&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>给 build.sh 添加执行权限,并执行</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chmod +x build.sh
</span><span class='line'>./build.sh
</span></code></pre></td></tr></table></div></figure>


<p><strong>注意：</strong>有可能会报这个错误：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>autoheader: error: AC_CONFIG_HEADERS not found in configure.ac
</span></code></pre></td></tr></table></div></figure>


<p>这时需要修改 tesseract-3.02.02/configure.ac 文件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#AM_INIT_AUTOMAKE(dist-zip)</span>
</span><span class='line'> AM_INIT_AUTOMAKE
</span><span class='line'><span class="c">#AM_CONFIG_HEADER(config_auto.h:config/config.h.in)  //将这句注释</span>
</span><span class='line'>AC_CONFIG_HEADER<span class="o">(</span>config_auto.h:config/config.h.in<span class="o">)</span> //修改为这个
</span></code></pre></td></tr></table></div></figure>


<p>编译成功后，会在当前目录下的 dependencies 文件夹生成所需要的头文件“.h”和lib库&#8221;*.a&#8221;。项目中只需要使用头文件和liblept.a、libtesseract_all.a这2个库即可。</p>

<p><img src="http://danielxu.github.com/images/tesseract/build_success.png" alt="tesseract" /></p>

<h1>使用</h1>

<h2>简单使用</h2>

<p>参考：<a href="https://github.com/ldiqual/tesseract-ios">tesseract-ios</a>和<a href="https://github.com/ldiqual/tesseract-ios-lib/tree/master/lib">tesseract-ios-lib</a></p>

<ul>
<li>Tesseract.h</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Tesseract.h</span>
</span><span class='line'><span class="c1">//  Tesseract</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="cp">#import &lt;Foundation/Foundation.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">Tesseract</span> : <span class="nc">NSObject</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSString</span><span class="o">*</span> <span class="n">_dataPath</span><span class="p">;</span>
</span><span class='line'>    <span class="n">NSString</span><span class="o">*</span> <span class="n">_language</span><span class="p">;</span>
</span><span class='line'>    <span class="n">NSMutableDictionary</span><span class="o">*</span> <span class="n">_variables</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">+</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">version</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">initWithDataPath:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">dataPath</span> <span class="nf">language:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">language</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setVariableValue:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">value</span> <span class="nf">forKey:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">key</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setImage:</span><span class="p">(</span><span class="n">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nv">image</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">setLanguage:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">language</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">recognize</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">recognizedText</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Tesseract.mm</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Tesseract.mm</span>
</span><span class='line'><span class="c1">//  Tesseract</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#import &quot;Tesseract.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#import &quot;baseapi.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;environ.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;pix.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">namespace</span> <span class="n">tesseract</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">class</span> <span class="n">TessBaseAPI</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">Tesseract</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">tesseract</span><span class="o">::</span><span class="n">TessBaseAPI</span><span class="o">*</span> <span class="n">_tesseract</span><span class="p">;</span>
</span><span class='line'>    <span class="n">uint32_t</span><span class="o">*</span> <span class="n">_pixels</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">Tesseract</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">version</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithFormat:</span><span class="s">@&quot;%s&quot;</span><span class="p">,</span> <span class="n">tesseract</span><span class="o">::</span><span class="n">TessBaseAPI</span><span class="o">::</span><span class="n">Version</span><span class="p">()];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">initWithDataPath:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">dataPath</span> <span class="nf">language:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">language</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">self</span> <span class="o">=</span> <span class="p">[</span><span class="n">super</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">self</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">_dataPath</span> <span class="o">=</span> <span class="n">dataPath</span><span class="p">;</span>
</span><span class='line'>        <span class="n">_language</span> <span class="o">=</span> <span class="n">language</span><span class="p">;</span>
</span><span class='line'>        <span class="n">_variables</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSMutableDictionary</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">[</span><span class="n">self</span> <span class="n">copyDataToDocumentsDirectory</span><span class="p">];</span>
</span><span class='line'>        <span class="n">_tesseract</span> <span class="o">=</span> <span class="n">new</span> <span class="n">tesseract</span><span class="o">::</span><span class="n">TessBaseAPI</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="kt">BOOL</span> <span class="n">success</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="n">initEngine</span><span class="p">];</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">success</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">initEngine</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">returnCode</span> <span class="o">=</span> <span class="n">_tesseract</span><span class="o">-&gt;</span><span class="n">Init</span><span class="p">([</span><span class="n">_dataPath</span> <span class="n">UTF8String</span><span class="p">],</span> <span class="p">[</span><span class="n">_language</span> <span class="n">UTF8String</span><span class="p">]);</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="n">returnCode</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="o">?</span> <span class="n">YES</span> <span class="o">:</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">copyDataToDocumentsDirectory</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Useful paths</span>
</span><span class='line'>    <span class="n">NSFileManager</span> <span class="o">*</span><span class="n">fileManager</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSFileManager</span> <span class="n">defaultManager</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSArray</span> <span class="o">*</span><span class="n">documentPaths</span> <span class="o">=</span> <span class="n">NSSearchPathForDirectoriesInDomains</span><span class="p">(</span><span class="n">NSDocumentDirectory</span><span class="p">,</span> <span class="n">NSUserDomainMask</span><span class="p">,</span> <span class="n">YES</span><span class="p">);</span>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span><span class="n">documentPath</span> <span class="o">=</span> <span class="p">([</span><span class="n">documentPaths</span> <span class="n">count</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="o">?</span> <span class="p">[</span><span class="n">documentPaths</span> <span class="nl">objectAtIndex:</span><span class="mi">0</span><span class="p">]</span> <span class="o">:</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span><span class="n">dataPath</span> <span class="o">=</span> <span class="p">[</span><span class="n">documentPath</span> <span class="nl">stringByAppendingPathComponent:</span><span class="n">_dataPath</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Copy data in Doc Directory</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">[</span><span class="n">fileManager</span> <span class="nl">fileExistsAtPath:</span><span class="n">dataPath</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">NSString</span> <span class="o">*</span><span class="n">bundlePath</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSBundle</span> <span class="nl">bundleForClass:</span><span class="p">[</span><span class="n">self</span> <span class="n">class</span><span class="p">]]</span> <span class="n">bundlePath</span><span class="p">];</span>
</span><span class='line'>        <span class="n">NSString</span> <span class="o">*</span><span class="n">tessdataPath</span> <span class="o">=</span> <span class="p">[</span><span class="n">bundlePath</span> <span class="nl">stringByAppendingPathComponent:</span><span class="n">_dataPath</span><span class="p">];</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">tessdataPath</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="p">[</span><span class="n">fileManager</span> <span class="nl">createDirectoryAtPath:</span><span class="n">documentPath</span> <span class="nl">withIntermediateDirectories:</span><span class="n">YES</span> <span class="nl">attributes:</span><span class="nb">nil</span> <span class="nl">error:</span><span class="nb">NULL</span><span class="p">];</span>
</span><span class='line'>            <span class="p">[</span><span class="n">fileManager</span> <span class="nl">copyItemAtPath:</span><span class="n">tessdataPath</span> <span class="nl">toPath:</span><span class="n">dataPath</span> <span class="nl">error:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">setenv</span><span class="p">(</span><span class="s">&quot;TESSDATA_PREFIX&quot;</span><span class="p">,</span> <span class="p">[[</span><span class="n">documentPath</span> <span class="nl">stringByAppendingString:</span><span class="s">@&quot;/&quot;</span><span class="p">]</span> <span class="n">UTF8String</span><span class="p">],</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setVariableValue:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">value</span> <span class="nf">forKey:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">key</span> <span class="p">{</span>
</span><span class='line'>    <span class="cm">/*</span>
</span><span class='line'><span class="cm">     * Example:</span>
</span><span class='line'><span class="cm">     * _tesseract-&gt;SetVariable(&quot;tessedit_char_whitelist&quot;, &quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;);</span>
</span><span class='line'><span class="cm">     * _tesseract-&gt;SetVariable(&quot;language_model_penalty_non_freq_dict_word&quot;, &quot;0&quot;);</span>
</span><span class='line'><span class="cm">     * _tesseract-&gt;SetVariable(&quot;language_model_penalty_non_dict_word &quot;, &quot;0&quot;);</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">_variables</span> <span class="nl">setValue:</span><span class="n">value</span> <span class="nl">forKey:</span><span class="n">key</span><span class="p">];</span>
</span><span class='line'>    <span class="n">_tesseract</span><span class="o">-&gt;</span><span class="n">SetVariable</span><span class="p">([</span><span class="n">key</span> <span class="n">UTF8String</span><span class="p">],</span> <span class="p">[</span><span class="n">value</span> <span class="n">UTF8String</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">loadVariables</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="n">NSString</span><span class="o">*</span> <span class="n">key</span> <span class="k">in</span> <span class="n">_variables</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">NSString</span><span class="o">*</span> <span class="n">value</span> <span class="o">=</span> <span class="p">[</span><span class="n">_variables</span> <span class="nl">objectForKey:</span><span class="n">key</span><span class="p">];</span>
</span><span class='line'>        <span class="n">_tesseract</span><span class="o">-&gt;</span><span class="n">SetVariable</span><span class="p">([</span><span class="n">key</span> <span class="n">UTF8String</span><span class="p">],</span> <span class="p">[</span><span class="n">value</span> <span class="n">UTF8String</span><span class="p">]);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">setLanguage:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">language</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">_language</span> <span class="o">=</span> <span class="n">language</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">returnCode</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="n">initEngine</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">returnCode</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/*</span>
</span><span class='line'><span class="cm">     * &quot;WARNING: On changing languages, all Tesseract parameters</span>
</span><span class='line'><span class="cm">     * are reset back to their default values.&quot;</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="n">loadVariables</span><span class="p">];</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">recognize</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">returnCode</span> <span class="o">=</span> <span class="n">_tesseract</span><span class="o">-&gt;</span><span class="n">Recognize</span><span class="p">(</span><span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="n">returnCode</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="o">?</span> <span class="n">YES</span> <span class="o">:</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">recognizedText</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">char</span><span class="o">*</span> <span class="n">utf8Text</span> <span class="o">=</span> <span class="n">_tesseract</span><span class="o">-&gt;</span><span class="n">GetUTF8Text</span><span class="p">();</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithUTF8String:</span><span class="n">utf8Text</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setImage:</span><span class="p">(</span><span class="n">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nv">image</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">free</span><span class="p">(</span><span class="n">_pixels</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGSize</span> <span class="n">size</span> <span class="o">=</span> <span class="p">[</span><span class="n">image</span> <span class="n">size</span><span class="p">];</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">width</span> <span class="o">=</span> <span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">height</span> <span class="o">=</span> <span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">width</span> <span class="o">&lt;=</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">height</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">_pixels</span> <span class="o">=</span> <span class="p">(</span><span class="n">uint32_t</span> <span class="o">*</span><span class="p">)</span> <span class="n">malloc</span><span class="p">(</span><span class="n">width</span> <span class="o">*</span> <span class="n">height</span> <span class="o">*</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">uint32_t</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Clear the pixels so any transparency is preserved</span>
</span><span class='line'>    <span class="n">memset</span><span class="p">(</span><span class="n">_pixels</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">width</span> <span class="o">*</span> <span class="n">height</span> <span class="o">*</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">uint32_t</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGColorSpaceRef</span> <span class="n">colorSpace</span> <span class="o">=</span> <span class="n">CGColorSpaceCreateDeviceRGB</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Create a context with RGBA _pixels</span>
</span><span class='line'>    <span class="n">CGContextRef</span> <span class="n">context</span> <span class="o">=</span> <span class="n">CGBitmapContextCreate</span><span class="p">(</span><span class="n">_pixels</span><span class="p">,</span> <span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="n">width</span> <span class="o">*</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">uint32_t</span><span class="p">),</span> <span class="n">colorSpace</span><span class="p">,</span>
</span><span class='line'>                                                 <span class="n">kCGBitmapByteOrder32Little</span> <span class="o">|</span> <span class="n">kCGImageAlphaPremultipliedLast</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Paint the bitmap to our context which will fill in the _pixels array</span>
</span><span class='line'>    <span class="n">CGContextDrawImage</span><span class="p">(</span><span class="n">context</span><span class="p">,</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">),</span> <span class="p">[</span><span class="n">image</span> <span class="n">CGImage</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// We&#39;re done with the context and color space</span>
</span><span class='line'>    <span class="n">CGContextRelease</span><span class="p">(</span><span class="n">context</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CGColorSpaceRelease</span><span class="p">(</span><span class="n">colorSpace</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">_tesseract</span><span class="o">-&gt;</span><span class="n">SetImage</span><span class="p">((</span><span class="k">const</span> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="p">)</span> <span class="n">_pixels</span><span class="p">,</span> <span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">uint32_t</span><span class="p">),</span> <span class="n">width</span> <span class="o">*</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">uint32_t</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Code Sample</h2>

<pre><code>#import "Tesseract.h"

Tesseract* tesseract = [[Tesseract alloc] initWithDataPath:@"tessdata" language:@"eng"];
[tesseract setVariableValue:@"0123456789" forKey:@"tessedit_char_whitelist"];
[tesseract setImage:[UIImage imageNamed:@"image_sample.jpg"]];
[tesseract recognize];

NSLog(@"%@", [tesseract recognizedText]);
</code></pre>

<h2>其他方式使用</h2>

<p>可以结合下列参考：</p>

<ul>
<li><p><a href="https://github.com/rcarlsen/Pocket-OCR">https://github.com/rcarlsen/Pocket-OCR</a></p></li>
<li><p>官方 <a href="http://developer.apple.com/library/ios/#samplecode/PhotoPicker/Introduction/Intro.html">PhotoPicker</a> 实例</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UIViewController加载与销毁]]></title>
    <link href="http://danielxu.github.com/blog/2013/01/11/uiviewcontroller-life-cycle/"/>
    <updated>2013-01-11T11:37:00+08:00</updated>
    <id>http://danielxu.github.com/blog/2013/01/11/uiviewcontroller-life-cycle</id>
    <content type="html"><![CDATA[<h5>感觉这个标题更合适一些，引用<a href="http://blog.csdn.net/delphi090902/article/details/6936082">delphi090902</a>的blog</h5>

<h1>view有两个重要circle</h1>

<h2>加载</h2>

<ul>
<li><p><strong>view（属性）</strong> 每一个UIViewController都会有property，叫“view”，这是default的，在UIViewController初始化后，当程序某部分访问view时，这时如果view是没有在内存中存在，view controller会调用loadView方法。</p></li>
<li><p><strong>loadView</strong> 只有在你在代码中创建实现你的view时需要在对应UIViewController里重写该方法。</p>

<ul>
<li>如果你重写了loadView，你需要创建所有相关的views，并且赋值view一个非nil值。</li>
<li><p>如果你没有重写这个方法，默认初始化方式使用view controller的nibName和nibBundle属性来试图从一个专有的nib文件加载。</p>

<ul>
<li>如果没有找到那个专有的那个nib文件，默认会去找一个名字与view controller相匹配的nib文件去加载。</li>
<li>如果没有有效的nib文件，默认实现最后会返回一个空view，并且赋值给view。</li>
</ul>
</li>
<li><p><strong>注意：</strong>不要<code>[super loadView]</code>，减少不必要的资源消耗</p></li>
</ul>
</li>
<li><p><strong>viewDidLoad</strong> 无论你是否用Interface Builder创建nib文件创建UIViewController ，这个方法都会被调用的。它是用来做一些额外在你架子啊你的view时需要做的任务。</p></li>
<li><p><strong>viewDidUnload</strong> 如果在UIViewController里存储了IBOutlet，和UIView或者其子类，在viewDidUnload里都要赋值它们为nil，用self.xxx方式，因为这同时会出发setter里的release方法。否则会有leak。</p></li>
</ul>


<!--more-->


<p><img src="http://danielxu.github.com/images/viewcontroller/viewcontroller_load.gif" title="Load" alt="UIViewController load cycle" /></p>

<h2>卸载</h2>

<p>view被卸载发生在程序收到系统的low memory warning时。</p>

<p>每一个view controller都会调用自己的<code>didReceiveMemoryWarning</code>方法。</p>

<p>如果你重写了这个方法，你需要release掉所有你的view controller不在使用的自定义数据。一定不要在这个方法里release你view controller的view property。你必须要使用super方法来执行一些默认操作。</p>

<p>默认实现是只release那些执行release操作安全的view。</p>

<p>如果view controller release它的view，它会调用viewDidUnload方法，你可以重写这个方法来实现一些额外的清除你的views工作。</p>

<p><img src="http://danielxu.github.com/images/viewcontroller/viewcontroller_unload.gif" title="UnLoad" alt="UIViewController unload cycle" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NSString的一些使用扩展]]></title>
    <link href="http://danielxu.github.com/blog/2013/01/10/nsstring-usage/"/>
    <updated>2013-01-10T15:32:00+08:00</updated>
    <id>http://danielxu.github.com/blog/2013/01/10/nsstring-usage</id>
    <content type="html"><![CDATA[<p>整理的一些关于NSString的扩展使用方法。以下是代码：</p>

<ul>
<li>NSString+Extensions.h</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;Foundation/Foundation.h&gt;</span>
</span><span class='line'><span class="cp">#import &lt;CommonCrypto/CommonDigest.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">NSString</span> <span class="nl">(Extensions)</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">lowercaseFirstCharacter</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">uppercaseFirstCharacter</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">isEmpty</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">trim</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">trimTheExtraSpaces</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">escapeHTML</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">stringByDecodingXMLEntities</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">md5</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">md5ForUTF16</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">CGFloat</span><span class="p">)</span><span class="nf">fontSizeWithFont:</span><span class="p">(</span><span class="n">UIFont</span> <span class="o">*</span><span class="p">)</span><span class="nv">font</span> <span class="nf">constrainedToSize:</span><span class="p">(</span><span class="n">CGSize</span><span class="p">)</span><span class="nv">size</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSMutableArray</span> <span class="o">*</span><span class="p">)</span><span class="nf">tokenizationStringByNSStringEnumerationOptions:</span><span class="p">(</span><span class="n">NSStringEnumerationOptions</span><span class="p">)</span><span class="nv">opts</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">languageForString</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSMutableArray</span> <span class="o">*</span><span class="p">)</span><span class="nf">analyseTextOfSentences</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<ul>
<li>NSString+Extensions.m</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;NSString+Extensions.h&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">NSString</span> <span class="nl">(Extensions)</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#pragma mark - 转换string大小写</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">lowercaseFirstCharacter</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSRange</span> <span class="n">range</span> <span class="o">=</span> <span class="n">NSMakeRange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>  <span class="n">NSString</span> <span class="o">*</span><span class="n">lowerFirstCharacter</span> <span class="o">=</span> <span class="p">[[</span><span class="n">self</span> <span class="nl">substringToIndex:</span><span class="mi">1</span><span class="p">]</span> <span class="n">lowercaseString</span><span class="p">];</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">[</span><span class="n">self</span> <span class="nl">stringByReplacingCharactersInRange:</span><span class="n">range</span> <span class="nl">withString:</span><span class="n">lowerFirstCharacter</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">uppercaseFirstCharacter</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSRange</span> <span class="n">range</span> <span class="o">=</span> <span class="n">NSMakeRange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>  <span class="n">NSString</span> <span class="o">*</span><span class="n">upperFirstCharacter</span> <span class="o">=</span> <span class="p">[[</span><span class="n">self</span> <span class="nl">substringToIndex:</span><span class="mi">1</span><span class="p">]</span> <span class="n">uppercaseString</span><span class="p">];</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">[</span><span class="n">self</span> <span class="nl">stringByReplacingCharactersInRange:</span><span class="n">range</span> <span class="nl">withString:</span><span class="n">upperFirstCharacter</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#pragma mark - trim string</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">trim</span> <span class="p">{</span>
</span><span class='line'>   <span class="k">return</span> <span class="p">[</span><span class="n">self</span> <span class="nl">stringByTrimmingCharactersInSet:</span><span class="p">[</span><span class="n">NSCharacterSet</span> <span class="n">whitespaceAndNewlineCharacterSet</span><span class="p">]];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">trimTheExtraSpaces</span><span class="p">{</span>
</span><span class='line'>    <span class="n">NSCharacterSet</span> <span class="o">*</span><span class="n">whitespaces</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSCharacterSet</span> <span class="n">whitespaceCharacterSet</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSPredicate</span> <span class="o">*</span><span class="n">noEmptyStrings</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSPredicate</span> <span class="nl">predicateWithFormat:</span><span class="s">@&quot;SELF != &#39;&#39;&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">NSArray</span> <span class="o">*</span><span class="n">parts</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="nl">componentsSeparatedByCharactersInSet:</span><span class="n">whitespaces</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSArray</span> <span class="o">*</span><span class="n">filteredArray</span> <span class="o">=</span> <span class="p">[</span><span class="n">parts</span> <span class="nl">filteredArrayUsingPredicate:</span><span class="n">noEmptyStrings</span><span class="p">];</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">[</span><span class="n">filteredArray</span> <span class="nl">componentsJoinedByString:</span><span class="s">@&quot; &quot;</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//是否是空字符串</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">isEmpty</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSCharacterSet</span> <span class="o">*</span><span class="n">charSet</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSCharacterSet</span> <span class="n">whitespaceAndNewlineCharacterSet</span><span class="p">];</span>
</span><span class='line'>  <span class="n">NSString</span> <span class="o">*</span><span class="n">trimmed</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="nl">stringByTrimmingCharactersInSet:</span><span class="n">charSet</span><span class="p">];</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">[</span><span class="n">trimmed</span> <span class="nl">isEqualToString:</span><span class="s">@&quot;&quot;</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//替换HTML代码</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">escapeHTML</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSMutableString</span> <span class="o">*</span><span class="n">result</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSMutableString</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithString:</span><span class="n">self</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">result</span> <span class="nl">replaceOccurrencesOfString:</span><span class="s">@&quot;&amp;&quot;</span> <span class="nl">withString:</span><span class="s">@&quot;&amp;amp;&quot;</span> <span class="nl">options:</span><span class="n">NSLiteralSearch</span> <span class="nl">range:</span><span class="n">NSMakeRange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="p">[</span><span class="n">result</span> <span class="n">length</span><span class="p">])];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">result</span> <span class="nl">replaceOccurrencesOfString:</span><span class="s">@&quot;&lt;&quot;</span> <span class="nl">withString:</span><span class="s">@&quot;&amp;lt;&quot;</span> <span class="nl">options:</span><span class="n">NSLiteralSearch</span> <span class="nl">range:</span><span class="n">NSMakeRange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="p">[</span><span class="n">result</span> <span class="n">length</span><span class="p">])];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">result</span> <span class="nl">replaceOccurrencesOfString:</span><span class="s">@&quot;&gt;&quot;</span> <span class="nl">withString:</span><span class="s">@&quot;&amp;gt;&quot;</span> <span class="nl">options:</span><span class="n">NSLiteralSearch</span> <span class="nl">range:</span><span class="n">NSMakeRange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="p">[</span><span class="n">result</span> <span class="n">length</span><span class="p">])];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">result</span> <span class="nl">replaceOccurrencesOfString:</span><span class="s">@&quot;</span><span class="se">\&quot;</span><span class="s">&quot;</span> <span class="nl">withString:</span><span class="s">@&quot;&amp;quot;&quot;</span> <span class="nl">options:</span><span class="n">NSLiteralSearch</span> <span class="nl">range:</span><span class="n">NSMakeRange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="p">[</span><span class="n">result</span> <span class="n">length</span><span class="p">])];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">result</span> <span class="nl">replaceOccurrencesOfString:</span><span class="s">@&quot;&#39;&quot;</span> <span class="nl">withString:</span><span class="s">@&quot;&amp;#39;&quot;</span> <span class="nl">options:</span><span class="n">NSLiteralSearch</span> <span class="nl">range:</span><span class="n">NSMakeRange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="p">[</span><span class="n">result</span> <span class="n">length</span><span class="p">])];</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// implementation by Daniel Dickison and Walty</span>
</span><span class='line'><span class="c1">// http://stackoverflow.com/questions/1105169/html-character-decoding-in-objective-c-cocoa-touch</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">stringByDecodingXMLEntities</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSUInteger</span> <span class="n">myLength</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="n">length</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSUInteger</span> <span class="n">ampIndex</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="nl">rangeOfString:</span><span class="s">@&quot;&amp;&quot;</span> <span class="nl">options:</span><span class="n">NSLiteralSearch</span><span class="p">].</span><span class="n">location</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Short-circuit if there are no ampersands.</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">ampIndex</span> <span class="o">==</span> <span class="n">NSNotFound</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">// Make result string with some extra capacity.</span>
</span><span class='line'>    <span class="n">NSMutableString</span> <span class="o">*</span><span class="n">result</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSMutableString</span> <span class="nl">stringWithCapacity:</span><span class="p">(</span><span class="n">myLength</span> <span class="o">*</span> <span class="mf">1.25</span><span class="p">)];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// First iteration doesn&#39;t need to scan to &amp; since we did that already, but for code simplicity&#39;s sake we&#39;ll do it again with the scanner.</span>
</span><span class='line'>    <span class="n">NSScanner</span> <span class="o">*</span><span class="n">scanner</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSScanner</span> <span class="nl">scannerWithString:</span><span class="n">self</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">scanner</span> <span class="nl">setCharactersToBeSkipped:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">NSCharacterSet</span> <span class="o">*</span><span class="n">boundaryCharacterSet</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSCharacterSet</span> <span class="nl">characterSetWithCharactersInString:</span><span class="s">@&quot; </span><span class="se">\t\n\r</span><span class="s">;&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">do</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// Scan up to the next entity or the end of the string.</span>
</span><span class='line'>        <span class="n">NSString</span> <span class="o">*</span><span class="n">nonEntityString</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">([</span><span class="n">scanner</span> <span class="nl">scanUpToString:</span><span class="s">@&quot;&amp;&quot;</span> <span class="nl">intoString:</span><span class="o">&amp;</span><span class="n">nonEntityString</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>            <span class="p">[</span><span class="n">result</span> <span class="nl">appendString:</span><span class="n">nonEntityString</span><span class="p">];</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">([</span><span class="n">scanner</span> <span class="n">isAtEnd</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">goto</span> <span class="n">finish</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="c1">// Scan either a HTML or numeric character entity reference.</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">([</span><span class="n">scanner</span> <span class="nl">scanString:</span><span class="s">@&quot;&amp;amp;&quot;</span> <span class="nl">intoString:</span><span class="nb">NULL</span><span class="p">])</span>
</span><span class='line'>            <span class="p">[</span><span class="n">result</span> <span class="nl">appendString:</span><span class="s">@&quot;&amp;&quot;</span><span class="p">];</span>
</span><span class='line'>        <span class="k">else</span> <span class="k">if</span> <span class="p">([</span><span class="n">scanner</span> <span class="nl">scanString:</span><span class="s">@&quot;&amp;apos;&quot;</span> <span class="nl">intoString:</span><span class="nb">NULL</span><span class="p">])</span>
</span><span class='line'>            <span class="p">[</span><span class="n">result</span> <span class="nl">appendString:</span><span class="s">@&quot;&#39;&quot;</span><span class="p">];</span>
</span><span class='line'>        <span class="k">else</span> <span class="k">if</span> <span class="p">([</span><span class="n">scanner</span> <span class="nl">scanString:</span><span class="s">@&quot;&amp;quot;&quot;</span> <span class="nl">intoString:</span><span class="nb">NULL</span><span class="p">])</span>
</span><span class='line'>            <span class="p">[</span><span class="n">result</span> <span class="nl">appendString:</span><span class="s">@&quot;</span><span class="se">\&quot;</span><span class="s">&quot;</span><span class="p">];</span>
</span><span class='line'>        <span class="k">else</span> <span class="k">if</span> <span class="p">([</span><span class="n">scanner</span> <span class="nl">scanString:</span><span class="s">@&quot;&amp;lt;&quot;</span> <span class="nl">intoString:</span><span class="nb">NULL</span><span class="p">])</span>
</span><span class='line'>            <span class="p">[</span><span class="n">result</span> <span class="nl">appendString:</span><span class="s">@&quot;&lt;&quot;</span><span class="p">];</span>
</span><span class='line'>        <span class="k">else</span> <span class="k">if</span> <span class="p">([</span><span class="n">scanner</span> <span class="nl">scanString:</span><span class="s">@&quot;&amp;gt;&quot;</span> <span class="nl">intoString:</span><span class="nb">NULL</span><span class="p">])</span>
</span><span class='line'>            <span class="p">[</span><span class="n">result</span> <span class="nl">appendString:</span><span class="s">@&quot;&gt;&quot;</span><span class="p">];</span>
</span><span class='line'>        <span class="k">else</span> <span class="k">if</span> <span class="p">([</span><span class="n">scanner</span> <span class="nl">scanString:</span><span class="s">@&quot;&amp;#&quot;</span> <span class="nl">intoString:</span><span class="nb">NULL</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>            <span class="kt">BOOL</span> <span class="n">gotNumber</span><span class="p">;</span>
</span><span class='line'>            <span class="kt">unsigned</span> <span class="n">charCode</span><span class="p">;</span>
</span><span class='line'>            <span class="n">NSString</span> <span class="o">*</span><span class="n">xForHex</span> <span class="o">=</span> <span class="s">@&quot;&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// Is it hex or decimal?</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">([</span><span class="n">scanner</span> <span class="nl">scanString:</span><span class="s">@&quot;x&quot;</span> <span class="nl">intoString:</span><span class="o">&amp;</span><span class="n">xForHex</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">gotNumber</span> <span class="o">=</span> <span class="p">[</span><span class="n">scanner</span> <span class="nl">scanHexInt:</span><span class="o">&amp;</span><span class="n">charCode</span><span class="p">];</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">gotNumber</span> <span class="o">=</span> <span class="p">[</span><span class="n">scanner</span> <span class="nl">scanInt:</span><span class="p">(</span><span class="kt">int</span><span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">charCode</span><span class="p">];</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">gotNumber</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="p">[</span><span class="n">result</span> <span class="nl">appendFormat:</span><span class="s">@&quot;%C&quot;</span><span class="p">,</span> <span class="n">charCode</span><span class="p">];</span>
</span><span class='line'>                <span class="p">[</span><span class="n">scanner</span> <span class="nl">scanString:</span><span class="s">@&quot;;&quot;</span> <span class="nl">intoString:</span><span class="nb">NULL</span><span class="p">];</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">NSString</span> <span class="o">*</span><span class="n">unknownEntity</span> <span class="o">=</span> <span class="s">@&quot;&quot;</span><span class="p">;</span>
</span><span class='line'>                <span class="p">[</span><span class="n">scanner</span> <span class="nl">scanUpToCharactersFromSet:</span><span class="n">boundaryCharacterSet</span> <span class="nl">intoString:</span><span class="o">&amp;</span><span class="n">unknownEntity</span><span class="p">];</span>
</span><span class='line'>                <span class="p">[</span><span class="n">result</span> <span class="nl">appendFormat:</span><span class="s">@&quot;&amp;#%@%@&quot;</span><span class="p">,</span> <span class="n">xForHex</span><span class="p">,</span> <span class="n">unknownEntity</span><span class="p">];</span>
</span><span class='line'>                <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Expected numeric character entity but got &amp;#%@%@;&quot;</span><span class="p">,</span> <span class="n">xForHex</span><span class="p">,</span> <span class="n">unknownEntity</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">NSString</span> <span class="o">*</span><span class="n">amp</span><span class="p">;</span>
</span><span class='line'>            <span class="p">[</span><span class="n">scanner</span> <span class="nl">scanString:</span><span class="s">@&quot;&amp;&quot;</span> <span class="nl">intoString:</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">];</span>      <span class="c1">//an isolated &amp; symbol</span>
</span><span class='line'>            <span class="p">[</span><span class="n">result</span> <span class="nl">appendString:</span><span class="n">amp</span><span class="p">];</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">while</span> <span class="p">(</span><span class="o">!</span><span class="p">[</span><span class="n">scanner</span> <span class="n">isAtEnd</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'><span class="nl">finish:</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//普通的MD5加密</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">md5</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">cStr</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="n">UTF8String</span><span class="p">];</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">result</span><span class="p">[</span><span class="n">CC_MD5_DIGEST_LENGTH</span><span class="p">];</span>
</span><span class='line'>    <span class="n">CC_MD5</span><span class="p">(</span><span class="n">cStr</span><span class="p">,</span> <span class="n">strlen</span><span class="p">(</span><span class="n">cStr</span><span class="p">),</span> <span class="n">result</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithFormat:</span><span class="s">@&quot;%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="n">result</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">6</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">7</span><span class="p">],</span>
</span><span class='line'>            <span class="n">result</span><span class="p">[</span><span class="mi">8</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">9</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">10</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">11</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">12</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">13</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">14</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">15</span><span class="p">]];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//UTF16的MD5加密</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">md5ForUTF16</span><span class="p">{</span>
</span><span class='line'>    <span class="n">NSData</span> <span class="o">*</span><span class="n">temp</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="nl">dataUsingEncoding:</span><span class="n">NSUTF16LittleEndianStringEncoding</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">UInt8</span> <span class="o">*</span><span class="n">cStr</span> <span class="o">=</span> <span class="p">(</span><span class="n">UInt8</span> <span class="o">*</span><span class="p">)[</span><span class="n">temp</span> <span class="n">bytes</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">result</span><span class="p">[</span><span class="n">CC_MD5_DIGEST_LENGTH</span><span class="p">];</span>
</span><span class='line'>    <span class="n">CC_MD5</span><span class="p">(</span><span class="n">cStr</span><span class="p">,</span> <span class="p">[</span><span class="n">temp</span> <span class="n">length</span><span class="p">],</span> <span class="n">result</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithFormat:</span><span class="s">@&quot;%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="n">result</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">6</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">7</span><span class="p">],</span>
</span><span class='line'>            <span class="n">result</span><span class="p">[</span><span class="mi">8</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">9</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">10</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">11</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">12</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">13</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">14</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">15</span><span class="p">]];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//自适应文字大小</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">CGFloat</span><span class="p">)</span><span class="nf">fontSizeWithFont:</span><span class="p">(</span><span class="n">UIFont</span> <span class="o">*</span><span class="p">)</span><span class="nv">font</span> <span class="nf">constrainedToSize:</span><span class="p">(</span><span class="n">CGSize</span><span class="p">)</span><span class="nv">size</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">fontSize</span> <span class="o">=</span> <span class="p">[</span><span class="n">font</span> <span class="n">pointSize</span><span class="p">];</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">height</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="nl">sizeWithFont:</span><span class="n">font</span> <span class="nl">constrainedToSize:</span><span class="n">CGSizeMake</span><span class="p">(</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">,</span><span class="n">FLT_MAX</span><span class="p">)</span> <span class="nl">lineBreakMode:</span><span class="n">UILineBreakModeWordWrap</span><span class="p">].</span><span class="n">height</span><span class="p">;</span>
</span><span class='line'>    <span class="n">UIFont</span> <span class="o">*</span><span class="n">newFont</span> <span class="o">=</span> <span class="n">font</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//Reduce font size while too large, break if no height (empty string)</span>
</span><span class='line'>    <span class="k">while</span> <span class="p">(</span><span class="n">height</span> <span class="o">&gt;</span> <span class="n">size</span><span class="p">.</span><span class="n">height</span> <span class="o">&amp;&amp;</span> <span class="n">height</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">fontSize</span><span class="o">--</span><span class="p">;</span>
</span><span class='line'>        <span class="n">newFont</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIFont</span> <span class="nl">fontWithName:</span><span class="n">font</span><span class="p">.</span><span class="n">fontName</span> <span class="nl">size:</span><span class="n">fontSize</span><span class="p">];</span>
</span><span class='line'>        <span class="n">height</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="nl">sizeWithFont:</span><span class="n">newFont</span> <span class="nl">constrainedToSize:</span><span class="n">CGSizeMake</span><span class="p">(</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">,</span><span class="n">FLT_MAX</span><span class="p">)</span> <span class="nl">lineBreakMode:</span><span class="n">UILineBreakModeWordWrap</span><span class="p">].</span><span class="n">height</span><span class="p">;</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Loop through words in string and resize to fit</span>
</span><span class='line'><span class="c1">//    for (NSString *word in [self componentsSeparatedByString:@&quot; &quot;]) {</span>
</span><span class='line'><span class="c1">//        CGFloat width = [word sizeWithFont:newFont].width;</span>
</span><span class='line'><span class="c1">//        while (width &gt; size.width &amp;&amp; width != 0) {</span>
</span><span class='line'><span class="c1">//            fontSize--;</span>
</span><span class='line'><span class="c1">//            newFont = [UIFont fontWithName:font.fontName size:fontSize];   </span>
</span><span class='line'><span class="c1">//            width = [word sizeWithFont:newFont].width;</span>
</span><span class='line'><span class="c1">//        }</span>
</span><span class='line'><span class="c1">//    }</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">fontSize</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#pragma mark - tokeniztion string</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> 根据设定参数进行字符串拆分</span>
</span><span class='line'><span class="cm"> NSStringEnumerationByComposedCharacterSequences,根据字母</span>
</span><span class='line'><span class="cm"> NSStringEnumerationByWords，根据单词</span>
</span><span class='line'><span class="cm"> NSStringEnumerationBySentences，根据句子</span>
</span><span class='line'><span class="cm"> 这3个比较常用</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSMutableArray</span> <span class="o">*</span><span class="p">)</span><span class="nf">tokenizationStringByNSStringEnumerationOptions:</span><span class="p">(</span><span class="n">NSStringEnumerationOptions</span><span class="p">)</span><span class="nv">opts</span><span class="p">{</span>
</span><span class='line'>    <span class="n">NSMutableArray</span> <span class="o">*</span><span class="n">splitArray</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSMutableArray</span> <span class="n">array</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSRange</span> <span class="n">range</span> <span class="o">=</span> <span class="n">NSMakeRange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="p">[</span><span class="n">self</span> <span class="n">length</span><span class="p">]);</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="nl">enumerateSubstringsInRange:</span><span class="n">range</span> <span class="nl">options:</span><span class="n">opts</span> <span class="nl">usingBlock:</span><span class="o">^</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="n">substring</span><span class="p">,</span> <span class="n">NSRange</span> <span class="n">substringRange</span><span class="p">,</span> <span class="n">NSRange</span> <span class="n">enclosingRange</span><span class="p">,</span> <span class="kt">BOOL</span> <span class="o">*</span><span class="n">stop</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">[</span><span class="n">splitArray</span> <span class="nl">addObject:</span><span class="n">substring</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}];</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">splitArray</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//detect string language，对于句子相对准确，单词不是很准确</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">languageForString</span><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="n">__bridge</span> <span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">CFStringTokenizerCopyBestStringLanguage</span><span class="p">((</span><span class="n">CFStringRef</span><span class="p">)</span><span class="n">self</span><span class="p">,</span> <span class="n">CFRangeMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">MIN</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">length</span><span class="p">,</span><span class="mi">400</span><span class="p">)));</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//分析句中单词的词性</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSMutableArray</span> <span class="o">*</span><span class="p">)</span><span class="nf">analyseTextOfSentences</span><span class="p">{</span>
</span><span class='line'>    <span class="n">NSMutableArray</span> <span class="o">*</span><span class="n">analyseArray</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSMutableArray</span> <span class="n">array</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// This range contains the entire string, since we want to parse it completely</span>
</span><span class='line'>    <span class="n">NSRange</span> <span class="n">stringRange</span> <span class="o">=</span> <span class="n">NSMakeRange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="n">length</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//第一种方式</span>
</span><span class='line'>    <span class="n">NSLinguisticTagger</span> <span class="o">*</span><span class="n">tagger</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSLinguisticTagger</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithTagSchemes:</span><span class="p">[</span><span class="n">NSArray</span> <span class="nl">arrayWithObject:</span><span class="n">NSLinguisticTagSchemeNameTypeOrLexicalClass</span><span class="p">]</span> <span class="nl">options:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">tagger</span> <span class="nl">setString:</span><span class="n">self</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">tagger</span> <span class="nl">enumerateTagsInRange:</span><span class="n">stringRange</span>
</span><span class='line'>                          <span class="nl">scheme:</span><span class="n">NSLinguisticTagSchemeNameTypeOrLexicalClass</span>
</span><span class='line'>                         <span class="nl">options:</span><span class="n">NSLinguisticTaggerOmitWhitespace</span> <span class="o">|</span> <span class="n">NSLinguisticTaggerOmitPunctuation</span>
</span><span class='line'>                      <span class="nl">usingBlock:</span><span class="o">^</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="n">tag</span><span class="p">,</span> <span class="n">NSRange</span> <span class="n">tokenRange</span><span class="p">,</span> <span class="n">NSRange</span> <span class="n">sentenceRange</span><span class="p">,</span> <span class="kt">BOOL</span> <span class="o">*</span><span class="n">stop</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                          <span class="p">[</span><span class="n">analyseArray</span> <span class="nl">addObject:</span><span class="err">@</span><span class="p">{</span><span class="s">@&quot;word&quot;</span><span class="o">:</span><span class="p">[</span><span class="n">self</span> <span class="nl">substringWithRange:</span><span class="n">tokenRange</span><span class="p">],</span><span class="s">@&quot;tag&quot;</span> <span class="o">:</span> <span class="n">tag</span><span class="p">}];</span>
</span><span class='line'>                      <span class="p">}];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 第二种方式</span>
</span><span class='line'><span class="c1">//    NSArray *language = [NSArray arrayWithObjects:@&quot;en&quot;,@&quot;de&quot;,@&quot;fr&quot;,@&quot;ko&quot;,@&quot;ja&quot;,nil];</span>
</span><span class='line'><span class="c1">//    NSDictionary* languageMap = [NSDictionary dictionaryWithObject:language forKey:@&quot;Latn&quot;];</span>
</span><span class='line'><span class="c1">//    </span>
</span><span class='line'><span class="c1">//    [self enumerateLinguisticTagsInRange:stringRange</span>
</span><span class='line'><span class="c1">//                                  scheme:NSLinguisticTagSchemeNameTypeOrLexicalClass</span>
</span><span class='line'><span class="c1">//                                 options:NSLinguisticTaggerOmitWhitespace | NSLinguisticTaggerOmitPunctuation</span>
</span><span class='line'><span class="c1">//                             orthography:[NSOrthography orthographyWithDominantScript:@&quot;Latn&quot; languageMap:languageMap]</span>
</span><span class='line'><span class="c1">//                              usingBlock:^(NSString *tag, NSRange tokenRange, NSRange sentenceRange, BOOL *stop) {</span>
</span><span class='line'><span class="c1">//                                  [analyseArray addObject:@{@&quot;word&quot;:[self substringWithRange:tokenRange],@&quot;tag&quot; : tag}];</span>
</span><span class='line'><span class="c1">//                            }];</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">analyseArray</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用时将上面2个文件引入到XCode工程，在需要使用的地方的头文件里，加入</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;NSString+Extensions.h&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS下的加密]]></title>
    <link href="http://danielxu.github.com/blog/2013/01/10/the-ios-under-encryption/"/>
    <updated>2013-01-10T11:26:00+08:00</updated>
    <id>http://danielxu.github.com/blog/2013/01/10/the-ios-under-encryption</id>
    <content type="html"><![CDATA[<p>在iOS开发过程中使用过的数据加密，主要是密码、敏感数据等。现在记录下来，以便以后查询。</p>

<h1>MD5</h1>

<p>其实网上有NSString扩展类，里面一般都包含了MD5，大小写字母转换，空字符判定等。这里主要记录一下MD5的方法，同时增加UTF16不一样的MD5加密，下面即方法：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">//普通的加密，UTF8</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">md5</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">cStr</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="n">UTF8String</span><span class="p">];</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">result</span><span class="p">[</span><span class="n">CC_MD5_DIGEST_LENGTH</span><span class="p">];</span>
</span><span class='line'>    <span class="n">CC_MD5</span><span class="p">(</span><span class="n">cStr</span><span class="p">,</span> <span class="n">strlen</span><span class="p">(</span><span class="n">cStr</span><span class="p">),</span> <span class="n">result</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithFormat:</span><span class="s">@&quot;%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="n">result</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">6</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">7</span><span class="p">],</span>
</span><span class='line'>            <span class="n">result</span><span class="p">[</span><span class="mi">8</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">9</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">10</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">11</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">12</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">13</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">14</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">15</span><span class="p">]];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//UTF16使用的MD5，这里encoding使用，NSUTF16LittleEndianStringEncoding</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">md5ForUTF16:</span><span class="p">(</span><span class="n">NSStringEncoding</span><span class="p">)</span><span class="nv">encoding</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSData</span> <span class="o">*</span><span class="n">temp</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="nl">dataUsingEncoding:</span><span class="n">encoding</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">UInt8</span> <span class="o">*</span><span class="n">cStr</span> <span class="o">=</span> <span class="p">(</span><span class="n">UInt8</span> <span class="o">*</span><span class="p">)[</span><span class="n">temp</span> <span class="n">bytes</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">result</span><span class="p">[</span><span class="n">CC_MD5_DIGEST_LENGTH</span><span class="p">];</span>
</span><span class='line'>    <span class="n">CC_MD5</span><span class="p">(</span><span class="n">cStr</span><span class="p">,</span> <span class="p">[</span><span class="n">temp</span> <span class="n">length</span><span class="p">],</span> <span class="n">result</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithFormat:</span><span class="s">@&quot;%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="n">result</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">6</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">7</span><span class="p">],</span>
</span><span class='line'>            <span class="n">result</span><span class="p">[</span><span class="mi">8</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">9</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">10</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">11</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">12</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">13</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">14</span><span class="p">],</span> <span class="n">result</span><span class="p">[</span><span class="mi">15</span><span class="p">]];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<h1>Base64 &amp; HEX</h1>

<p>使用的<a href="https://github.com/mattgemmell/MGTwitterEngine/">MGTwitterEngine</a>中的NSData (Base64)扩展，下面添加的是NSData转换成HEX的方法：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">//转换成HEX</span>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">hexStringForData:</span><span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="p">)</span><span class="nv">data</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">data</span> <span class="o">==</span> <span class="nb">nil</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">NSMutableString</span><span class="o">*</span> <span class="n">hexString</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSMutableString</span> <span class="n">string</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">const</span> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="n">p</span> <span class="o">=</span> <span class="p">[</span><span class="n">data</span> <span class="n">bytes</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="p">[</span><span class="n">data</span> <span class="n">length</span><span class="p">];</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">[</span><span class="n">hexString</span> <span class="nl">appendFormat:</span><span class="s">@&quot;%02X&quot;</span><span class="p">,</span> <span class="o">*</span><span class="n">p</span><span class="o">++</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">hexString</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//将HEX转换成NSData</span>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="p">)</span><span class="nf">dataForHexString:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">hexString</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">hexString</span> <span class="o">==</span> <span class="nb">nil</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">ch</span> <span class="o">=</span> <span class="p">[[</span><span class="n">hexString</span> <span class="n">lowercaseString</span><span class="p">]</span> <span class="nl">cStringUsingEncoding:</span><span class="n">NSUTF8StringEncoding</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSMutableData</span> <span class="o">*</span><span class="n">data</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSMutableData</span> <span class="n">data</span><span class="p">];</span>
</span><span class='line'>    <span class="k">while</span> <span class="p">(</span><span class="o">*</span><span class="n">ch</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="kt">char</span> <span class="n">byte</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="sc">&#39;0&#39;</span> <span class="o">&lt;=</span> <span class="o">*</span><span class="n">ch</span> <span class="o">&amp;&amp;</span> <span class="o">*</span><span class="n">ch</span> <span class="o">&lt;=</span> <span class="sc">&#39;9&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">byte</span> <span class="o">=</span> <span class="o">*</span><span class="n">ch</span> <span class="o">-</span> <span class="sc">&#39;0&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="sc">&#39;a&#39;</span> <span class="o">&lt;=</span> <span class="o">*</span><span class="n">ch</span> <span class="o">&amp;&amp;</span> <span class="o">*</span><span class="n">ch</span> <span class="o">&lt;=</span> <span class="sc">&#39;f&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">byte</span> <span class="o">=</span> <span class="o">*</span><span class="n">ch</span> <span class="o">-</span> <span class="sc">&#39;a&#39;</span> <span class="o">+</span> <span class="mi">10</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">ch</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>        <span class="n">byte</span> <span class="o">=</span> <span class="n">byte</span> <span class="o">&lt;&lt;</span> <span class="mi">4</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">*</span><span class="n">ch</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="sc">&#39;0&#39;</span> <span class="o">&lt;=</span> <span class="o">*</span><span class="n">ch</span> <span class="o">&amp;&amp;</span> <span class="o">*</span><span class="n">ch</span> <span class="o">&lt;=</span> <span class="sc">&#39;9&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">byte</span> <span class="o">+=</span> <span class="o">*</span><span class="n">ch</span> <span class="o">-</span> <span class="sc">&#39;0&#39;</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="sc">&#39;a&#39;</span> <span class="o">&lt;=</span> <span class="o">*</span><span class="n">ch</span> <span class="o">&amp;&amp;</span> <span class="o">*</span><span class="n">ch</span> <span class="o">&lt;=</span> <span class="sc">&#39;f&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">byte</span> <span class="o">+=</span> <span class="o">*</span><span class="n">ch</span> <span class="o">-</span> <span class="sc">&#39;a&#39;</span> <span class="o">+</span> <span class="mi">10</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="n">ch</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="p">[</span><span class="n">data</span> <span class="nl">appendBytes:</span><span class="o">&amp;</span><span class="n">byte</span> <span class="nl">length:</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">data</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>AES</h1>

<p>   这个加密是之前开发中使用DES，接过没办法做到多方通用（iOS、JAVA、NET、..），本身自己对加密这块也不熟悉，就没继续研究DES，使用AES加密打到了多方通用的要求。不过，好像AES的加密要比DES更严格一些？？？不是很清楚。代码记录如下：</p>

<ul>
<li>AES.h</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;CommonCrypto/CommonDigest.h&gt;</span>
</span><span class='line'><span class="cp">#import &lt;CommonCrypto/CommonCryptor.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define kChosenCipherBlockSize   kCCBlockSizeAES128</span>
</span><span class='line'><span class="cp">#define kChosenCipherKeySize kCCKeySizeAES128</span>
</span><span class='line'><span class="cp">#define kChosenDigestLength      CC_SHA1_DIGEST_LENGTH</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">AES</span> : <span class="nc">NSObject</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">sharedAESUtils</span><span class="p">;</span>
</span><span class='line'><span class="c1">//aes解密</span>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="p">)</span><span class="nf">decrypt:</span><span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="p">)</span><span class="nv">encryptString</span> <span class="nf">aesKey:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">keyString</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//aes加密</span>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="p">)</span><span class="nf">encrypt:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">valueString</span> <span class="nf">aesKey:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">keyString</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="p">)</span><span class="nf">encrypt:</span><span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="p">)</span><span class="nv">plainText</span> <span class="nf">key:</span><span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="p">)</span><span class="nv">aSymmetricKey</span> <span class="nf">padding:</span><span class="p">(</span><span class="n">CCOptions</span> <span class="o">*</span><span class="p">)</span><span class="nv">pkcs7</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="p">)</span><span class="nf">decrypt:</span><span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="p">)</span><span class="nv">plainText</span> <span class="nf">key:</span><span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="p">)</span><span class="nv">aSymmetricKey</span> <span class="nf">padding:</span><span class="p">(</span><span class="n">CCOptions</span> <span class="o">*</span><span class="p">)</span><span class="nv">pkcs7</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="p">)</span><span class="nf">doCipher:</span><span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="p">)</span><span class="nv">plainText</span> <span class="nf">key:</span><span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="p">)</span><span class="nv">aSymmetricKey</span>
</span><span class='line'>           <span class="nf">context:</span><span class="p">(</span><span class="n">CCOperation</span><span class="p">)</span><span class="nv">encryptOrDecrypt</span> <span class="nf">padding:</span><span class="p">(</span><span class="n">CCOptions</span> <span class="o">*</span><span class="p">)</span><span class="nv">pkcs7</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>AES.m</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;AES.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">AES</span>
</span><span class='line'><span class="n">CCOptions</span> <span class="n">padding</span> <span class="o">=</span> <span class="n">kCCOptionPKCS7Padding</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">sharedAESUtils</span><span class="p">{</span>
</span><span class='line'>    <span class="k">static</span> <span class="n">AES</span> <span class="o">*</span><span class="n">sharedAES</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>    <span class="k">static</span> <span class="n">dispatch_once_t</span> <span class="n">onceToken</span><span class="p">;</span>
</span><span class='line'>    <span class="n">dispatch_once</span><span class="p">(</span><span class="o">&amp;</span><span class="n">onceToken</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="n">sharedAES</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">self</span> <span class="n">class</span><span class="p">]</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">sharedAES</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//aes解密</span>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="p">)</span><span class="nf">decrypt:</span><span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="p">)</span><span class="nv">encryptNSData</span> <span class="nf">aesKey:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">keyString</span><span class="p">{</span>
</span><span class='line'>    <span class="n">NSData</span> <span class="o">*</span><span class="n">keyData</span> <span class="o">=</span> <span class="p">[</span><span class="n">keyString</span> <span class="nl">dataUsingEncoding:</span><span class="n">NSUTF8StringEncoding</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">NSData</span> <span class="o">*</span><span class="n">decryptData</span> <span class="o">=</span> <span class="p">[[</span><span class="n">AES</span> <span class="n">sharedAESUtils</span><span class="p">]</span> <span class="nl">decrypt:</span><span class="n">encryptNSData</span> <span class="nl">key:</span><span class="n">keyData</span> <span class="nl">padding:</span><span class="o">&amp;</span><span class="n">padding</span><span class="p">];</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">decryptData</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//aes加密</span>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="p">)</span><span class="nf">encrypt:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">valueString</span> <span class="nf">aesKey:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">keyString</span><span class="p">{</span>
</span><span class='line'>    <span class="n">NSData</span> <span class="o">*</span><span class="n">keyData</span> <span class="o">=</span> <span class="p">[</span><span class="n">keyString</span> <span class="nl">dataUsingEncoding:</span><span class="n">NSUTF8StringEncoding</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">NSData</span> <span class="o">*</span><span class="n">_secretData</span> <span class="o">=</span> <span class="p">[</span><span class="n">valueString</span> <span class="nl">dataUsingEncoding:</span><span class="n">NSUTF8StringEncoding</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSData</span> <span class="o">*</span><span class="n">encryptedData</span> <span class="o">=</span> <span class="p">[[</span><span class="n">AES</span> <span class="n">sharedAESUtils</span><span class="p">]</span> <span class="nl">encrypt:</span><span class="n">_secretData</span> <span class="nl">key:</span><span class="n">keyData</span> <span class="nl">padding:</span><span class="o">&amp;</span><span class="n">padding</span><span class="p">];</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">encryptedData</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="p">)</span><span class="nf">encrypt:</span><span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="p">)</span><span class="nv">plainText</span> <span class="nf">key:</span><span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="p">)</span><span class="nv">aSymmetricKey</span> <span class="nf">padding:</span><span class="p">(</span><span class="n">CCOptions</span> <span class="o">*</span><span class="p">)</span><span class="nv">pkcs7</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">[</span><span class="n">self</span> <span class="nl">doCipher:</span><span class="n">plainText</span> <span class="nl">key:</span><span class="n">aSymmetricKey</span> <span class="nl">context:</span><span class="n">kCCEncrypt</span> <span class="nl">padding:</span><span class="n">pkcs7</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="p">)</span><span class="nf">decrypt:</span><span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="p">)</span><span class="nv">plainText</span> <span class="nf">key:</span><span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="p">)</span><span class="nv">aSymmetricKey</span> <span class="nf">padding:</span><span class="p">(</span><span class="n">CCOptions</span> <span class="o">*</span><span class="p">)</span><span class="nv">pkcs7</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">[</span><span class="n">self</span> <span class="nl">doCipher:</span><span class="n">plainText</span> <span class="nl">key:</span><span class="n">aSymmetricKey</span> <span class="nl">context:</span><span class="n">kCCDecrypt</span> <span class="nl">padding:</span><span class="n">pkcs7</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="p">)</span><span class="nf">doCipher:</span><span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="p">)</span><span class="nv">plainText</span> <span class="nf">key:</span><span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="p">)</span><span class="nv">aSymmetricKey</span>
</span><span class='line'>           <span class="nf">context:</span><span class="p">(</span><span class="n">CCOperation</span><span class="p">)</span><span class="nv">encryptOrDecrypt</span> <span class="nf">padding:</span><span class="p">(</span><span class="n">CCOptions</span> <span class="o">*</span><span class="p">)</span><span class="nv">pkcs7</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CCCryptorStatus</span> <span class="n">ccStatus</span> <span class="o">=</span> <span class="n">kCCSuccess</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// Symmetric crypto reference.</span>
</span><span class='line'>    <span class="n">CCCryptorRef</span> <span class="n">thisEncipher</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// Cipher Text container.</span>
</span><span class='line'>    <span class="n">NSData</span> <span class="o">*</span> <span class="n">cipherOrPlainText</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// Pointer to output buffer.</span>
</span><span class='line'>    <span class="n">uint8_t</span> <span class="o">*</span> <span class="n">bufferPtr</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// Total size of the buffer.</span>
</span><span class='line'>    <span class="n">size_t</span> <span class="n">bufferPtrSize</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// Remaining bytes to be performed on.</span>
</span><span class='line'>    <span class="n">size_t</span> <span class="n">remainingBytes</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// Number of bytes moved to buffer.</span>
</span><span class='line'>    <span class="n">size_t</span> <span class="n">movedBytes</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// Length of plainText buffer.</span>
</span><span class='line'>    <span class="n">size_t</span> <span class="n">plainTextBufferSize</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// Placeholder for total written.</span>
</span><span class='line'>    <span class="n">size_t</span> <span class="n">totalBytesWritten</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// A friendly helper pointer.</span>
</span><span class='line'>    <span class="n">uint8_t</span> <span class="o">*</span> <span class="n">ptr</span><span class="p">;</span>
</span><span class='line'>  
</span><span class='line'>    <span class="c1">// Initialization vector; dummy in this case 0&#39;s.</span>
</span><span class='line'>    <span class="n">uint8_t</span> <span class="n">iv</span><span class="p">[</span><span class="n">kChosenCipherBlockSize</span><span class="p">];</span>
</span><span class='line'>    <span class="n">memset</span><span class="p">((</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span> <span class="n">iv</span><span class="p">,</span> <span class="mh">0x0</span><span class="p">,</span> <span class="p">(</span><span class="n">size_t</span><span class="p">)</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">iv</span><span class="p">));</span>
</span><span class='line'>  
</span><span class='line'>    <span class="n">plainTextBufferSize</span> <span class="o">=</span> <span class="p">[</span><span class="n">plainText</span> <span class="n">length</span><span class="p">];</span>
</span><span class='line'>  
</span><span class='line'>    <span class="c1">// Create and Initialize the crypto reference.</span>
</span><span class='line'>    <span class="n">ccStatus</span> <span class="o">=</span> <span class="n">CCCryptorCreate</span><span class="p">(</span><span class="n">encryptOrDecrypt</span><span class="p">,</span>
</span><span class='line'>                               <span class="n">kCCAlgorithmAES128</span><span class="p">,</span>
</span><span class='line'>                               <span class="o">*</span><span class="n">pkcs7</span><span class="p">,</span>
</span><span class='line'>                               <span class="p">(</span><span class="k">const</span> <span class="kt">void</span> <span class="o">*</span><span class="p">)[</span><span class="n">aSymmetricKey</span> <span class="n">bytes</span><span class="p">],</span>
</span><span class='line'>                               <span class="n">kChosenCipherKeySize</span><span class="p">,</span>
</span><span class='line'>                               <span class="p">(</span><span class="k">const</span> <span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="n">iv</span><span class="p">,</span>
</span><span class='line'>                               <span class="o">&amp;</span><span class="n">thisEncipher</span>
</span><span class='line'>                               <span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>    <span class="c1">// Calculate byte block alignment for all calls through to and including final.</span>
</span><span class='line'>    <span class="n">bufferPtrSize</span> <span class="o">=</span> <span class="n">CCCryptorGetOutputLength</span><span class="p">(</span><span class="n">thisEncipher</span><span class="p">,</span> <span class="n">plainTextBufferSize</span><span class="p">,</span> <span class="n">true</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>    <span class="c1">// Allocate buffer.</span>
</span><span class='line'>    <span class="n">bufferPtr</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span> <span class="n">bufferPtrSize</span> <span class="o">*</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">uint8_t</span><span class="p">)</span> <span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>    <span class="c1">// Zero out buffer.</span>
</span><span class='line'>    <span class="n">memset</span><span class="p">((</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="n">bufferPtr</span><span class="p">,</span> <span class="mh">0x0</span><span class="p">,</span> <span class="n">bufferPtrSize</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>    <span class="c1">// Initialize some necessary book keeping.</span>
</span><span class='line'>  
</span><span class='line'>    <span class="n">ptr</span> <span class="o">=</span> <span class="n">bufferPtr</span><span class="p">;</span>
</span><span class='line'>  
</span><span class='line'>    <span class="c1">// Set up initial size.</span>
</span><span class='line'>    <span class="n">remainingBytes</span> <span class="o">=</span> <span class="n">bufferPtrSize</span><span class="p">;</span>
</span><span class='line'>  
</span><span class='line'>    <span class="c1">// Actually perform the encryption or decryption.</span>
</span><span class='line'>    <span class="n">ccStatus</span> <span class="o">=</span> <span class="n">CCCryptorUpdate</span><span class="p">(</span><span class="n">thisEncipher</span><span class="p">,</span>
</span><span class='line'>                               <span class="p">(</span><span class="k">const</span> <span class="kt">void</span> <span class="o">*</span><span class="p">)</span> <span class="p">[</span><span class="n">plainText</span> <span class="n">bytes</span><span class="p">],</span>
</span><span class='line'>                               <span class="n">plainTextBufferSize</span><span class="p">,</span>
</span><span class='line'>                               <span class="n">ptr</span><span class="p">,</span>
</span><span class='line'>                               <span class="n">remainingBytes</span><span class="p">,</span>
</span><span class='line'>                               <span class="o">&amp;</span><span class="n">movedBytes</span>
</span><span class='line'>                               <span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>    <span class="c1">// Handle book keeping.</span>
</span><span class='line'>    <span class="n">ptr</span> <span class="o">+=</span> <span class="n">movedBytes</span><span class="p">;</span>
</span><span class='line'>    <span class="n">remainingBytes</span> <span class="o">-=</span> <span class="n">movedBytes</span><span class="p">;</span>
</span><span class='line'>    <span class="n">totalBytesWritten</span> <span class="o">+=</span> <span class="n">movedBytes</span><span class="p">;</span>
</span><span class='line'>  
</span><span class='line'>    <span class="c1">// Finalize everything to the output buffer.</span>
</span><span class='line'>    <span class="n">ccStatus</span> <span class="o">=</span> <span class="n">CCCryptorFinal</span><span class="p">(</span><span class="n">thisEncipher</span><span class="p">,</span>
</span><span class='line'>                              <span class="n">ptr</span><span class="p">,</span>
</span><span class='line'>                              <span class="n">remainingBytes</span><span class="p">,</span>
</span><span class='line'>                              <span class="o">&amp;</span><span class="n">movedBytes</span>
</span><span class='line'>                              <span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>    <span class="n">totalBytesWritten</span> <span class="o">+=</span> <span class="n">movedBytes</span><span class="p">;</span>
</span><span class='line'>  
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">thisEncipher</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="n">CCCryptorRelease</span><span class="p">(</span><span class="n">thisEncipher</span><span class="p">);</span>
</span><span class='line'>        <span class="n">thisEncipher</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">ccStatus</span> <span class="o">==</span> <span class="n">kCCSuccess</span><span class="p">)</span>
</span><span class='line'>        <span class="n">cipherOrPlainText</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSData</span> <span class="nl">dataWithBytes:</span><span class="p">(</span><span class="k">const</span> <span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="n">bufferPtr</span> <span class="nl">length:</span><span class="p">(</span><span class="n">NSUInteger</span><span class="p">)</span><span class="n">totalBytesWritten</span><span class="p">];</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>        <span class="n">cipherOrPlainText</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>  
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">bufferPtr</span><span class="p">)</span> <span class="n">free</span><span class="p">(</span><span class="n">bufferPtr</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>    <span class="k">return</span> <span class="n">cipherOrPlainText</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>RSA</h1>

<p>iOS上并没有直接的RSA加密API。但是iOS提供了x509的API，而x509是支持RSA加密的。</p>

<h3>生成RSA秘钥对</h3>

<p>如果没有现成证书可用，可以使用openssl自签名证书，步骤如下：</p>

<ul>
<li>创建私钥</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>openssl genrsa -out self_private_key.pem 1024
</span></code></pre></td></tr></table></div></figure>


<p></p>

<ul>
<li>创建证书</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>openssl req -new -out cert.csr -key self_private_key.pem
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>自签署根证书</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>openssl x509 -req -in cert.csr -out self_public_key.der -outform der -signkey self_private_key.pem -days 3650
</span></code></pre></td></tr></table></div></figure>


<p>上述三步可以简化为一个命令：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>openssl req -x509 -out self_public_key.der -outform der -new -newkey rsa:1024 -keyout self_private_key.pem -days 3650
</span></code></pre></td></tr></table></div></figure>


<p>几个说明：</p>

<ul>
<li>self_public_key.der是输出的自签名的x509证书，即我们要用的。</li>
<li>self_private_key.pem是输出的私钥，用来解密的，请妥善保管。</li>
<li>rsa:1024这里的1024是密钥长度，1024是比较安全的，如果需要更安全的话，可以用2048，但是加解密代价也会增加。</li>
<li>-days：证书过期时间，一定要加上这个参数，默认的证书过期时间是30天，一般我们不希望证书这么短就过期，所以写上比较合适的天数，例如这里的3650(10年)。</li>
</ul>


<p>这是运行结果：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>//下面提示密码的地方必须输入
</span><span class='line'>openssl req -x509 -out self_public_key.der -outform der -new -newkey rsa:1024 -keyout self_private_key.pem -days 3650
</span><span class='line'>Generating a 1024 bit RSA private key
</span><span class='line'>............................++++++
</span><span class='line'>...................................................................................................................................++++++
</span><span class='line'>writing new private key to <span class="s1">&#39;self_private_key.pem&#39;</span>
</span><span class='line'>Enter PEM pass phrase:
</span><span class='line'>Verifying - Enter PEM pass phrase:
</span><span class='line'>-----
</span><span class='line'>You are about to be asked to enter information that will be incorporated
</span><span class='line'>into your certificate request.
</span><span class='line'>What you are about to enter is what is called a Distinguished Name or a DN.
</span><span class='line'>There are quite a few fields but you can leave some blank
</span><span class='line'>For some fields there will be a default value,
</span><span class='line'>If you enter <span class="s1">&#39;.&#39;</span>, the field will be left blank.
</span><span class='line'>-----
</span><span class='line'>Country Name <span class="o">(</span>2 letter code<span class="o">)</span> <span class="o">[</span>AU<span class="o">]</span>:CN
</span><span class='line'>State or Province Name <span class="o">(</span>full name<span class="o">)</span> <span class="o">[</span>Some-State<span class="o">]</span>:Shanghai
</span><span class='line'>Locality Name <span class="o">(</span>eg, city<span class="o">)</span> <span class="o">[]</span>:Shanghai
</span><span class='line'>Organization Name <span class="o">(</span>eg, company<span class="o">)</span> <span class="o">[</span>Internet Widgits Pty Ltd<span class="o">]</span>:xdy
</span><span class='line'>Organizational Unit Name <span class="o">(</span>eg, section<span class="o">)</span> <span class="o">[]</span>:xdy
</span><span class='line'>Common Name <span class="o">(</span>eg, YOUR name<span class="o">)</span> <span class="o">[]</span>:xdy
</span><span class='line'>Email Address <span class="o">[]</span>:xdy@qq.com
</span></code></pre></td></tr></table></div></figure>


<p>注意:iOS只能处理DER格式(二进制格式,后缀名为der、cer、crt)的证书,如果您的证书是PEM格式(文本格式,后缀名为pem、cer、crt)的，则可用下面命令转换</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>//此处pem不是上面的key，而是最后导出的pem根证书，不然执行下面的命令会报错的
</span><span class='line'>//，因为这是2个不同格式的证书进行转化
</span><span class='line'>openssl x509 -in xxxx.pem -inform pem -out xxxx.der -outform der
</span></code></pre></td></tr></table></div></figure>


<h3>Xcode中使用公钥加密</h3>

<ul>
<li>导入Security.framework框架</li>
<li>将self_public_key.der加入到Xcode项目工程中</li>
<li>添加如下方法：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span><span class="p">(</span><span class="n">SecKeyRef</span><span class="p">)</span><span class="nf">getPublicSecKey</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="cm">/* Open and parse the cert*/</span>
</span><span class='line'>    <span class="n">NSData</span> <span class="o">*</span><span class="n">certData</span> <span class="o">=</span><span class="p">[</span><span class="n">NSData</span> <span class="nl">dataWithContentsOfFile:</span><span class="p">[[</span><span class="n">NSBundle</span> <span class="n">mainBundle</span><span class="p">]</span> <span class="nl">pathForResource:</span><span class="s">@&quot;self_public_key&quot;</span> <span class="nl">ofType:</span><span class="s">@&quot;der&quot;</span><span class="p">]];</span>
</span><span class='line'>    <span class="n">SecCertificateRef</span> <span class="n">cert</span> <span class="o">=</span><span class="n">SecCertificateCreateWithData</span><span class="p">(</span><span class="n">kCFAllocatorDefault</span><span class="p">,(</span><span class="n">__bridge</span> <span class="n">CFDataRef</span><span class="p">)</span><span class="n">certData</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SecPolicyRef</span> <span class="n">policy</span> <span class="o">=</span><span class="n">SecPolicyCreateBasicX509</span><span class="p">();</span>
</span><span class='line'>    <span class="n">SecTrustRef</span> <span class="n">trust</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">OSStatus</span> <span class="n">status</span> <span class="o">=</span><span class="n">SecTrustCreateWithCertificates</span><span class="p">(</span><span class="n">cert</span><span class="p">,</span> <span class="n">policy</span><span class="p">,</span><span class="o">&amp;</span><span class="n">trust</span><span class="p">);</span>
</span><span class='line'>    <span class="cm">/* You can ignore the SecTrustResultType, but you have to run SecTrustEvaluate                                                                                                                                                                                                                                                                                                                                                                   * before you can get the public key */</span>
</span><span class='line'>    <span class="n">SecTrustResultType</span> <span class="n">trustResult</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">status</span> <span class="o">==</span> <span class="n">noErr</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">status</span> <span class="o">=</span><span class="n">SecTrustEvaluate</span><span class="p">(</span><span class="n">trust</span><span class="p">,</span><span class="o">&amp;</span><span class="n">trustResult</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/* Now grab the public key from the cert */</span>
</span><span class='line'>    <span class="n">SecKeyRef</span> <span class="n">publicKey</span> <span class="o">=</span><span class="n">SecTrustCopyPublicKey</span><span class="p">(</span><span class="n">trust</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/* Free the Security Framework! */</span>
</span><span class='line'>    <span class="n">CFRelease</span><span class="p">(</span><span class="n">cert</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CFRelease</span><span class="p">(</span><span class="n">policy</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CFRelease</span><span class="p">(</span><span class="n">trust</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">publicKey</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="n">NSData</span><span class="o">*</span><span class="p">)</span><span class="nf">encryptWithData:</span><span class="p">(</span><span class="n">NSData</span><span class="o">*</span><span class="p">)</span><span class="nv">content</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">SecKeyRef</span> <span class="n">publicKey</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="n">getPublicSecKey</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/*Your plain text string is shorter than the block size in cipherBufferLength,</span>
</span><span class='line'><span class="cm">     *else you&#39;ll need to split it into blocks of that size*/</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">length</span> <span class="o">=</span> <span class="p">[</span><span class="n">content</span> <span class="n">length</span><span class="p">];</span>
</span><span class='line'>    <span class="n">size_t</span> <span class="n">cipherBufferSize</span> <span class="o">=</span> <span class="n">SecKeyGetBlockSize</span><span class="p">(</span><span class="n">publicKey</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">length</span> <span class="o">&gt;</span> <span class="n">cipherBufferSize</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;content is too long&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/* in case inputData is released before we&#39;re done... */</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">void</span> <span class="o">*</span><span class="n">bytes</span> <span class="o">=</span> <span class="p">[</span><span class="n">content</span> <span class="n">bytes</span><span class="p">];</span>
</span><span class='line'>    <span class="n">uint8_t</span> <span class="o">*</span><span class="n">plainText</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="n">length</span><span class="p">);</span>
</span><span class='line'>    <span class="n">memcpy</span><span class="p">(</span><span class="n">plainText</span><span class="p">,</span> <span class="n">bytes</span><span class="p">,</span> <span class="n">length</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">uint8_t</span> <span class="o">*</span><span class="n">cipherBuffer</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="n">cipherBufferSize</span><span class="p">);</span>
</span><span class='line'>    <span class="n">memset</span><span class="p">((</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="n">cipherBuffer</span><span class="p">,</span> <span class="mh">0x0</span><span class="p">,</span> <span class="n">cipherBufferSize</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/* encrypt!! */</span>
</span><span class='line'>    <span class="n">NSData</span> <span class="o">*</span><span class="n">resultData</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>    <span class="n">OSStatus</span> <span class="n">returnCode</span> <span class="o">=</span> <span class="n">SecKeyEncrypt</span><span class="p">(</span><span class="n">publicKey</span><span class="p">,</span> <span class="n">kSecPaddingPKCS1</span><span class="p">,</span> <span class="n">plainText</span><span class="p">,</span> <span class="n">length</span><span class="p">,</span> <span class="n">cipherBuffer</span><span class="p">,</span><span class="o">&amp;</span><span class="n">cipherBufferSize</span><span class="p">);</span>
</span><span class='line'>    <span class="cm">/* Do something with your cipher text...like convert it to an NSData object,</span>
</span><span class='line'><span class="cm">     base64 encode it and send it to your server.  Check here for some good b64</span>
</span><span class='line'><span class="cm">     routines: https://github.com/mikeho/QSUtilities/blob/master/QSStrings.m</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">returnCode</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">resultData</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSData</span> <span class="nl">dataWithBytes:</span><span class="n">cipherBuffer</span> <span class="nl">length:</span><span class="n">cipherBufferSize</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CFRelease</span><span class="p">(</span><span class="n">publicKey</span><span class="p">);</span>
</span><span class='line'>    <span class="n">free</span><span class="p">(</span><span class="n">cipherBuffer</span><span class="p">);</span>
</span><span class='line'>    <span class="n">free</span><span class="p">(</span><span class="n">plainText</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">resultData</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>然后可将加密后的NSData进行HEX或者Base64编码，变成NSString进行传输。也可直接二进制使用</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用NSURLConnection请求HTTPS(SSL)接口]]></title>
    <link href="http://danielxu.github.com/blog/2013/01/10/connection-https-ssl-with-nsurlconnection/"/>
    <updated>2013-01-10T10:03:00+08:00</updated>
    <id>http://danielxu.github.com/blog/2013/01/10/connection-https-ssl-with-nsurlconnection</id>
    <content type="html"><![CDATA[<p>最近检测APP应用的网络请求，发现HTTP方式的接口，请求的数据比较容易让不道德的人截取并加以利用。所以建议接口请求数据的方式还是使用HTTPS(SSL)，相对的安全些。</p>

<p>在iOS中，使用NSURLConnection来请求HTTPS，就需要处理SSL认证，NSURLConnectionDelegate中定义了处理认证的方法：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="err">–</span> <span class="nl">connection:canAuthenticateAgainstProtectionSpace:</span>
</span><span class='line'><span class="err">–</span> <span class="nl">connection:didReceiveAuthenticationChallenge:</span>
</span><span class='line'><span class="o">-</span> <span class="nl">connection:didCancelAuthenticationChallenge:</span>
</span></code></pre></td></tr></table></div></figure>


<h3>NSURLConnection中处理SSL</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">connection:</span><span class="p">(</span><span class="n">NSURLConnection</span> <span class="o">*</span><span class="p">)</span><span class="nv">connection</span> <span class="nf">canAuthenticateAgainstProtectionSpace:</span><span class="p">(</span><span class="n">NSURLProtectionSpace</span> <span class="o">*</span><span class="p">)</span><span class="nv">protectionSpace</span><span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">[</span><span class="n">protectionSpace</span><span class="p">.</span><span class="n">authenticationMethod</span> <span class="nl">isEqualToString:</span><span class="n">NSURLAuthenticationMethodServerTrust</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>接收任何证书</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">connection:</span><span class="p">(</span><span class="n">NSURLConnection</span> <span class="o">*</span><span class="p">)</span><span class="nv">connection</span> <span class="nf">didReceiveAuthenticationChallenge:</span><span class="p">(</span><span class="n">NSURLAuthenticationChallenge</span> <span class="o">*</span><span class="p">)</span><span class="nv">challenge</span><span class="p">{</span>
</span><span class='line'>        <span class="p">[</span><span class="n">challenge</span><span class="p">.</span><span class="n">sender</span> <span class="nl">useCredential:</span><span class="p">[</span><span class="n">NSURLCredential</span> <span class="nl">credentialForTrust:</span><span class="n">challenge</span><span class="p">.</span><span class="n">protectionSpace</span><span class="p">.</span><span class="n">serverTrust</span><span class="p">]</span> <span class="nl">forAuthenticationChallenge:</span><span class="n">challenge</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<ul>
<li>使用私有证书验证</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">connection:</span><span class="p">(</span><span class="n">NSURLConnection</span> <span class="o">*</span><span class="p">)</span><span class="nv">connection</span> <span class="nf">didReceiveAuthenticationChallenge:</span><span class="p">(</span><span class="n">NSURLAuthenticationChallenge</span> <span class="o">*</span><span class="p">)</span><span class="nv">challenge</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>        <span class="k">static</span> <span class="n">CFArrayRef</span> <span class="n">certs</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">certs</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">NSData</span> <span class="o">*</span><span class="n">certData</span> <span class="o">=</span><span class="p">[</span><span class="n">NSData</span> <span class="nl">dataWithContentsOfFile:</span><span class="p">[[</span><span class="n">NSBundle</span> <span class="n">mainBundle</span><span class="p">]</span> <span class="nl">pathForResource:</span><span class="s">@&quot;srca&quot;</span> <span class="nl">ofType:</span><span class="s">@&quot;cer&quot;</span><span class="p">]];</span>
</span><span class='line'>            <span class="n">SecCertificateRef</span> <span class="n">rootcert</span> <span class="o">=</span><span class="n">SecCertificateCreateWithData</span><span class="p">(</span><span class="n">kCFAllocatorDefault</span><span class="p">,</span><span class="n">CFBridgingRetain</span><span class="p">(</span><span class="n">certData</span><span class="p">));</span>
</span><span class='line'>            <span class="k">const</span> <span class="kt">void</span> <span class="o">*</span><span class="n">array</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span> <span class="n">rootcert</span> <span class="p">};</span>
</span><span class='line'>            <span class="n">certs</span> <span class="o">=</span> <span class="n">CFArrayCreate</span><span class="p">(</span><span class="nb">NULL</span><span class="p">,</span> <span class="n">array</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">kCFTypeArrayCallBacks</span><span class="p">);</span>
</span><span class='line'>            <span class="n">CFRelease</span><span class="p">(</span><span class="n">rootcert</span><span class="p">);</span>    <span class="c1">// for completeness, really does not matter</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">SecTrustRef</span> <span class="n">trust</span> <span class="o">=</span> <span class="p">[[</span><span class="n">challenge</span> <span class="n">protectionSpace</span><span class="p">]</span> <span class="n">serverTrust</span><span class="p">];</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">err</span><span class="p">;</span>
</span><span class='line'>        <span class="n">SecTrustResultType</span> <span class="n">trustResult</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="n">err</span> <span class="o">=</span> <span class="n">SecTrustSetAnchorCertificates</span><span class="p">(</span><span class="n">trust</span><span class="p">,</span> <span class="n">certs</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">err</span> <span class="o">==</span> <span class="n">noErr</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">err</span> <span class="o">=</span> <span class="n">SecTrustEvaluate</span><span class="p">(</span><span class="n">trust</span><span class="p">,</span><span class="o">&amp;</span><span class="n">trustResult</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">CFRelease</span><span class="p">(</span><span class="n">trust</span><span class="p">);</span>
</span><span class='line'>        <span class="kt">BOOL</span> <span class="n">trusted</span> <span class="o">=</span> <span class="p">(</span><span class="n">err</span> <span class="o">==</span> <span class="n">noErr</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">((</span><span class="n">trustResult</span> <span class="o">==</span> <span class="n">kSecTrustResultProceed</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="n">trustResult</span> <span class="o">==</span> <span class="n">kSecTrustResultConfirm</span><span class="p">)</span> <span class="o">||</span> <span class="p">(</span><span class="n">trustResult</span> <span class="o">==</span> <span class="n">kSecTrustResultUnspecified</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">trusted</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="p">[</span><span class="n">challenge</span><span class="p">.</span><span class="n">sender</span> <span class="nl">useCredential:</span><span class="p">[</span><span class="n">NSURLCredential</span> <span class="nl">credentialForTrust:</span><span class="n">challenge</span><span class="p">.</span><span class="n">protectionSpace</span><span class="p">.</span><span class="n">serverTrust</span><span class="p">]</span> <span class="nl">forAuthenticationChallenge:</span><span class="n">challenge</span><span class="p">];</span>
</span><span class='line'>        <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>            <span class="p">[</span><span class="n">challenge</span><span class="p">.</span><span class="n">sender</span> <span class="nl">cancelAuthenticationChallenge:</span><span class="n">challenge</span><span class="p">];</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3><a href="https://github.com/AFNetworking/AFNetworking">AFNetworking</a> 框架中处理SSL</h3>

<p>使用<a href="http://afnetworking.github.com/AFNetworking/Classes/AFURLConnectionOperation.html#//api/name/setAuthenticationAgainstProtectionSpaceBlock:">AFURLConnectionOperation</a>类的两个方法，将上面的代码以block方式传入即可。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="err">–</span> <span class="nl">setAuthenticationAgainstProtectionSpaceBlock:</span>
</span><span class='line'><span class="err">–</span> <span class="nl">setAuthenticationChallengeBlock:</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NSLog格式化参数]]></title>
    <link href="http://danielxu.github.com/blog/2013/01/06/nslog-formatting-parameters/"/>
    <updated>2013-01-06T14:27:00+08:00</updated>
    <id>http://danielxu.github.com/blog/2013/01/06/nslog-formatting-parameters</id>
    <content type="html"><![CDATA[<p>每次打印都要去查文档，很麻烦，就把NSLog的打印参数提取出来放到这里。方面查看。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>%@     Object
</span><span class='line'>%d, %i signed int
</span><span class='line'>%u     unsigned int
</span><span class='line'>%f     float/double
</span><span class='line'>
</span><span class='line'>%x, %X hexadecimal int
</span><span class='line'>%o     octal int
</span><span class='line'>%zu    size_t
</span><span class='line'>%p     pointer
</span><span class='line'>%e     float/double (in scientific notation)
</span><span class='line'>%g     float/double (as %f or %e, depending on value)
</span><span class='line'>%s     C string (bytes)
</span><span class='line'>%S     C string (unichar)
</span><span class='line'>%.*s   Pascal string (requires two arguments, pass pstr[0] as the first, pstr+1 as the second)
</span><span class='line'>%c     character
</span><span class='line'>%C     unichar
</span><span class='line'>
</span><span class='line'>%lld   long long
</span><span class='line'>%llu   unsigned long long
</span><span class='line'>%Lf    long double</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[搭建基于github的博客]]></title>
    <link href="http://danielxu.github.com/blog/2013/01/06/setup-based-on-githubs-blog/"/>
    <updated>2013-01-06T10:56:00+08:00</updated>
    <id>http://danielxu.github.com/blog/2013/01/06/setup-based-on-githubs-blog</id>
    <content type="html"><![CDATA[<p>原理：基于<a href="https://github.com/">github</a>的<a href="http://pages.github.com/">Pages</a>功能,使用基于github模式的博客管理工具<a href="http://octopress.org/">Octopress</a>生成个人的独立博客站点。</p>

<hr />

<h1>安装</h1>

<h2>安装rvm和ruby（基于Mac）</h2>

<p>安装rvm：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bash -s stable &lt; &lt;(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer)</span></code></pre></td></tr></table></div></figure>


<p>设置classpath:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo '[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm" # Load RVM function' &gt;&gt; ~/.bash_profile
</span><span class='line'>source ~/.bash_profile</span></code></pre></td></tr></table></div></figure>


<p>安装ruby:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm install ruby-1.9.3-p194 
</span><span class='line'>rvm use ruby-1.9.3-p194
</span><span class='line'>rvm gemset create octopress
</span><span class='line'>rvm gemset use octopress
</span><span class='line'>rvm rubygems latest</span></code></pre></td></tr></table></div></figure>


<p>有可能这3步都不需要。一般现在的Mac系统都自带ruby环境。一般在/usr/local/rvm和/usr/bin/ruby目录下面。</p>

<!--more-->


<h2>设置github账号</h2>

<ul>
<li><p>Github的账号注册地址是：<a href="https://github.com/signup/free">https://github.com/signup/free</a> 。申请好github账号后，建一个名为 username.github.com 的代码仓库。这里注意username必须是和你的账号名一致。
如：ceshi</p></li>
<li><p>配置ssh在终端里面输入</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[[ -f ~/.ssh/id_rsa.pub ]] || ssh-keygen -t rsa</span></code></pre></td></tr></table></div></figure>


<p>按照默认提示一路确认，生成密钥之后，将生成的信息复制到github页面中.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[[ -f ~/.ssh/id_rsa.pub ]] && cat ~/.ssh/id_rsa.pub</span></code></pre></td></tr></table></div></figure>


<p>然后在浏览器中打开页面：</p>

<p><a href="https://github.com/account/ssh">https://github.com/account/ssh</a></p>

<p>点击，Add another public key，粘贴前面步骤复制的信息，请格外注意，不要在Title中填写内容，直接将复制的内容粘贴到Key中，然后点击：Add Key即可。</p>

<h2>安装Octopress</h2>

<p>clone源码：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/imathis/octopress.git ceshi.github.com
</span><span class='line'>cd ceshi.github.com    # If you use RVM, You'll be asked if you trust the .rvmrc file (say yes).
</span><span class='line'>git remote add ceshi git@github.com:ceshi/ceshi.github.com.git</span></code></pre></td></tr></table></div></figure>


<p>安装依赖：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install bundler
</span><span class='line'>bundle install</span></code></pre></td></tr></table></div></figure>


<p>安装Octopress：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake install</span></code></pre></td></tr></table></div></figure>


<h1>配置</h1>

<ul>
<li><p>主要是修改文件：_config.yml ，这个配置文件都有相应的注释。主要就是改一些博客头，作者名之类的东西。 注意最好把里面的twitter相关的信息全部删掉，否则由于GFW的原因，将会造成页面load很慢。</p></li>
<li><p>修改定制文件/source/_includes/custom/head.html 把google的自定义字体去掉，原因同上。</p></li>
</ul>


<h1>分享配置</h1>

<p>配置评论和分享到微博功能（接中国地气）</p>

<ul>
<li>在_config.yml中增加一项： weibo_share: true</li>
<li>修改 source/_includes/post/sharing.html ，增加：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>#为了不和octopress系统冲突，这里加了注释，使用时将注释删掉即可
</span><span class='line'>// 下面的大括号的左括号{是全角的，如果复制，请自行改成半角
</span><span class='line'> ｛% if site.weibo_share %}
</span><span class='line'>     ｛% include post/weibo.html %}
</span><span class='line'> ｛% endif %}
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>增加文件：source/_includes/post/weibo.html</li>
<li>访问 <a href="http://www.jiathis.com/">http://www.jiathis.com/</a> ，获取分享的代码,加入到weibo.html</li>
<li>访问 <a href="http://uyan.cc/">http://uyan.cc/</a> ，获得评论的代码,加入到weibo.html</li>
<li>获取代码的站点最好注册一下，可以统计分享、评论数据的</li>
</ul>


<h1>给文章添加版权信息</h1>

<ul>
<li>增加 source/_includes/post/copyright.htm，加入以下内容：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>原创<span class="ni">&amp;amp;</span>整理的文章，版权声明:自由转载-非商用<span class="ni">&amp;amp;</span>衍生-保持署名 | <span class="nt">&lt;a</span> <span class="na">herf=</span><span class="s">&quot;http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh&quot;</span><span class="nt">&gt;</span>Creative Commons BY-NC-ND 3.0<span class="nt">&lt;/a&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>修改 source/_layouts/post.html，在<footer>标签下增加如下代码：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>// 下面的大括号的左括号{是全角的，如果复制，请自行改成半角
</span><span class='line'><span class="nt">&lt;footer&gt;</span>
</span><span class='line'>    <span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">&quot;meta&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      ……省略代码
</span><span class='line'>      ｛% include post/categories.html %}
</span><span class='line'>    <span class="nt">&lt;/p&gt;</span>
</span><span class='line'>    <span class="c">&lt;!--这里是增加的 --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">&quot;meta&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      ｛% include post/copyright.html %}
</span><span class='line'>  <span class="nt">&lt;/p&gt;</span>
</span><span class='line'>  <span class="c">&lt;!--这里是增加的 --&gt;</span>
</span><span class='line'>    ｛% unless page.sharing == false %}
</span><span class='line'>      ｛% include post/sharing.html %}
</span><span class='line'>    ｛% endunless %}
</span><span class='line'>    ……省略代码
</span><span class='line'>  <span class="nt">&lt;/footer&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>写微博的方法</h1>

<p><a href="http://octopress.org/docs/blogging/">这里</a>有详细介绍：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake new_post<span class="o">[</span>‘article name’<span class="o">]</span> 生成博文框架，然后修改生成的文件即可
</span><span class='line'>rake generate 生成静态文件
</span></code></pre></td></tr></table></div></figure>


<p>配置octopress与github的连接：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake setup_github_pages <span class="c">#然后输入上面的git站点地址，如：git@github.com:ceshi/ceshi.github.com.git，这个配置只执行一次就可以了</span>
</span></code></pre></td></tr></table></div></figure>


<p>发布：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake watch 检测文件变化，实时生成新内容
</span><span class='line'>rake preview 在本机4000端口生成访问内容
</span><span class='line'>rake deploy 发布文件
</span></code></pre></td></tr></table></div></figure>


<p>第一次运行时，会询问是否建立对github的授权，输入：yes。</p>

<p>再创建一个新的github的source分支，用于保存写作的md源文件等。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git add .
</span><span class='line'>git commit -m <span class="s2">&quot;some changes&quot;</span>
</span><span class='line'>git push ceshi <span class="nb">source</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以到你的站点看看效果了：http://ceshi.github.com</p>

<h1>Mac OS X 10.9 Mavericks</h1>

<p>如果需要使用 <code>rvm</code> 更新，安装 ruby新版本，有可能需要重新验证环境</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rvm requirements
</span></code></pre></td></tr></table></div></figure>


<p>如果中间出现什么其他的错误，可以使用<code>brew install xxx</code>安装缺少的依赖组件</p>

<h1>参考</h1>

<ul>
<li><a href="http://blog.devtang.com/blog/2012/02/10/setup-blog-based-on-github/">devtang</a></li>
<li><a href="http://www.yangzhiping.com/tech/octopress.html">yangzhiping</a></li>
<li><a href="http://pages.github.com/">github pages</a></li>
<li><a href="http://octopress.org/docs/blogging/">octopress blog</a></li>
<li><a href="http://www.moncefbelyamani.com/how-to-install-and-configure-octopress-on-a-mac/">moncefbelyamani</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
