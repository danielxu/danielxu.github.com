<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mac | CoreXDY'S Ben]]></title>
  <link href="http://danielxu.github.com/blog/categories/mac/atom.xml" rel="self"/>
  <link href="http://danielxu.github.com/"/>
  <updated>2013-12-15T02:43:14+08:00</updated>
  <id>http://danielxu.github.com/</id>
  <author>
    <name><![CDATA[徐大雨]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[在Mac上给git安装P4Merge]]></title>
    <link href="http://danielxu.github.com/blog/2013/11/29/git-on-mac-to-install-p4merge/"/>
    <updated>2013-11-29T22:49:00+08:00</updated>
    <id>http://danielxu.github.com/blog/2013/11/29/git-on-mac-to-install-p4merge</id>
    <content type="html"><![CDATA[<p>在使用Git作为源代码管理工具的时候，进行多人协作总会遇到合拼代码冲突的情况，如果靠人工一个文件一个文件的查找处理，将是多么麻烦的一件事情。所幸有免费的处理工具<a href="http://www.perforce.com/downloads/Perforce-Software-Version-Management/complete_list/Customer">P4Merge</a>,收费的就不说了。</p>

<p>P4Merge是一个Git版本库下的一个代码合并工具。免费，简单。</p>

<h2>安装</h2>

<p>双击下载回来的 P4V.dmg，将 p4merge 拖入到 Applications 文件夹内</p>

<!--more-->


<h2>配置</h2>

<h3>创建运行脚本</h3>

<p>创建2个p4merge命令行运行的脚本，如下：</p>

<h4>p4merge</h4>

<p><code>bash
sudo vi /usr/local/bin/p4merge
</code></p>

<p>将下面的复制到p4merge文件中,保存</p>

<p>```</p>

<h1>!/bin/sh</h1>

<p>/Applications/p4merge.app/Contents/MacOS/p4merge $*
```</p>

<h4>p4diff</h4>

<p><code>bash
sudo vi /usr/local/bin/p4diff
</code></p>

<p>将下面的复制到p4diff文件中,保存</p>

<p>```</p>

<h1>!/bin/sh</h1>

<p>[ $# -eq 7 ] &amp;&amp; /usr/local/bin/p4merge "$2" "$PWD/$5"
```</p>

<h4>修改运行权限</h4>

<p><code>bash
$ sudo chmod +x /usr/local/bin/p4merge   
$ sudo chmod +x /usr/local/bin/p4diff
</code></p>

<h3>配置GIT</h3>

<p><code>bash
vi ~/.gitconfig
</code>
增加如下的p4merge配置，保存。</p>

<p>```
[merge]</p>

<pre><code>tool = p4merge
keepBackup = false
</code></pre>

<p>[mergetool "p4merge"]</p>

<pre><code>cmd = p4merge "$BASE" "$LOCAL" "$REMOTE" "$MERGED"
keepTemporaries = false
trustExitCode = false
keepBackup = false
</code></pre>

<p>[diff]</p>

<pre><code>external = p4diff
</code></pre>

<p>```</p>

<p>在进行版本合并的时候，如果出现不能自动merge的情况，就可以使用<code>git mergetool</code> 或者 <code>git diff</code>处理你的代码</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GoAgentX 智能代理]]></title>
    <link href="http://danielxu.github.com/blog/2013/02/18/goagentx-privoxy/"/>
    <updated>2013-02-18T12:29:00+08:00</updated>
    <id>http://danielxu.github.com/blog/2013/02/18/goagentx-privoxy</id>
    <content type="html"><![CDATA[<h2>GoAgent &amp; GoAgentX</h2>

<p><a href="https://code.google.com/p/goagent/">GoAgent</a>是一个基于Google App Engine的翻墙工具。</p>

<p><a href="https://github.com/liuyix/GoAgentX">GoAgentX</a> 是一个在 Mac OS X 下使用代理服务的图形界面控制软件，方便一般用户在 Mac OS X 上配置和使用 goagent、west-chamber-season-3、SSH 以及 stunnel。</p>

<p>安装教程可自行Google搜索。</p>

<!--more-->


<h2>步骤1：申请创建一个Application</h2>

<h3>1、申请Google App Engine账号</h3>

<p>登录http://appengine.google.com，如果你已经拥有一个Gmail账户，直接输入账号密码就可以登录；如果没有则需要新申请一个Gmail账户。</p>

<h3>2、创建Application</h3>

<p><img src="/images/goagnet/1.jpg"></p>

<h3>3、通过短信验证你的账户</h3>

<p>需要短信验证才可以进行下一步操作，Country and Carrier（国家和运营商）处选择Other，Mobile Number（手机号码）处填写你的个人手机号码号码，格式为+8613912345678</p>

<p><img src="/images/goagnet/2.jpg"></p>

<h3>4、将手机收到的验证码输入并Send</h3>

<p>你将会收到谷歌发给你的短信，短信内容大致为：Google App Engine：******（六位数字）。</p>

<p><img src="/images/goagnet/3.jpg"></p>

<h3>5、创建一个属于你的Application</h3>

<ul>
<li>1）输入一个Application ID，允许使用英文字母和短横杆；</li>
<li>2）点击Check Available，检查一下是否可用；</li>
<li>3）输入Application名称，这里可以随便填；</li>
<li>4）勾选I accept these terms，即接受协议；</li>
<li>5）最后Creat Application</li>
</ul>


<p><img src="/images/goagnet/4.jpg"></p>

<p>Final -当你看到以下画面，说明你已经成功创建一个 Application</p>

<p><img src="/images/goagnet/5.jpg"></p>

<p>注：每个Gmail账户最多只能够创建10个Google App Engine应用，每个应用每天有1GB免费流量。如果你经常下载或者观看视频，建议多创建几个Google App Engine应用。</p>

<h2>步骤2：修改谷歌账号两步验证</h2>

<h3>1、进入设置</h3>

<p>进入谷歌账户设置页面https://www.google.com/settings，在"安全性"-"两步认证"处开始进行设置</p>

<p><img src="/images/goagnet/6.jpg"></p>

<h3>2、手机设置</h3>

<p>此处你需要点击发送验证码，获取验证码后提交确认进入下一步</p>

<p><img src="/images/goagnet/8.jpg"></p>

<h3>3、验证计算机</h3>

<p>如果当前计算机不是你个人的计算机，不要勾选信任此计算机；</p>

<p><img src="/images/goagnet/9.jpg"></p>

<h3>4、最后</h3>

<p>激活</p>

<p><img src="/images/goagnet/10.jpg"></p>

<p>开始为你的Application创建密码</p>

<p><img src="/images/goagnet/11.jpg"></p>

<p>生成密码</p>

<p><img src="/images/goagnet/12.jpg"></p>

<p>记下这里生成的密码</p>

<p><img src="/images/goagnet/13.jpg"></p>

<p>以上步骤有可能有些地方会稍微不同，不过总体来说就是这样，应该大家照着图来做都可以做到这步</p>

<h2>步骤3：GoAgentX</h2>

<p>把下载好的GoAgentX安装上，打开。</p>

<h3>设置AppEngine信息</h3>

<p><img src="/images/goagnet/14.png"></p>

<ul>
<li>App ID是你刚才申请的那个</li>
<li>用户名是你gmail邮箱</li>
<li>密码这里要注意了，这个不是gmail邮箱的密码，是上面第4步最后一个操作生成的密码。</li>
<li>服务密码可设置也可不设置</li>
</ul>


<h3>部署goagent服务端</h3>

<p><img src="/images/goagnet/16.png"></p>

<p>点击启动，进行服务端部署，部署好后在服务端配置中添入App Engine App ID</p>

<p><img src="/images/goagnet/17.png"></p>

<p>最后在此界面选择goagent，启动</p>

<p><img src="/images/goagnet/18.png"></p>

<p>其他方面的配置，可Google搜索。</p>

<h2>步骤4：浏览器配置</h2>

<p><a href="https://chrome.google.com/webstore/detail/proxy-switchysharp/dpplabbmogkhghncfbfdeeokoefdjegm">SwitchySharp插件</a>，SwitchySharp插件加上自动更新的“墙”List（地址见下图），我们就可以在浏览器中享受无墙的世界了。</p>

<p><img src="/images/goagnet/switch-sharp.png"></p>

<h2>Privoxy（与GoAgent配合）</h2>

<p>使用GoAgentX的话一般不需要配置这个</p>

<p>Privoxy是一个智能代理切换软件，它的使用必须基于GoAgent或其它已部署好的代理服务。下面介绍如何安装和配置privoxy。</p>

<h3>安装</h3>

<p>使用brew就可以一键安装：</p>

<p><code>bash
brew install privoxy
</code></p>

<h3>自动启动</h3>

<p>设置好自动启动后，我们就不用管它了。方法如下：</p>

<p>切换到/Library/LaunchAgents目录，用sudo vim新建一个名为local.privoxy.plist的文件，文件内容如下所示：</p>

<p>``` xml
&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict></p>

<pre><code>&lt;key&gt;Label&lt;/key&gt;
&lt;string&gt;local.arcueid.privoxy&lt;/string&gt;
&lt;key&gt;ProgramArguments&lt;/key&gt;
&lt;array&gt;
    &lt;string&gt;/usr/local/sbin/privoxy&lt;/string&gt;
    &lt;string&gt;--no-daemon&lt;/string&gt;
    &lt;string&gt;/usr/local/etc/privoxy/config&lt;/string&gt;
&lt;/array&gt;
&lt;key&gt;RunAtLoad&lt;/key&gt;
&lt;true/&gt;
&lt;key&gt;KeepAlive&lt;/key&gt;
&lt;true/&gt;
&lt;key&gt;StandardErrorPath&lt;/key&gt;
&lt;string&gt;/usr/local/Cellar/privoxy/3.0.19/sbin/privoxy.log&lt;/string&gt;
&lt;key&gt;StandardOutPath&lt;/key&gt;
&lt;string&gt;/usr/local/Cellar/privoxy/3.0.19/sbin/privoxy.log&lt;/string&gt;
</code></pre>

<p></dict>
</plist>
```</p>

<p>编辑完成后，执行如下命令，就可以把privoxy设置成开机自动启动了：</p>

<p><code>bash
sudo launchctl load /Library/LaunchAgents/local.privoxy.plist
</code></p>

<p>可以用如下2条命令验证privoxy已经启动了。一是用ps查看是否有privoxy进程，二是查看privoxy默认监听的8118端口是否已经打开。如下所示：</p>

<p><code>bash
[tangqiao LaunchAgents]$ps aux  | grep privoxy
tangqiao       25641   0.3  0.0  2436516    492 s001  U+    5:31下午   0:00.00 grep --color=auto privoxy
root           17984   0.0  0.2  2477764  17452   ??  Ss   10:13上午   0:50.28 /usr/local/Cellar/privoxy/3.0.19/sbin/privoxy --no-daemon /usr/local/etc/privoxy/config
[tangqiao LaunchAgents]$netstat -an | grep 8118
tcp4       0      0  127.0.0.1.8118         *.*                    LISTEN   
</code></p>

<h3>配置</h3>

<p>我们需要配置Provixy才能使用它。配置步骤如下：</p>

<p>一. 用vim打开privoxy的配置文件：vim /usr/local/etc/privoxy/config
在最后增加如下内容：
```</p>

<pre><code>actionsfile wall.action
</code></pre>

<p>```</p>

<p>二. 在/usr/local/etc/privoxy/目录下新建一个名为 wall.action的文件，然后在上面添加如下内容：</p>

<p><code>
{+forward-override{forward 0.0.0.0:8087}}
.google.com.hk
.facebook.com
.google.com
.fbcdn.net
.gstatic.com
.gmail.com
.twitter.com
.youtube.com
</code></p>

<p>该内容第一行表示接下来的内容会智能走端口为8087的代理，后面每行一个地址。你可以随时将你想增加的内容添加进去。该配置文件的官方详细说明文档<a href="http://www.privoxy.org/3.0.19/user-manual/actions-file.html#ACTIONS-FILE">在这里</a>。</p>

<p>三. 打开mac的代理设置，将“Web代理”和"安全Web代理"都设置成127.0.0.1，端口为8118。如下图所示：</p>

<p>  <img src="/images/goagnet/mac-proxy.png"></p>

<h3>Tips</h3>

<ol>
<li><p>如果你的GoAgent监听在8087端口，而Privoxy监听在8118端口，那么到这一步，你就可以让你的所有应用正常翻墙了。
需要注意的是SwitchySharp默认会忽略系统代理直接连接网络，你可能需要选择它的“使用系统代理设置”这一项，如下所示：</p>

<p>  <img src="/images/goagnet/switch-sharp-use-system-proxy.png"></p></li>
<li><p>用浏览器访问 config.privoxy.org，即可用Web界面管理自己的provixy配置文件。不过，事先需要在config文件中启用Web管理功能，方法是编辑/usr/local/etc/privoxy/config 文件，将enable-edit-actions的值设置为1即可。</p></li>
<li><p>访问 <a href="http://config.privoxy.org/show-url-info">http://config.privoxy.org/show-url-info</a> 可以查询某一个特定的URL是否会走代理服务。我们可以随时在这儿查询，结合上面的第2步，将一些URL Pattern加入到代理列表文件 wall.action 中, 我们就可以方便地管理Privoxy。</p></li>
<li><p>证书是个麻烦事儿，由于GoAgent的证书是自己生成的而不是权威机构颁发的，所以需要把GoAgent的证书加到钥匙串访问的可信证书里面，如下图所示。另外GoAgent的默认带的证书因为是公开的，所以有潜在被<a href="http://zh.wikipedia.org/zh-hk/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB">中间人攻击</a>的危险，所以更安全的做法是把默认的证书删掉再重启GoAgent，这样GoAgent就会重新另外生成一个证书了，再把这个新证书加到钥匙串访问中，会更安全一些。
<img src="/images/goagnet/goagent-cer.png"></p></li>
</ol>


<h3>参考</h3>

<ul>
<li>http://iaiai.iteye.com/blog/1608369</li>
<li>http://blog.devtang.com/blog/2012/12/08/use-privoxy/</li>
</ul>

]]></content>
  </entry>
  
</feed>
